{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "NewTokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unpased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "internalType": "contract SquareVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[1]",
          "name": "input",
          "type": "uint256[1]"
        }
      ],
      "name": "mintNtf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"NewTokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Unpased\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[1]\",\"name\":\"input\",\"type\":\"uint256[1]\"}],\"name\":\"mintNtf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"internalType\":\"contract SquareVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/Context.sol\":{\"keccak256\":\"0x3d7d1c5526051a968d1d42b7e5d6b86cd6f7c79a7ce5938eb1a2194b6c10101c\",\"urls\":[\"bzz-raw://adf8473cf91ccd9384c68e705ba8e9640f1bdd6f53649a62ed198019ad40fb1a\",\"dweb:/ipfs/QmYk4yKxL9BmLXg831fBbeG3LbxQxXzJoprAwbVwvSGT2g\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xdb0bcdf9707030fdf0067366cec218f269376e479e4315e1d3b1cedbdde6fe4b\",\"urls\":[\"bzz-raw://e927fe38e3a7dff6c791f0bb5cb4cc5f67a9b0aee84fd8be37677917bd7d10a8\",\"dweb:/ipfs/QmPmR9aD9zVcAo5EcR5BQVWKUVKQqkZDJp3qeNtEzvHiT2\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xbb4513db3ad981abb4c8f6b3de8f14b576450f7b66f7f945131928aa44f21a32\",\"urls\":[\"bzz-raw://18b834228600d39f630fa52459225eb3daec45823d74128b6389b3e871f92e4d\",\"dweb:/ipfs/QmVaCdgAYqsX71pZnuHXAxxVxRYFdB1sPXpT9RBMddB1nP\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol\":{\"keccak256\":\"0xa52b0047ce4ddd62e734f3d563a6e26f0d12e8ed1d732f7dd4cf63e53379eda5\",\"urls\":[\"bzz-raw://4f7116d50a86644e327ec14ff51229082ab29b5acaa999e0ff159a146a995ed0\",\"dweb:/ipfs/QmcGbGsfJepdDEtaJM9rS2qLEVLgqVTx55Tg4rbXaa3ymD\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x4573bf23043e3f7124b720a4287e2a525ad3b8d815b6c363e5492a85055cbf32\",\"urls\":[\"bzz-raw://7fb22f66d871aca6d0bbd04e532a7d0c1034df9e75baddd02aea38cf92a764f9\",\"dweb:/ipfs/QmYu6su1mQk39UpY5vUYQTTUi9QWzwQeYVjuRkBo1hWHgL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80635a156750116100f957806395d89b4111610097578063bdc32be011610071578063bdc32be014610503578063c87b56dd14610521578063e985e9c514610551578063f2fde38b14610581576101c4565b806395d89b41146104ad578063a22cb465146104cb578063b88d4fde146104e7576101c4565b8063715018a6116100d3578063715018a6146104375780637e9ce8d3146104415780638da5cb5b146104715780638f32d59b1461048f576101c4565b80635a156750146103bb5780636352211e146103d757806370a0823114610407576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f191461032157806342842e0e146103515780634c1b1c931461036d5780634f6ccce71461038b576101c4565b806327dc297e146102b95780632f745c59146102d557806338bbfa5014610305576101c4565b8063095ea7b3116101a2578063095ea7b31461024757806316c38b3c1461026357806318160ddd1461027f57806323b872dd1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de9190810190612ace565b61059d565b6040516101f0919061333f565b60405180910390f35b610201610605565b60405161020e9190613375565b60405180910390f35b610231600480360361022c9190810190612b20565b6106a7565b60405161023e9190613291565b60405180910390f35b610261600480360361025c919081019061296d565b61072c565b005b61027d600480360361027891908101906129a9565b6108e3565b005b610287610947565b6040516102949190613517565b60405180910390f35b6102b760048036036102b29190810190612867565b610954565b005b6102d360048036036102ce91908101906129fb565b610b83565b005b6102ef60048036036102ea919081019061296d565b610bc6565b6040516102fc9190613517565b60405180910390f35b61031f600480360361031a9190810190612a4f565b610c39565b005b61033b6004803603610336919081019061296d565b610c3e565b604051610348919061333f565b60405180910390f35b61036b60048036036103669190810190612867565b610d01565b005b610375610d21565b604051610382919061335a565b60405180910390f35b6103a560048036036103a09190810190612b20565b610d47565b6040516103b29190613517565b60405180910390f35b6103d560048036036103d09190810190612b49565b610d7b565b005b6103f160048036036103ec9190810190612b20565b610f9c565b6040516103fe9190613291565b60405180910390f35b610421600480360361041c9190810190612802565b610fd9565b60405161042e9190613517565b60405180910390f35b61043f611025565b005b61045b60048036036104569190810190612b85565b61112b565b604051610468919061333f565b60405180910390f35b610479611292565b6040516104869190613291565b60405180910390f35b6104976112bb565b6040516104a4919061333f565b60405180910390f35b6104b5611319565b6040516104c29190613375565b60405180910390f35b6104e560048036036104e09190810190612931565b6113bb565b005b61050160048036036104fc91908101906128b6565b6114f1565b005b61050b611517565b6040516105189190613375565b60405180910390f35b61053b60048036036105369190810190612b20565b6115b9565b6040516105489190613375565b60405180910390f35b61056b6004803603610566919081019061282b565b611680565b604051610578919061333f565b60405180910390f35b61059b60048036036105969190810190612802565b611714565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b60006106b282611767565b6106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e8906134f7565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61073581610f9c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079a906134b7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166107c382610f9c565b73ffffffffffffffffffffffffffffffffffffffff1614806107f357506107f26107ec82610f9c565b33611680565b5b610832576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610829906133d7565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6108eb6112bb565b61092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190613437565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6000600880549050905090565b8273ffffffffffffffffffffffffffffffffffffffff1661097482610f9c565b73ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190613457565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a31906133f7565b60405180910390fd5b610a43816117d9565b610a8a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611897565b610ad1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610bc2828260006040519080825280601f01601f191660200182016040528015610bbc5781602001600182028038833980820191505090505b50610c39565b5050565b6000610bd183610fd9565b8210610bdc57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c2657fe5b9060005260206000200154905092915050565b505050565b6000610c486112bb565b610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90613437565b60405180910390fd5b610c9183836118d0565b6060610c9c836118f1565b905080604051610cac919061327a565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b610d1c838383604051806020016040528060008152506114f1565b505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d51610947565b8210610d5c57600080fd5b60088281548110610d6957fe5b90600052602060002001549050919050565b610d83612401565b601460008460ff1660ff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160159054906101000a900460ff161515151581525050905060011515816040015115151514610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a90613477565b60405180910390fd5b60405180606001604052808460ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601460008560ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507febd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb8383604051610f8f929190613532565b60405180910390a1505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b61102d6112bb565b61106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106390613437565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd129313878787876040518563ffffffff1660e01b815260040161118f94939291906132f8565b60206040518083038186803b1580156111a757600080fd5b505afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111df91908101906129d2565b90506001151581151514611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f90613497565b60405180910390fd5b6112328733610d7b565b61123f338860ff16610c3e565b91506001151582151514611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127f906134d7565b60405180910390fd5b5095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112fd611a1c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b15780601f10611386576101008083540402835291602001916113b1565b820191906000526020600020905b81548152906001019060200180831161139457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113f457600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114e5919061333f565b60405180910390a35050565b6114fc848484610954565b61150884848484611a24565b61151157600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115af5780601f10611584576101008083540402835291602001916115af565b820191906000526020600020905b81548152906001019060200180831161159257829003601f168201915b5050505050905090565b60606115c482611767565b6115cd57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116745780601f1061164957610100808354040283529160200191611674565b820191906000526020600020905b81548152906001019060200180831161165757829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61171c6112bb565b61175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290613437565b60405180910390fd5b61176481611b3b565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118945760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6118af60018260000154611c6990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6118da8282611cb3565b6118e48282611e4d565b6118ed81611f14565b5050565b60606118fc82611767565b61193b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193290613397565b60405180910390fd5b60606119e960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119d65780601f106119ab576101008083540402835291602001916119d6565b820191906000526020600020905b8154815290600101906020018083116119b957829003601f168201915b50505050506119e485611f60565b61208d565b905080601260008581526020019081526020016000209080519060200190611a1292919061243d565b5080915050919050565b600033905090565b6000611a458473ffffffffffffffffffffffffffffffffffffffff166120d1565b611a525760019050611b33565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611a9394939291906132ac565b602060405180830381600087803b158015611aad57600080fd5b505af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ae59190810190612af7565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba2906133b7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cab83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120e4565b905092915050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4c90613417565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dee600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fa8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612088565b600082905060005b60008214611fd2578080600101915050600a8281611fca57fe5b049150611fb0565b6060816040519080825280601f01601f1916602001820160405280156120075781602001600182028038833980820191505090505b50905060006001830390505b6000861461208057600a868161202557fe5b0660300160f81b8282806001900393508151811061203f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161207857fe5b049550612013565b819450505050505b919050565b60606120c9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061213f565b905092915050565b600080823b905060008111915050919050565b600083831115829061212c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121239190613375565b60405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561219b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612220578881815181106121c757fe5b602001015160f81c60f81b8383806001019450815181106121e457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121b2565b600090505b87518110156122935787818151811061223a57fe5b602001015160f81c60f81b83838060010194508151811061225757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612225565b600090505b8651811015612306578681815181106122ad57fe5b602001015160f81c60f81b8383806001019450815181106122ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612298565b600090505b85518110156123795785818151811061232057fe5b602001015160f81c60f81b83838060010194508151811061233d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061230b565b600090505b84518110156123ec5784818151811061239357fe5b602001015160f81c60f81b8383806001019450815181106123b057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061237e565b82995050505050505050505095945050505050565b6040518060600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061247e57805160ff19168380011785556124ac565b828001600101855582156124ac579182015b828111156124ab578251825591602001919060010190612490565b5b5090506124b991906124bd565b5090565b6124df91905b808211156124db5760008160009055506001016124c3565b5090565b90565b6000813590506124f181613897565b92915050565b600082601f83011261250857600080fd5b600261251b61251682613588565b61355b565b9150818385604084028201111561253157600080fd5b60005b83811015612561578161254788826125df565b845260208401935060408301925050600181019050612534565b5050505092915050565b600082601f83011261257c57600080fd5b600161258f61258a826135aa565b61355b565b915081838560208402820111156125a557600080fd5b60005b838110156125d557816125bb88826127d8565b8452602084019350602083019250506001810190506125a8565b5050505092915050565b600082601f8301126125f057600080fd5b60026126036125fe826135cc565b61355b565b9150818385602084028201111561261957600080fd5b60005b83811015612649578161262f88826127d8565b84526020840193506020830192505060018101905061261c565b5050505092915050565b600082601f83011261266457600080fd5b6002612677612672826135ee565b61355b565b9150818385602084028201111561268d57600080fd5b60005b838110156126bd57816126a388826127d8565b845260208401935060208301925050600181019050612690565b5050505092915050565b6000813590506126d6816138ae565b92915050565b6000815190506126eb816138ae565b92915050565b600081359050612700816138c5565b92915050565b600081359050612715816138dc565b92915050565b60008151905061272a816138dc565b92915050565b600082601f83011261274157600080fd5b813561275461274f82613610565b61355b565b9150808252602083016020830185838301111561277057600080fd5b61277b838284613844565b50505092915050565b600082601f83011261279557600080fd5b81356127a86127a38261363c565b61355b565b915080825260208301602083018583830111156127c457600080fd5b6127cf838284613844565b50505092915050565b6000813590506127e7816138f3565b92915050565b6000813590506127fc8161390a565b92915050565b60006020828403121561281457600080fd5b6000612822848285016124e2565b91505092915050565b6000806040838503121561283e57600080fd5b600061284c858286016124e2565b925050602061285d858286016124e2565b9150509250929050565b60008060006060848603121561287c57600080fd5b600061288a868287016124e2565b935050602061289b868287016124e2565b92505060406128ac868287016127d8565b9150509250925092565b600080600080608085870312156128cc57600080fd5b60006128da878288016124e2565b94505060206128eb878288016124e2565b93505060406128fc878288016127d8565b925050606085013567ffffffffffffffff81111561291957600080fd5b61292587828801612730565b91505092959194509250565b6000806040838503121561294457600080fd5b6000612952858286016124e2565b9250506020612963858286016126c7565b9150509250929050565b6000806040838503121561298057600080fd5b600061298e858286016124e2565b925050602061299f858286016127d8565b9150509250929050565b6000602082840312156129bb57600080fd5b60006129c9848285016126c7565b91505092915050565b6000602082840312156129e457600080fd5b60006129f2848285016126dc565b91505092915050565b60008060408385031215612a0e57600080fd5b6000612a1c858286016126f1565b925050602083013567ffffffffffffffff811115612a3957600080fd5b612a4585828601612784565b9150509250929050565b600080600060608486031215612a6457600080fd5b6000612a72868287016126f1565b935050602084013567ffffffffffffffff811115612a8f57600080fd5b612a9b86828701612784565b925050604084013567ffffffffffffffff811115612ab857600080fd5b612ac486828701612730565b9150509250925092565b600060208284031215612ae057600080fd5b6000612aee84828501612706565b91505092915050565b600060208284031215612b0957600080fd5b6000612b178482850161271b565b91505092915050565b600060208284031215612b3257600080fd5b6000612b40848285016127d8565b91505092915050565b60008060408385031215612b5c57600080fd5b6000612b6a858286016127ed565b9250506020612b7b858286016124e2565b9150509250929050565b60008060008060006101408688031215612b9e57600080fd5b6000612bac888289016127ed565b9550506020612bbd88828901612653565b9450506060612bce888289016124f7565b93505060e0612bdf88828901612653565b925050610120612bf18882890161256b565b9150509295509295909350565b6000612c0a8383612d51565b60408301905092915050565b6000612c22838361324d565b60208301905092915050565b612c37816137ea565b82525050565b612c468161375f565b82525050565b612c5581613690565b612c5f8184613706565b9250612c6a82613668565b8060005b83811015612c9b578151612c828782612bfe565b9650612c8d836136d2565b925050600181019050612c6e565b505050505050565b612cac8161369b565b612cb68184613711565b9250612cc182613672565b8060005b83811015612cf2578151612cd98782612c16565b9650612ce4836136df565b925050600181019050612cc5565b505050505050565b612d03816136b1565b612d0d8184613727565b9250612d1882613686565b8060005b83811015612d49578151612d308782612c16565b9650612d3b836136f9565b925050600181019050612d1c565b505050505050565b612d5a816136a6565b612d64818461371c565b9250612d6f8261367c565b8060005b83811015612da0578151612d878782612c16565b9650612d92836136ec565b925050600181019050612d73565b505050505050565b612db181613771565b82525050565b6000612dc2826136bc565b612dcc8185613732565b9350612ddc818560208601613853565b612de581613886565b840191505092915050565b612df9816137fc565b82525050565b6000612e0a826136c7565b612e148185613743565b9350612e24818560208601613853565b612e2d81613886565b840191505092915050565b6000612e43826136c7565b612e4d8185613754565b9350612e5d818560208601613853565b80840191505092915050565b6000612e76602083613743565b91507f546f6b656e20616c72656164792065786973747320696e20706c6174666f726d6000830152602082019050919050565b6000612eb6602683613743565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f1c603983613743565b91507f4d73672e73656e646572206d757374206265206f776e6572206f72206973417060008301527f70726f766564466f72416c6c206d7573742062652074727565000000000000006020830152604082019050919050565b6000612f82602483613743565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fe8601e83613743565b91507f546f6b656e20666f72206f776e657220616c72656164792065786973747300006000830152602082019050919050565b6000613028602083613743565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000613068602983613743565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006130ce601783613743565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b600061310e602c83613743565b91507f43616e6e6f74206d696e742061206e657720746f6b656e2d205665726966696360008301527f6174696f6e206661696c656400000000000000000000000000000000000000006020830152604082019050919050565b6000613174602183613743565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006131da601383613743565b91507f4572726f72206d696e74696e6720746f6b656e000000000000000000000000006000830152602082019050919050565b600061321a601483613743565b91507f546f6b656e20646f6573206e6f742065786974730000000000000000000000006000830152602082019050919050565b613256816137d3565b82525050565b613265816137d3565b82525050565b613274816137dd565b82525050565b60006132868284612e38565b915081905092915050565b60006020820190506132a66000830184612c3d565b92915050565b60006080820190506132c16000830187612c2e565b6132ce6020830186612c3d565b6132db604083018561325c565b81810360608301526132ed8184612db7565b905095945050505050565b60006101208201905061330e6000830187612cfa565b61331b6040830186612c4c565b61332860c0830185612cfa565b613336610100830184612ca3565b95945050505050565b60006020820190506133546000830184612da8565b92915050565b600060208201905061336f6000830184612df0565b92915050565b6000602082019050818103600083015261338f8184612dff565b905092915050565b600060208201905081810360008301526133b081612e69565b9050919050565b600060208201905081810360008301526133d081612ea9565b9050919050565b600060208201905081810360008301526133f081612f0f565b9050919050565b6000602082019050818103600083015261341081612f75565b9050919050565b6000602082019050818103600083015261343081612fdb565b9050919050565b600060208201905081810360008301526134508161301b565b9050919050565b600060208201905081810360008301526134708161305b565b9050919050565b60006020820190508181036000830152613490816130c1565b9050919050565b600060208201905081810360008301526134b081613101565b9050919050565b600060208201905081810360008301526134d081613167565b9050919050565b600060208201905081810360008301526134f0816131cd565b9050919050565b600060208201905081810360008301526135108161320d565b9050919050565b600060208201905061352c600083018461325c565b92915050565b6000604082019050613547600083018561326b565b6135546020830184612c3d565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561357e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561359f57600080fd5b602082029050919050565b600067ffffffffffffffff8211156135c157600080fd5b602082029050919050565b600067ffffffffffffffff8211156135e357600080fd5b602082029050919050565b600067ffffffffffffffff82111561360557600080fd5b602082029050919050565b600067ffffffffffffffff82111561362757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561365357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060019050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061376a826137b3565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006137f582613820565b9050919050565b60006138078261380e565b9050919050565b6000613819826137b3565b9050919050565b600061382b82613832565b9050919050565b600061383d826137b3565b9050919050565b82818337600083830152505050565b60005b83811015613871578082015181840152602081019050613856565b83811115613880576000848401525b50505050565b6000601f19601f8301169050919050565b6138a08161375f565b81146138ab57600080fd5b50565b6138b781613771565b81146138c257600080fd5b50565b6138ce8161377d565b81146138d957600080fd5b50565b6138e581613787565b81146138f057600080fd5b50565b6138fc816137d3565b811461390757600080fd5b50565b613913816137dd565b811461391e57600080fd5b5056fea365627a7a72315820e6297e186cb7854f99ca6f5b9b11214c90aab945e6e1f8d7a5b6341edd2a05366c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "232:1459:3:-;;;778:103;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:103:3;;;;;;;;;;;;;;;;;;;;;;;;20953:284:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:12;:10;;;:12;;:::i;:::-;615:6;;:21;;;;;;;;;;;;;;;;;;684:6;;;;;;;;;;;651:40;;680:1;651:40;;;;;;;;;;;;2841:16;2851:5;2841:9;;;:16;;:::i;:::-;3664:40;3261:10;3683:20;;3664:18;;;:40;;:::i;:::-;5810;5684:10;5829:20;;5810:18;;;:40;;:::i;:::-;13630:51;13236:10;13649:31;;13630:18;;;:51;;:::i;:::-;21102:4;21094:5;:12;;;;;;;;;;;;:::i;:::-;;21126:6;21116:7;:16;;;;;;;;;;;;:::i;:::-;;21158:12;21142:13;:28;;;;;;;;;;;;:::i;:::-;;21181:49;20764:10;21200:29;;21181:18;;;:49;;:::i;:::-;20953:284;;;860:15:3;828:14;;:48;;;;;;;;;;;;;;;;;;778:103;232:1459;;788:96:0;833:15;867:10;860:17;;788:96;:::o;2870:83:1:-;978:9;:7;;;:9;;:::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;2941:5;2931:7;;:15;;;;;;;;;;;;;;;;;;2870:83;:::o;4014:158::-;4104:10;4089:25;;:11;:25;;;;;4081:34;;;;;;4161:4;4125:20;:33;4146:11;4125:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4014:158;:::o;1125:92::-;1165:4;1204:6;;;;;;;;;;;1188:22;;:12;:10;;;:12;;:::i;:::-;:22;;;1181:29;;1125:92;:::o;232:1459:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:332;;577:67;641:2;636:3;577:67;;;570:74;;677:34;673:1;668:3;664:11;657:55;740:2;735:3;731:12;724:19;;563:186;;;;757:407;;948:2;937:9;933:18;925:26;;998:9;992:4;988:20;984:1;973:9;969:17;962:47;1023:131;1149:4;1023:131;;;1015:139;;919:245;;;;1172:163;;1287:6;1282:3;1275:19;1324:4;1319:3;1315:14;1300:29;;1268:67;;;;;1343:91;;1405:24;1423:5;1405:24;;;1394:35;;1388:46;;;;1441:121;;1514:42;1507:5;1503:54;1492:65;;1486:76;;;;1569:117;1638:24;1656:5;1638:24;;;1631:5;1628:35;1618:2;;1677:1;1674;1667:12;1618:2;1612:74;;232:1459:3;;;;;;;",
  "deployedSourceMap": "232:1459:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:1459:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:133:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21324:78;;;:::i;:::-;;;;;;;;;;;;;;;;7116:226;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6386:724;;;;;;;;;;;;;;;;:::i;:::-;;2870:83;;;;;;;;;;;;;;;;:::i;:::-;;14395:94;;;:::i;:::-;;;;;;;;;;;;;;;;8319:444;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;14061:182:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;23652:230:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8769:132;;;;;;;;;;;;;;;;:::i;:::-;;443:36:3;;;:::i;:::-;;;;;;;;;;;;;;;;14826:148:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;966:271:3;;;;;;;;;;;;;;;;:::i;:::-;;6151:162:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5863:282;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1559:137;;;:::i;:::-;;1242:447:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;774:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;1125:92;;;:::i;:::-;;;;;;;;;;;;;;;;21408:82;;;:::i;:::-;;;;;;;;;;;;;;;;7634:213;;;;;;;;;;;;;;;;:::i;:::-;;8907:211;;;;;;;;;;;;;;;;:::i;:::-;;21496:97;;;:::i;:::-;;;;;;;;;;;;;;;;21599:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8168:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1845:107;;;;;;;;;;;;;;;;:::i;:::-;;3802:133;3872:4;3895:20;:33;3916:11;3895:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3888:40;;3802:133;;;:::o;21324:78::-;21358:13;21390:5;21383:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21324:78;:::o;7116:226::-;7175:7;7253:16;7261:7;7253;:16::i;:::-;7245:49;;;;;;;;;;;;;;;;;;;;;;7311:15;:24;7327:7;7311:24;;;;;;;;;;;;;;;;;;;;;7304:31;;7116:226;;;:::o;6386:724::-;6549:16;6557:7;6549;:16::i;:::-;6543:22;;:2;:22;;;;6535:68;;;;;;;;;;;;;;;;;;;;;;6803:10;6783:30;;:16;6791:7;6783;:16::i;:::-;:30;;;:80;;;;6817:46;6834:16;6842:7;6834;:16::i;:::-;6852:10;6817:16;:46::i;:::-;6783:80;6774:152;;;;;;;;;;;;;;;;;;;;;;7016:2;6989:15;:24;7005:7;6989:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7095:7;7091:2;7070:33;;7079:10;7070:33;;;;;;;;;;;;6386:724;;:::o;2870:83::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;2941:5;2931:7;;:15;;;;;;;;;;;;;;;;;;2870:83;:::o;14395:94::-;14439:7;14465:10;:17;;;;14458:24;;14395:94;:::o;8319:444::-;8429:4;8409:24;;:16;8417:7;8409;:16::i;:::-;:24;;;8401:78;;;;;;;;;;;;;;;;;;;;;;8511:1;8497:16;;:2;:16;;;;8489:65;;;;;;;;;;;;;;;;;;;;;;8565:23;8580:7;8565:14;:23::i;:::-;8599:35;:17;:23;8617:4;8599:23;;;;;;;;;;;;;;;:33;:35::i;:::-;8644:33;:17;:21;8662:2;8644:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8711:2;8688:11;:20;8700:7;8688:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8748:7;8744:2;8729:27;;8738:4;8729:27;;;;;;;;;;;;8319:444;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;14061:182:1:-;14141:7;14176:16;14186:5;14176:9;:16::i;:::-;14168:5;:24;14160:33;;;;;;14210:12;:19;14223:5;14210:19;;;;;;;;;;;;;;;14230:5;14210:26;;;;;;;;;;;;;;;;14203:33;;14061:182;;;;:::o;14929:166:2:-;;;;:::o;23652:230:1:-;23718:4;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;23734:24;23746:2;23750:7;23734:11;:24::i;:::-;23769:17;23789:26;23807:7;23789:17;:26::i;:::-;23769:46;;23849:3;23830:23;;;;;;;;;;;;;;;23845:2;23830:23;;;;;;;;;;;;23871:4;23864:11;;;23652:230;;;;:::o;8769:132::-;8855:39;8872:4;8878:2;8882:7;8855:39;;;;;;;;;;;;:16;:39::i;:::-;8769:132;;;:::o;443:36:3:-;;;;;;;;;;;;;:::o;14826:148:1:-;14884:7;14919:13;:11;:13::i;:::-;14911:5;:21;14903:30;;;;;;14950:10;14961:5;14950:17;;;;;;;;;;;;;;;;14943:24;;14826:148;;;:::o;966:271:3:-;1032:19;;:::i;:::-;1054:9;:17;1064:6;1054:17;;;;;;;;;;;;;;;1032:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:4;1085:19;;1086:3;:10;;;1085:11;:19;;;1077:55;;;;;;;;;;;;;;;;;;;;;;1158:32;;;;;;;;1167:6;1158:32;;;;;;1175:8;1158:32;;;;;;1185:4;1158:32;;;;;1138:9;:17;1148:6;1138:17;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:31;1215:6;1223:8;1201:31;;;;;;;;;;;;;;;;966:271;;;:::o;6151:162:1:-;6206:7;6286:11;:20;6298:7;6286:20;;;;;;;;;;;;;;;;;;;;;6279:27;;6151:162;;;:::o;5863:282::-;5918:7;6107:17;:24;6125:5;6107:24;;;;;;;;;;;;;;;:31;;;6100:38;;5863:282;;;:::o;1559:137::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;1657:1;1620:40;;1641:6;;;;;;;;;;;1620:40;;;;;;;;;;;;1687:1;1670:6;;:19;;;;;;;;;;;;;;;;;;1559:137::o;1242:447:3:-;1387:11;1408:15;1426:14;;;;;;;;;;;:23;;;1450:1;1453;1456;1459:5;1426:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1426:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1426:39:3;;;;;;;;;1408:57;;1495:4;1481:18;;:10;:18;;;1473:75;;;;;;;;;;;;;;;;;;;;;;1556:31;1568:6;1576:10;1556:11;:31::i;:::-;1606:24;1611:10;1623:6;1606:24;;:4;:24::i;:::-;1597:33;;1656:4;1646:14;;:6;:14;;;1638:46;;;;;;;;;;;;;;;;;;;;;;1242:447;;;;;;;;:::o;774:77:1:-;812:7;838:6;;;;;;;;;;;831:13;;774:77;:::o;1125:92::-;1165:4;1204:6;;;;;;;;;;;1188:22;;:12;:10;:12::i;:::-;:22;;;1181:29;;1125:92;:::o;21408:82::-;21444:13;21476:7;21469:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21408:82;:::o;7634:213::-;7719:10;7713:16;;:2;:16;;;;7705:25;;;;;;7777:8;7740:18;:30;7759:10;7740:30;;;;;;;;;;;;;;;:34;7771:2;7740:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7827:2;7800:40;;7815:10;7800:40;;;7831:8;7800:40;;;;;;;;;;;;;;;7634:213;;:::o;8907:211::-;9013:31;9026:4;9032:2;9036:7;9013:12;:31::i;:::-;9062:48;9085:4;9091:2;9095:7;9104:5;9062:22;:48::i;:::-;9054:57;;;;;;8907:211;;;;:::o;21496:97::-;21541:13;21573;21566:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21496:97;:::o;21599:151::-;21657:13;21690:16;21698:7;21690;:16::i;:::-;21682:25;;;;;;21724:10;:19;21735:7;21724:19;;;;;;;;;;;21717:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21599:151;;;:::o;8168:145::-;8248:4;8271:18;:25;8290:5;8271:25;;;;;;;;;;;;;;;:35;8297:8;8271:35;;;;;;;;;;;;;;;;;;;;;;;;;8264:42;;8168:145;;;;:::o;1845:107::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;1917:28;1936:8;1917:18;:28::i;:::-;1845:107;:::o;9312:152::-;9369:4;9385:13;9401:11;:20;9413:7;9401:20;;;;;;;;;;;;;;;;;;;;;9385:36;;9455:1;9438:19;;:5;:19;;;;9431:26;;;9312:152;;;:::o;12509:171::-;12608:1;12572:38;;:15;:24;12588:7;12572:24;;;;;;;;;;;;;;;;;;;;;:38;;;12568:106;;12661:1;12626:15;:24;12642:7;12626:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12568:106;12509:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;15843:196:1:-;15906:24;15918:2;15922:7;15906:11;:24::i;:::-;15941:40;15969:2;15973:7;15941:27;:40::i;:::-;15992;16024:7;15992:31;:40::i;:::-;15843:196;;:::o;22228:275::-;22281:13;22314:16;22322:7;22314;:16::i;:::-;22306:61;;;;;;;;;;;;;;;;;;;;;;22377:17;22397:43;22407:13;22397:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22422:17;22431:7;22422:8;:17::i;:::-;22397:9;:43::i;:::-;22377:63;;22472:3;22450:10;:19;22461:7;22450:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;22493:3;22486:10;;;22228:275;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;12081:347:1:-;12202:4;12227:15;:2;:13;;;:15::i;:::-;12222:58;;12265:4;12258:11;;;;12222:58;12290:13;12322:2;12306:36;;;12343:10;12355:4;12361:7;12370:5;12306:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12306:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12306:70:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12306:70:1;;;;;;;;;12290:86;;4817:10;12404:16;;12394:26;;;:6;:26;;;;12386:35;;;12081:347;;;;;;;:::o;2053:225::-;2146:1;2126:22;;:8;:22;;;;2118:73;;;;;;;;;;;;;;;;;;;;;;2235:8;2206:38;;2227:6;;;;;;;;;;;2206:38;;;;;;;;;;;;2263:8;2254:6;;:17;;;;;;;;;;;;;;;;;;2053:225;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;10227:467:1:-;10406:2;10382:26;;:11;:20;10394:7;10382:20;;;;;;;;;;;;;;;;;;;;;:26;;;;10374:69;;;;;;;;;;;;;;;;;;;;;;10557:2;10534:11;:20;10546:7;10534:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10569:33;:17;:21;10587:2;10569:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10679:7;10675:2;10654:33;;10663:10;10654:33;;;;;;;;;;;;10227:467;;:::o;16661:183::-;16774:12;:16;16787:2;16774:16;;;;;;;;;;;;;;;:23;;;;16745:17;:26;16763:7;16745:26;;;;;;;;;;;:52;;;;16807:12;:16;16820:2;16807:16;;;;;;;;;;;;;;;16829:7;16807:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16807:30:1;;;;;;;;;;;;;;;;;;;;;;16661:183;;:::o;17039:161::-;17142:10;:17;;;;17115:15;:24;17131:7;17115:24;;;;;;;;;;;:44;;;;17169:10;17185:7;17169:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17169:24:1;;;;;;;;;;;;;;;;;;;;;;17039:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:468:8:-;746:4;1004:12;1113:7;1101:20;1093:28;;1146:1;1139:4;:8;1132:15;;;686:468;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;232:1459:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;164:673;;298:3;291:4;283:6;279:17;275:27;265:2;;316:1;313;306:12;265:2;340:4;359:97;374:81;448:6;374:81;;;359:97;;;350:106;;473:5;532:6;579:3;571:4;563:6;559:17;554:3;550:27;547:36;544:2;;;596:1;593;586:12;544:2;621:1;606:225;631:6;628:1;625:13;606:225;;;689:3;711:56;763:3;751:10;711:56;;;706:3;699:69;791:4;786:3;782:14;775:21;;819:4;814:3;810:14;803:21;;663:168;653:1;650;646:9;641:14;;606:225;;;610:14;258:579;;;;;;;;864:616;;979:3;972:4;964:6;960:17;956:27;946:2;;997:1;994;987:12;946:2;1021:4;1040:78;1055:62;1110:6;1055:62;;;1040:78;;;1031:87;;1135:5;1194:6;1241:3;1233:4;1225:6;1221:17;1216:3;1212:27;1209:36;1206:2;;;1258:1;1255;1248:12;1206:2;1283:1;1268:206;1293:6;1290:1;1287:13;1268:206;;;1351:3;1373:37;1406:3;1394:10;1373:37;;;1368:3;1361:50;1434:4;1429:3;1425:14;1418:21;;1462:4;1457:3;1453:14;1446:21;;1325:149;1315:1;1312;1308:9;1303:14;;1268:206;;;1272:14;939:541;;;;;;;;1507:608;;1618:3;1611:4;1603:6;1599:17;1595:27;1585:2;;1636:1;1633;1626:12;1585:2;1660:4;1679:74;1694:58;1745:6;1694:58;;;1679:74;;;1670:83;;1770:5;1829:6;1876:3;1868:4;1860:6;1856:17;1851:3;1847:27;1844:36;1841:2;;;1893:1;1890;1883:12;1841:2;1918:1;1903:206;1928:6;1925:1;1922:13;1903:206;;;1986:3;2008:37;2041:3;2029:10;2008:37;;;2003:3;1996:50;2069:4;2064:3;2060:14;2053:21;;2097:4;2092:3;2088:14;2081:21;;1960:149;1950:1;1947;1943:9;1938:14;;1903:206;;;1907:14;1578:537;;;;;;;;2142:616;;2257:3;2250:4;2242:6;2238:17;2234:27;2224:2;;2275:1;2272;2265:12;2224:2;2299:4;2318:78;2333:62;2388:6;2333:62;;;2318:78;;;2309:87;;2413:5;2472:6;2519:3;2511:4;2503:6;2499:17;2494:3;2490:27;2487:36;2484:2;;;2536:1;2533;2526:12;2484:2;2561:1;2546:206;2571:6;2568:1;2565:13;2546:206;;;2629:3;2651:37;2684:3;2672:10;2651:37;;;2646:3;2639:50;2712:4;2707:3;2703:14;2696:21;;2740:4;2735:3;2731:14;2724:21;;2603:149;2593:1;2590;2586:9;2581:14;;2546:206;;;2550:14;2217:541;;;;;;;;2766:124;;2843:6;2830:20;2821:29;;2855:30;2879:5;2855:30;;;2815:75;;;;;2897:128;;2978:6;2972:13;2963:22;;2990:30;3014:5;2990:30;;;2957:68;;;;;3032:130;;3112:6;3099:20;3090:29;;3124:33;3151:5;3124:33;;;3084:78;;;;;3169:128;;3248:6;3235:20;3226:29;;3260:32;3286:5;3260:32;;;3220:77;;;;;3304:132;;3387:6;3381:13;3372:22;;3399:32;3425:5;3399:32;;;3366:70;;;;;3444:440;;3545:3;3538:4;3530:6;3526:17;3522:27;3512:2;;3563:1;3560;3553:12;3512:2;3600:6;3587:20;3622:64;3637:48;3678:6;3637:48;;;3622:64;;;3613:73;;3706:6;3699:5;3692:21;3742:4;3734:6;3730:17;3775:4;3768:5;3764:16;3810:3;3801:6;3796:3;3792:16;3789:25;3786:2;;;3827:1;3824;3817:12;3786:2;3837:41;3871:6;3866:3;3861;3837:41;;;3505:379;;;;;;;;3893:442;;3995:3;3988:4;3980:6;3976:17;3972:27;3962:2;;4013:1;4010;4003:12;3962:2;4050:6;4037:20;4072:65;4087:49;4129:6;4087:49;;;4072:65;;;4063:74;;4157:6;4150:5;4143:21;4193:4;4185:6;4181:17;4226:4;4219:5;4215:16;4261:3;4252:6;4247:3;4243:16;4240:25;4237:2;;;4278:1;4275;4268:12;4237:2;4288:41;4322:6;4317:3;4312;4288:41;;;3955:380;;;;;;;;4343:130;;4423:6;4410:20;4401:29;;4435:33;4462:5;4435:33;;;4395:78;;;;;4480:126;;4558:6;4545:20;4536:29;;4570:31;4595:5;4570:31;;;4530:76;;;;;4613:241;;4717:2;4705:9;4696:7;4692:23;4688:32;4685:2;;;4733:1;4730;4723:12;4685:2;4768:1;4785:53;4830:7;4821:6;4810:9;4806:22;4785:53;;;4775:63;;4747:97;4679:175;;;;;4861:366;;;4982:2;4970:9;4961:7;4957:23;4953:32;4950:2;;;4998:1;4995;4988:12;4950:2;5033:1;5050:53;5095:7;5086:6;5075:9;5071:22;5050:53;;;5040:63;;5012:97;5140:2;5158:53;5203:7;5194:6;5183:9;5179:22;5158:53;;;5148:63;;5119:98;4944:283;;;;;;5234:491;;;;5372:2;5360:9;5351:7;5347:23;5343:32;5340:2;;;5388:1;5385;5378:12;5340:2;5423:1;5440:53;5485:7;5476:6;5465:9;5461:22;5440:53;;;5430:63;;5402:97;5530:2;5548:53;5593:7;5584:6;5573:9;5569:22;5548:53;;;5538:63;;5509:98;5638:2;5656:53;5701:7;5692:6;5681:9;5677:22;5656:53;;;5646:63;;5617:98;5334:391;;;;;;5732:721;;;;;5896:3;5884:9;5875:7;5871:23;5867:33;5864:2;;;5913:1;5910;5903:12;5864:2;5948:1;5965:53;6010:7;6001:6;5990:9;5986:22;5965:53;;;5955:63;;5927:97;6055:2;6073:53;6118:7;6109:6;6098:9;6094:22;6073:53;;;6063:63;;6034:98;6163:2;6181:53;6226:7;6217:6;6206:9;6202:22;6181:53;;;6171:63;;6142:98;6299:2;6288:9;6284:18;6271:32;6323:18;6315:6;6312:30;6309:2;;;6355:1;6352;6345:12;6309:2;6375:62;6429:7;6420:6;6409:9;6405:22;6375:62;;;6365:72;;6250:193;5858:595;;;;;;;;6460:360;;;6578:2;6566:9;6557:7;6553:23;6549:32;6546:2;;;6594:1;6591;6584:12;6546:2;6629:1;6646:53;6691:7;6682:6;6671:9;6667:22;6646:53;;;6636:63;;6608:97;6736:2;6754:50;6796:7;6787:6;6776:9;6772:22;6754:50;;;6744:60;;6715:95;6540:280;;;;;;6827:366;;;6948:2;6936:9;6927:7;6923:23;6919:32;6916:2;;;6964:1;6961;6954:12;6916:2;6999:1;7016:53;7061:7;7052:6;7041:9;7037:22;7016:53;;;7006:63;;6978:97;7106:2;7124:53;7169:7;7160:6;7149:9;7145:22;7124:53;;;7114:63;;7085:98;6910:283;;;;;;7200:235;;7301:2;7289:9;7280:7;7276:23;7272:32;7269:2;;;7317:1;7314;7307:12;7269:2;7352:1;7369:50;7411:7;7402:6;7391:9;7387:22;7369:50;;;7359:60;;7331:94;7263:172;;;;;7442:257;;7554:2;7542:9;7533:7;7529:23;7525:32;7522:2;;;7570:1;7567;7560:12;7522:2;7605:1;7622:61;7675:7;7666:6;7655:9;7651:22;7622:61;;;7612:71;;7584:105;7516:183;;;;;7706:472;;;7837:2;7825:9;7816:7;7812:23;7808:32;7805:2;;;7853:1;7850;7843:12;7805:2;7888:1;7905:53;7950:7;7941:6;7930:9;7926:22;7905:53;;;7895:63;;7867:97;8023:2;8012:9;8008:18;7995:32;8047:18;8039:6;8036:30;8033:2;;;8079:1;8076;8069:12;8033:2;8099:63;8154:7;8145:6;8134:9;8130:22;8099:63;;;8089:73;;7974:194;7799:379;;;;;;8185:701;;;;8342:2;8330:9;8321:7;8317:23;8313:32;8310:2;;;8358:1;8355;8348:12;8310:2;8393:1;8410:53;8455:7;8446:6;8435:9;8431:22;8410:53;;;8400:63;;8372:97;8528:2;8517:9;8513:18;8500:32;8552:18;8544:6;8541:30;8538:2;;;8584:1;8581;8574:12;8538:2;8604:63;8659:7;8650:6;8639:9;8635:22;8604:63;;;8594:73;;8479:194;8732:2;8721:9;8717:18;8704:32;8756:18;8748:6;8745:30;8742:2;;;8788:1;8785;8778:12;8742:2;8808:62;8862:7;8853:6;8842:9;8838:22;8808:62;;;8798:72;;8683:193;8304:582;;;;;;8893:239;;8996:2;8984:9;8975:7;8971:23;8967:32;8964:2;;;9012:1;9009;9002:12;8964:2;9047:1;9064:52;9108:7;9099:6;9088:9;9084:22;9064:52;;;9054:62;;9026:96;8958:174;;;;;9139:261;;9253:2;9241:9;9232:7;9228:23;9224:32;9221:2;;;9269:1;9266;9259:12;9221:2;9304:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;;;9311:73;;9283:107;9215:185;;;;;9407:241;;9511:2;9499:9;9490:7;9486:23;9482:32;9479:2;;;9527:1;9524;9517:12;9479:2;9562:1;9579:53;9624:7;9615:6;9604:9;9600:22;9579:53;;;9569:63;;9541:97;9473:175;;;;;9655:362;;;9774:2;9762:9;9753:7;9749:23;9745:32;9742:2;;;9790:1;9787;9780:12;9742:2;9825:1;9842:51;9885:7;9876:6;9865:9;9861:22;9842:51;;;9832:61;;9804:95;9930:2;9948:53;9993:7;9984:6;9973:9;9969:22;9948:53;;;9938:63;;9909:98;9736:281;;;;;;10024:962;;;;;;10305:3;10293:9;10284:7;10280:23;10276:33;10273:2;;;10322:1;10319;10312:12;10273:2;10357:1;10374:51;10417:7;10408:6;10397:9;10393:22;10374:51;;;10364:61;;10336:95;10462:2;10480:76;10548:7;10539:6;10528:9;10524:22;10480:76;;;10470:86;;10441:121;10593:2;10611:95;10698:7;10689:6;10678:9;10674:22;10611:95;;;10601:105;;10572:140;10743:3;10762:76;10830:7;10821:6;10810:9;10806:22;10762:76;;;10752:86;;10722:122;10875:3;10894:76;10962:7;10953:6;10942:9;10938:22;10894:76;;;10884:86;;10854:122;10267:719;;;;;;;;;10994:253;;11119:88;11203:3;11195:6;11119:88;;;11236:4;11231:3;11227:14;11213:28;;11112:135;;;;;11256:173;;11343:46;11385:3;11377:6;11343:46;;;11418:4;11413:3;11409:14;11395:28;;11336:93;;;;;11437:142;11528:45;11567:5;11528:45;;;11523:3;11516:58;11510:69;;;11586:113;11669:24;11687:5;11669:24;;;11664:3;11657:37;11651:48;;;11745:812;11916:71;11981:5;11916:71;;;12000:103;12096:6;12091:3;12000:103;;;11993:110;;12124:73;12191:5;12124:73;;;12217:7;12245:1;12230:315;12255:6;12252:1;12249:13;12230:315;;;12322:6;12316:13;12343:101;12440:3;12425:13;12343:101;;;12336:108;;12461:77;12531:6;12461:77;;;12451:87;;12287:258;12277:1;12274;12270:9;12265:14;;12230:315;;;12234:14;11895:662;;;;;;12598:660;12731:52;12777:5;12731:52;;;12796:84;12873:6;12868:3;12796:84;;;12789:91;;12901:54;12949:5;12901:54;;;12975:7;13003:1;12988:258;13013:6;13010:1;13007:13;12988:258;;;13080:6;13074:13;13101:63;13160:3;13145:13;13101:63;;;13094:70;;13181:58;13232:6;13181:58;;;13171:68;;13045:201;13035:1;13032;13028:9;13023:14;;12988:258;;;12992:14;12710:548;;;;;;13299:660;13432:52;13478:5;13432:52;;;13497:84;13574:6;13569:3;13497:84;;;13490:91;;13602:54;13650:5;13602:54;;;13676:7;13704:1;13689:258;13714:6;13711:1;13708:13;13689:258;;;13781:6;13775:13;13802:63;13861:3;13846:13;13802:63;;;13795:70;;13882:58;13933:6;13882:58;;;13872:68;;13746:201;13736:1;13733;13729:9;13724:14;;13689:258;;;13693:14;13411:548;;;;;;14000:624;14119:48;14161:5;14119:48;;;14180:74;14247:6;14242:3;14180:74;;;14173:81;;14275:50;14319:5;14275:50;;;14345:7;14373:1;14358:254;14383:6;14380:1;14377:13;14358:254;;;14450:6;14444:13;14471:63;14530:3;14515:13;14471:63;;;14464:70;;14551:54;14598:6;14551:54;;;14541:64;;14415:197;14405:1;14402;14398:9;14393:14;;14358:254;;;14362:14;14098:526;;;;;;14632:104;14709:21;14724:5;14709:21;;;14704:3;14697:34;14691:45;;;14743:343;;14853:38;14885:5;14853:38;;;14903:70;14966:6;14961:3;14903:70;;;14896:77;;14978:52;15023:6;15018:3;15011:4;15004:5;15000:16;14978:52;;;15051:29;15073:6;15051:29;;;15046:3;15042:39;15035:46;;14833:253;;;;;;15093:174;15200:61;15255:5;15200:61;;;15195:3;15188:74;15182:85;;;15274:347;;15386:39;15419:5;15386:39;;;15437:71;15501:6;15496:3;15437:71;;;15430:78;;15513:52;15558:6;15553:3;15546:4;15539:5;15535:16;15513:52;;;15586:29;15608:6;15586:29;;;15581:3;15577:39;15570:46;;15366:255;;;;;;15628:360;;15758:39;15791:5;15758:39;;;15809:89;15891:6;15886:3;15809:89;;;15802:96;;15903:52;15948:6;15943:3;15936:4;15929:5;15925:16;15903:52;;;15976:6;15971:3;15967:16;15960:23;;15738:250;;;;;;15996:332;;16156:67;16220:2;16215:3;16156:67;;;16149:74;;16256:34;16252:1;16247:3;16243:11;16236:55;16319:2;16314:3;16310:12;16303:19;;16142:186;;;;16337:375;;16497:67;16561:2;16556:3;16497:67;;;16490:74;;16597:34;16593:1;16588:3;16584:11;16577:55;16666:8;16661:2;16656:3;16652:12;16645:30;16703:2;16698:3;16694:12;16687:19;;16483:229;;;;16721:394;;16881:67;16945:2;16940:3;16881:67;;;16874:74;;16981:34;16977:1;16972:3;16968:11;16961:55;17050:27;17045:2;17040:3;17036:12;17029:49;17106:2;17101:3;17097:12;17090:19;;16867:248;;;;17124:373;;17284:67;17348:2;17343:3;17284:67;;;17277:74;;17384:34;17380:1;17375:3;17371:11;17364:55;17453:6;17448:2;17443:3;17439:12;17432:28;17488:2;17483:3;17479:12;17472:19;;17270:227;;;;17506:330;;17666:67;17730:2;17725:3;17666:67;;;17659:74;;17766:32;17762:1;17757:3;17753:11;17746:53;17827:2;17822:3;17818:12;17811:19;;17652:184;;;;17845:332;;18005:67;18069:2;18064:3;18005:67;;;17998:74;;18105:34;18101:1;18096:3;18092:11;18085:55;18168:2;18163:3;18159:12;18152:19;;17991:186;;;;18186:378;;18346:67;18410:2;18405:3;18346:67;;;18339:74;;18446:34;18442:1;18437:3;18433:11;18426:55;18515:11;18510:2;18505:3;18501:12;18494:33;18555:2;18550:3;18546:12;18539:19;;18332:232;;;;18573:323;;18733:67;18797:2;18792:3;18733:67;;;18726:74;;18833:25;18829:1;18824:3;18820:11;18813:46;18887:2;18882:3;18878:12;18871:19;;18719:177;;;;18905:381;;19065:67;19129:2;19124:3;19065:67;;;19058:74;;19165:34;19161:1;19156:3;19152:11;19145:55;19234:14;19229:2;19224:3;19220:12;19213:36;19277:2;19272:3;19268:12;19261:19;;19051:235;;;;19295:370;;19455:67;19519:2;19514:3;19455:67;;;19448:74;;19555:34;19551:1;19546:3;19542:11;19535:55;19624:3;19619:2;19614:3;19610:12;19603:25;19656:2;19651:3;19647:12;19640:19;;19441:224;;;;19674:319;;19834:67;19898:2;19893:3;19834:67;;;19827:74;;19934:21;19930:1;19925:3;19921:11;19914:42;19984:2;19979:3;19975:12;19968:19;;19820:173;;;;20002:320;;20162:67;20226:2;20221:3;20162:67;;;20155:74;;20262:22;20258:1;20253:3;20249:11;20242:43;20313:2;20308:3;20304:12;20297:19;;20148:174;;;;20330:103;20403:24;20421:5;20403:24;;;20398:3;20391:37;20385:48;;;20440:113;20523:24;20541:5;20523:24;;;20518:3;20511:37;20505:48;;;20560:107;20639:22;20655:5;20639:22;;;20634:3;20627:35;20621:46;;;20674:266;;20820:95;20911:3;20902:6;20820:95;;;20813:102;;20932:3;20925:10;;20801:139;;;;;20947:213;;21065:2;21054:9;21050:18;21042:26;;21079:71;21147:1;21136:9;21132:17;21123:6;21079:71;;;21036:124;;;;;21167:647;;21395:3;21384:9;21380:19;21372:27;;21410:79;21486:1;21475:9;21471:17;21462:6;21410:79;;;21500:72;21568:2;21557:9;21553:18;21544:6;21500:72;;;21583;21651:2;21640:9;21636:18;21627:6;21583:72;;;21703:9;21697:4;21693:20;21688:2;21677:9;21673:18;21666:48;21728:76;21799:4;21790:6;21728:76;;;21720:84;;21366:448;;;;;;;;21821:993;;22245:3;22234:9;22230:19;22222:27;;22260:117;22374:1;22363:9;22359:17;22350:6;22260:117;;;22388:156;22540:2;22529:9;22525:18;22516:6;22388:156;;;22555:119;22669:3;22658:9;22654:19;22645:6;22555:119;;;22685;22799:3;22788:9;22784:19;22775:6;22685:119;;;22216:598;;;;;;;;22821:201;;22933:2;22922:9;22918:18;22910:26;;22947:65;23009:1;22998:9;22994:17;22985:6;22947:65;;;22904:118;;;;;23029:261;;23171:2;23160:9;23156:18;23148:26;;23185:95;23277:1;23266:9;23262:17;23253:6;23185:95;;;23142:148;;;;;23297:301;;23435:2;23424:9;23420:18;23412:26;;23485:9;23479:4;23475:20;23471:1;23460:9;23456:17;23449:47;23510:78;23583:4;23574:6;23510:78;;;23502:86;;23406:192;;;;;23605:407;;23796:2;23785:9;23781:18;23773:26;;23846:9;23840:4;23836:20;23832:1;23821:9;23817:17;23810:47;23871:131;23997:4;23871:131;;;23863:139;;23767:245;;;;24019:407;;24210:2;24199:9;24195:18;24187:26;;24260:9;24254:4;24250:20;24246:1;24235:9;24231:17;24224:47;24285:131;24411:4;24285:131;;;24277:139;;24181:245;;;;24433:407;;24624:2;24613:9;24609:18;24601:26;;24674:9;24668:4;24664:20;24660:1;24649:9;24645:17;24638:47;24699:131;24825:4;24699:131;;;24691:139;;24595:245;;;;24847:407;;25038:2;25027:9;25023:18;25015:26;;25088:9;25082:4;25078:20;25074:1;25063:9;25059:17;25052:47;25113:131;25239:4;25113:131;;;25105:139;;25009:245;;;;25261:407;;25452:2;25441:9;25437:18;25429:26;;25502:9;25496:4;25492:20;25488:1;25477:9;25473:17;25466:47;25527:131;25653:4;25527:131;;;25519:139;;25423:245;;;;25675:407;;25866:2;25855:9;25851:18;25843:26;;25916:9;25910:4;25906:20;25902:1;25891:9;25887:17;25880:47;25941:131;26067:4;25941:131;;;25933:139;;25837:245;;;;26089:407;;26280:2;26269:9;26265:18;26257:26;;26330:9;26324:4;26320:20;26316:1;26305:9;26301:17;26294:47;26355:131;26481:4;26355:131;;;26347:139;;26251:245;;;;26503:407;;26694:2;26683:9;26679:18;26671:26;;26744:9;26738:4;26734:20;26730:1;26719:9;26715:17;26708:47;26769:131;26895:4;26769:131;;;26761:139;;26665:245;;;;26917:407;;27108:2;27097:9;27093:18;27085:26;;27158:9;27152:4;27148:20;27144:1;27133:9;27129:17;27122:47;27183:131;27309:4;27183:131;;;27175:139;;27079:245;;;;27331:407;;27522:2;27511:9;27507:18;27499:26;;27572:9;27566:4;27562:20;27558:1;27547:9;27543:17;27536:47;27597:131;27723:4;27597:131;;;27589:139;;27493:245;;;;27745:407;;27936:2;27925:9;27921:18;27913:26;;27986:9;27980:4;27976:20;27972:1;27961:9;27957:17;27950:47;28011:131;28137:4;28011:131;;;28003:139;;27907:245;;;;28159:407;;28350:2;28339:9;28335:18;28327:26;;28400:9;28394:4;28390:20;28386:1;28375:9;28371:17;28364:47;28425:131;28551:4;28425:131;;;28417:139;;28321:245;;;;28573:213;;28691:2;28680:9;28676:18;28668:26;;28705:71;28773:1;28762:9;28758:17;28749:6;28705:71;;;28662:124;;;;;28793:316;;28935:2;28924:9;28920:18;28912:26;;28949:67;29013:1;29002:9;28998:17;28989:6;28949:67;;;29027:72;29095:2;29084:9;29080:18;29071:6;29027:72;;;28906:203;;;;;;29116:256;;29178:2;29172:9;29162:19;;29216:4;29208:6;29204:17;29315:6;29303:10;29300:22;29279:18;29267:10;29264:34;29261:62;29258:2;;;29336:1;29333;29326:12;29258:2;29356:10;29352:2;29345:22;29156:216;;;;;29379:263;;29555:18;29547:6;29544:30;29541:2;;;29587:1;29584;29577:12;29541:2;29622:4;29614:6;29610:17;29602:25;;29478:164;;;;29649:244;;29806:18;29798:6;29795:30;29792:2;;;29838:1;29835;29828:12;29792:2;29873:4;29865:6;29861:17;29853:25;;29729:164;;;;29900:240;;30053:18;30045:6;30042:30;30039:2;;;30085:1;30082;30075:12;30039:2;30120:4;30112:6;30108:17;30100:25;;29976:164;;;;30147:244;;30304:18;30296:6;30293:30;30290:2;;;30336:1;30333;30326:12;30290:2;30371:4;30363:6;30359:17;30351:25;;30227:164;;;;30398:321;;30541:18;30533:6;30530:30;30527:2;;;30573:1;30570;30563:12;30527:2;30640:4;30636:9;30629:4;30621:6;30617:17;30613:33;30605:41;;30704:4;30698;30694:15;30686:23;;30464:255;;;;30726:322;;30870:18;30862:6;30859:30;30856:2;;;30902:1;30899;30892:12;30856:2;30969:4;30965:9;30958:4;30950:6;30946:17;30942:33;30934:41;;31033:4;31027;31023:15;31015:23;;30793:255;;;;31055:116;;31158:3;31150:11;;31144:27;;;;31178:97;;31262:3;31254:11;;31248:27;;;;31282:93;;31362:3;31354:11;;31348:27;;;;31382:97;;31466:3;31458:11;;31452:27;;;;31486:127;;31599:4;31589:14;;31577:36;;;;31620:108;;31714:4;31704:14;;31692:36;;;;31735:104;;31825:4;31815:14;;31803:36;;;;31846:108;;31940:4;31930:14;;31918:36;;;;31961:121;;32054:5;32048:12;32038:22;;32019:63;;;;32089:122;;32183:5;32177:12;32167:22;;32148:63;;;;32218:125;;32333:4;32328:3;32324:14;32316:22;;32310:33;;;;32350:106;;32446:4;32441:3;32437:14;32429:22;;32423:33;;;;32463:102;;32555:4;32550:3;32546:14;32538:22;;32532:33;;;;32572:106;;32668:4;32663:3;32659:14;32651:22;;32645:33;;;;32686:159;;32836:3;32821:18;;32814:31;;;;;32854:140;;32985:3;32970:18;;32963:31;;;;;33003:130;;33124:3;33109:18;;33102:31;;;;;33142:140;;33273:3;33258:18;;33251:31;;;;;33291:162;;33405:6;33400:3;33393:19;33442:4;33437:3;33433:14;33418:29;;33386:67;;;;;33462:163;;33577:6;33572:3;33565:19;33614:4;33609:3;33605:14;33590:29;;33558:67;;;;;33634:145;;33770:3;33755:18;;33748:31;;;;;33787:91;;33849:24;33867:5;33849:24;;;33838:35;;33832:46;;;;33885:85;;33958:5;33951:13;33944:21;33933:32;;33927:43;;;;33977:72;;34039:5;34028:16;;34022:27;;;;34056:144;;34128:66;34121:5;34117:78;34106:89;;34100:100;;;;34207:121;;34280:42;34273:5;34269:54;34258:65;;34252:76;;;;34335:72;;34397:5;34386:16;;34380:27;;;;34414:81;;34485:4;34478:5;34474:16;34463:27;;34457:38;;;;34502:129;;34589:37;34620:5;34589:37;;;34576:50;;34570:61;;;;34638:169;;34741:61;34796:5;34741:61;;;34728:74;;34722:85;;;;34814:132;;34917:24;34935:5;34917:24;;;34904:37;;34898:48;;;;34953:121;;35032:37;35063:5;35032:37;;;35019:50;;35013:61;;;;35081:108;;35160:24;35178:5;35160:24;;;35147:37;;35141:48;;;;35197:145;35278:6;35273:3;35268;35255:30;35334:1;35325:6;35320:3;35316:16;35309:27;35248:94;;;;35351:268;35416:1;35423:101;35437:6;35434:1;35431:13;35423:101;;;35513:1;35508:3;35504:11;35498:18;35494:1;35489:3;35485:11;35478:39;35459:2;35456:1;35452:10;35447:15;;35423:101;;;35539:6;35536:1;35533:13;35530:2;;;35604:1;35595:6;35590:3;35586:16;35579:27;35530:2;35400:219;;;;;35627:97;;35715:2;35711:7;35706:2;35699:5;35695:14;35691:28;35681:38;;35675:49;;;;35732:117;35801:24;35819:5;35801:24;;;35794:5;35791:35;35781:2;;35840:1;35837;35830:12;35781:2;35775:74;;35856:111;35922:21;35937:5;35922:21;;;35915:5;35912:32;35902:2;;35958:1;35955;35948:12;35902:2;35896:71;;35974:117;36043:24;36061:5;36043:24;;;36036:5;36033:35;36023:2;;36082:1;36079;36072:12;36023:2;36017:74;;36098:115;36166:23;36183:5;36166:23;;;36159:5;36156:34;36146:2;;36204:1;36201;36194:12;36146:2;36140:73;;36220:117;36289:24;36307:5;36289:24;;;36282:5;36279:35;36269:2;;36328:1;36325;36318:12;36269:2;36263:74;;36344:113;36411:22;36427:5;36411:22;;;36404:5;36401:33;36391:2;;36448:1;36445;36438:12;36391:2;36385:72;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\nimport './SquareVerifier.sol';\nimport './ERC721Mintable.sol';\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721MintableComplete {\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n    uint8 _index;\n    address _address;\n    bool exists;\n  }\n  SquareVerifier public squareVerifier;\n\n  // TODO define an array of the above struct\n  // Solution[] solutions;\n\n  // TODO define a mapping to store unique solutions submitted\n  mapping(uint8 => Solution) solutions; \n\n  // TODO Create an event to emit when a solution is added\n  event SolutionAdded(uint8 _index, address _address);\n\n  constructor(address verifierAddress) public {\n    squareVerifier = SquareVerifier(verifierAddress);\n  }\n\n  // TODO Create a function to add the solutions to the array and emit the event\n  function addSolution(uint8 _index, address _address) public {\n    Solution memory sol = solutions[_index];\n    require(!sol.exists == true, 'Solution already exists');\n    solutions[_index] = Solution(_index, _address, true);\n    emit SolutionAdded(_index, _address);\n  } \n\n  function mintNtf(\n    uint8 _index,\n    uint[2] memory a,\n    uint[2][2] memory b,\n    uint[2] memory c, uint[1] memory input\n  ) public returns(bool result) {\n      bool isVerified = squareVerifier.verifyTx(a, b, c, input);\n      require(isVerified == true, \"Cannot mint a new token- Verification failed\");\n      addSolution(_index, msg.sender);  \n      result = mint(msg.sender, _index);\n      require(result == true, 'Error minting token');\n  }\n}\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7638
      ]
    },
    "id": 7639,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7499,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7500,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7501,
        "nodeType": "ImportDirective",
        "scope": 7639,
        "sourceUnit": 10173,
        "src": "67:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7502,
        "nodeType": "ImportDirective",
        "scope": 7639,
        "sourceUnit": 1230,
        "src": "98:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7503,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "263:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1229",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7504,
            "nodeType": "InheritanceSpecifier",
            "src": "263:22:3"
          }
        ],
        "contractDependencies": [
          26,
          145,
          198,
          244,
          759,
          1057,
          1175,
          1229,
          7497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7638,
        "linearizedBaseContracts": [
          7638,
          1229,
          1175,
          7497,
          1057,
          759,
          244,
          198,
          145,
          26
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7511,
            "members": [
              {
                "constant": false,
                "id": 7506,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "384:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 7505,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "384:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7508,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "402:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7507,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7510,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "424:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7509,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7638,
            "src": "362:78:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7513,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7638,
            "src": "443:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$10172",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7512,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10172,
              "src": "443:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$10172",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7517,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7638,
            "src": "621:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
              "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7516,
              "keyType": {
                "id": 7514,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "629:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "621:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7515,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7511,
                "src": "638:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7511_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7523,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7519,
                  "indexed": false,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "742:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7521,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "756:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:32:3"
            },
            "src": "722:52:3"
          },
          {
            "body": {
              "id": 7534,
              "nodeType": "Block",
              "src": "822:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7528,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7513,
                      "src": "828:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10172",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7530,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7525,
                          "src": "860:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7529,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10172,
                        "src": "845:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$10172_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "845:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10172",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "828:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$10172",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7533,
                  "nodeType": "ExpressionStatement",
                  "src": "828:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7525,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7535,
                  "src": "790:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:25:3"
            },
            "returnParameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:3"
            },
            "scope": 7638,
            "src": "778:103:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7572,
              "nodeType": "Block",
              "src": "1026:211:3",
              "statements": [
                {
                  "assignments": [
                    7543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7543,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7572,
                      "src": "1032:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7542,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7511,
                        "src": "1032:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7511_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7547,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7544,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7517,
                      "src": "1054:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                        "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7546,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7545,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7537,
                      "src": "1064:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1054:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7511_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1032:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1085:11:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7549,
                              "name": "sol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7543,
                              "src": "1086:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solution_$7511_memory_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution memory"
                              }
                            },
                            "id": 7550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7510,
                            "src": "1086:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1100:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1085:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10508,
                        10509
                      ],
                      "referencedDeclaration": 10509,
                      "src": "1077:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7556,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "1138:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                          "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7559,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1148:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1138:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7561,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7537,
                          "src": "1167:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7562,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7539,
                          "src": "1175:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1185:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7560,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "1158:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7511_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1158:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1138:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7511_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7566,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:52:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7568,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1215:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7569,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7539,
                        "src": "1223:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7567,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7523,
                      "src": "1201:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7571,
                  "nodeType": "EmitStatement",
                  "src": "1196:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 7573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7537,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "987:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7539,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "1001:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "986:32:3"
            },
            "returnParameters": {
              "id": 7541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:0:3"
            },
            "scope": 7638,
            "src": "966:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7636,
              "nodeType": "Block",
              "src": "1400:289:3",
              "statements": [
                {
                  "assignments": [
                    7599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7599,
                      "name": "isVerified",
                      "nodeType": "VariableDeclaration",
                      "scope": 7636,
                      "src": "1408:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7598,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1408:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7607,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7579,
                        "src": "1450:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7603,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7585,
                        "src": "1453:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7589,
                        "src": "1456:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7593,
                        "src": "1459:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7600,
                        "name": "squareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7513,
                        "src": "1426:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SquareVerifier_$10172",
                          "typeString": "contract SquareVerifier"
                        }
                      },
                      "id": 7601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyTx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10171,
                      "src": "1426:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) view external returns (bool)"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1408:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7609,
                          "name": "isVerified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7599,
                          "src": "1481:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1481:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                        "id": 7612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:46:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        },
                        "value": "Cannot mint a new token- Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        }
                      ],
                      "id": 7608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10508,
                        10509
                      ],
                      "referencedDeclaration": 10509,
                      "src": "1473:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7614,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:75:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7616,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7575,
                        "src": "1568:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10505,
                          "src": "1576:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1576:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7615,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7573,
                      "src": "1556:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7620,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7621,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7596,
                      "src": "1597:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7623,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10505,
                            "src": "1611:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1611:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7625,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7575,
                          "src": "1623:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 7622,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "1606:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 7626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1606:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1597:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7628,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7630,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7596,
                          "src": "1646:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1646:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72206d696e74696e6720746f6b656e",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        },
                        "value": "Error minting token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        }
                      ],
                      "id": 7629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10508,
                        10509
                      ],
                      "referencedDeclaration": 10509,
                      "src": "1638:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1638:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:46:3"
                }
              ]
            },
            "documentation": null,
            "id": 7637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNtf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7575,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1264:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7574,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7579,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1282:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7576,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1282:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7578,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1287:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1282:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7585,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1304:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7580,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7582,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1309:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1304:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7584,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1312:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1304:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7589,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1329:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7586,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1329:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7588,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1334:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1329:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7593,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1347:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7590,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7592,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1352:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1347:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:113:3"
            },
            "returnParameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7596,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1387:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:13:3"
            },
            "scope": 7638,
            "src": "1242:447:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7639,
        "src": "232:1459:3"
      }
    ],
    "src": "0:1932:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7638
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7499,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7500,
        "name": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 10173,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7639,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7501,
        "name": "ImportDirective",
        "src": "67:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 1230,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7639,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7502,
        "name": "ImportDirective",
        "src": "98:30:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            145,
            198,
            244,
            759,
            1057,
            1175,
            1229,
            7497
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7638,
            1229,
            1175,
            7497,
            1057,
            759,
            244,
            198,
            145,
            26
          ],
          "name": "SolnSquareVerifier",
          "scope": 7639
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1229,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7503,
                "name": "UserDefinedTypeName",
                "src": "263:22:3"
              }
            ],
            "id": 7504,
            "name": "InheritanceSpecifier",
            "src": "263:22:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7638,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint8",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7505,
                    "name": "ElementaryTypeName",
                    "src": "384:5:3"
                  }
                ],
                "id": 7506,
                "name": "VariableDeclaration",
                "src": "384:12:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7507,
                    "name": "ElementaryTypeName",
                    "src": "402:7:3"
                  }
                ],
                "id": 7508,
                "name": "VariableDeclaration",
                "src": "402:16:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exists",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7509,
                    "name": "ElementaryTypeName",
                    "src": "424:4:3"
                  }
                ],
                "id": 7510,
                "name": "VariableDeclaration",
                "src": "424:11:3"
              }
            ],
            "id": 7511,
            "name": "StructDefinition",
            "src": "362:78:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "squareVerifier",
              "scope": 7638,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract SquareVerifier",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 10172,
                  "type": "contract SquareVerifier"
                },
                "id": 7512,
                "name": "UserDefinedTypeName",
                "src": "443:14:3"
              }
            ],
            "id": 7513,
            "name": "VariableDeclaration",
            "src": "443:36:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7638,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7514,
                    "name": "ElementaryTypeName",
                    "src": "629:5:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7511,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7515,
                    "name": "UserDefinedTypeName",
                    "src": "638:8:3"
                  }
                ],
                "id": 7516,
                "name": "Mapping",
                "src": "621:26:3"
              }
            ],
            "id": 7517,
            "name": "VariableDeclaration",
            "src": "621:36:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_index",
                      "scope": 7523,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7518,
                        "name": "ElementaryTypeName",
                        "src": "742:5:3"
                      }
                    ],
                    "id": 7519,
                    "name": "VariableDeclaration",
                    "src": "742:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7523,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7520,
                        "name": "ElementaryTypeName",
                        "src": "756:7:3"
                      }
                    ],
                    "id": 7521,
                    "name": "VariableDeclaration",
                    "src": "756:16:3"
                  }
                ],
                "id": 7522,
                "name": "ParameterList",
                "src": "741:32:3"
              }
            ],
            "id": 7523,
            "name": "EventDefinition",
            "src": "722:52:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7535,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7524,
                        "name": "ElementaryTypeName",
                        "src": "790:7:3"
                      }
                    ],
                    "id": 7525,
                    "name": "VariableDeclaration",
                    "src": "790:23:3"
                  }
                ],
                "id": 7526,
                "name": "ParameterList",
                "src": "789:25:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7527,
                "name": "ParameterList",
                "src": "822:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract SquareVerifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7513,
                              "type": "contract SquareVerifier",
                              "value": "squareVerifier"
                            },
                            "id": 7528,
                            "name": "Identifier",
                            "src": "828:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract SquareVerifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10172,
                                  "type": "type(contract SquareVerifier)",
                                  "value": "SquareVerifier"
                                },
                                "id": 7529,
                                "name": "Identifier",
                                "src": "845:14:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7525,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7530,
                                "name": "Identifier",
                                "src": "860:15:3"
                              }
                            ],
                            "id": 7531,
                            "name": "FunctionCall",
                            "src": "845:31:3"
                          }
                        ],
                        "id": 7532,
                        "name": "Assignment",
                        "src": "828:48:3"
                      }
                    ],
                    "id": 7533,
                    "name": "ExpressionStatement",
                    "src": "828:48:3"
                  }
                ],
                "id": 7534,
                "name": "Block",
                "src": "822:59:3"
              }
            ],
            "id": 7535,
            "name": "FunctionDefinition",
            "src": "778:103:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7536,
                        "name": "ElementaryTypeName",
                        "src": "987:5:3"
                      }
                    ],
                    "id": 7537,
                    "name": "VariableDeclaration",
                    "src": "987:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7538,
                        "name": "ElementaryTypeName",
                        "src": "1001:7:3"
                      }
                    ],
                    "id": 7539,
                    "name": "VariableDeclaration",
                    "src": "1001:16:3"
                  }
                ],
                "id": 7540,
                "name": "ParameterList",
                "src": "986:32:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7541,
                "name": "ParameterList",
                "src": "1026:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7543
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7572,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7511,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7542,
                            "name": "UserDefinedTypeName",
                            "src": "1032:8:3"
                          }
                        ],
                        "id": 7543,
                        "name": "VariableDeclaration",
                        "src": "1032:19:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7517,
                              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                              "value": "solutions"
                            },
                            "id": 7544,
                            "name": "Identifier",
                            "src": "1054:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7537,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7545,
                            "name": "Identifier",
                            "src": "1064:6:3"
                          }
                        ],
                        "id": 7546,
                        "name": "IndexAccess",
                        "src": "1054:17:3"
                      }
                    ],
                    "id": 7547,
                    "name": "VariableDeclarationStatement",
                    "src": "1032:39:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                                  "typeString": "literal_string \"Solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10508,
                                10509
                              ],
                              "referencedDeclaration": 10509,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7548,
                            "name": "Identifier",
                            "src": "1077:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "exists",
                                      "referencedDeclaration": 7510,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7543,
                                          "type": "struct SolnSquareVerifier.Solution memory",
                                          "value": "sol"
                                        },
                                        "id": 7549,
                                        "name": "Identifier",
                                        "src": "1086:3:3"
                                      }
                                    ],
                                    "id": 7550,
                                    "name": "MemberAccess",
                                    "src": "1086:10:3"
                                  }
                                ],
                                "id": 7551,
                                "name": "UnaryOperation",
                                "src": "1085:11:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7552,
                                "name": "Literal",
                                "src": "1100:4:3"
                              }
                            ],
                            "id": 7553,
                            "name": "BinaryOperation",
                            "src": "1085:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists\"",
                              "value": "Solution already exists"
                            },
                            "id": 7554,
                            "name": "Literal",
                            "src": "1106:25:3"
                          }
                        ],
                        "id": 7555,
                        "name": "FunctionCall",
                        "src": "1077:55:3"
                      }
                    ],
                    "id": 7556,
                    "name": "ExpressionStatement",
                    "src": "1077:55:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7517,
                                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7557,
                                "name": "Identifier",
                                "src": "1138:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7537,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7558,
                                "name": "Identifier",
                                "src": "1148:6:3"
                              }
                            ],
                            "id": 7559,
                            "name": "IndexAccess",
                            "src": "1138:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7511,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7560,
                                "name": "Identifier",
                                "src": "1158:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7537,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7561,
                                "name": "Identifier",
                                "src": "1167:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7539,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 7562,
                                "name": "Identifier",
                                "src": "1175:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7563,
                                "name": "Literal",
                                "src": "1185:4:3"
                              }
                            ],
                            "id": 7564,
                            "name": "FunctionCall",
                            "src": "1158:32:3"
                          }
                        ],
                        "id": 7565,
                        "name": "Assignment",
                        "src": "1138:52:3"
                      }
                    ],
                    "id": 7566,
                    "name": "ExpressionStatement",
                    "src": "1138:52:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7523,
                              "type": "function (uint8,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7567,
                            "name": "Identifier",
                            "src": "1201:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7537,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7568,
                            "name": "Identifier",
                            "src": "1215:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7539,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7569,
                            "name": "Identifier",
                            "src": "1223:8:3"
                          }
                        ],
                        "id": 7570,
                        "name": "FunctionCall",
                        "src": "1201:31:3"
                      }
                    ],
                    "id": 7571,
                    "name": "EmitStatement",
                    "src": "1196:36:3"
                  }
                ],
                "id": 7572,
                "name": "Block",
                "src": "1026:211:3"
              }
            ],
            "id": 7573,
            "name": "FunctionDefinition",
            "src": "966:271:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNtf",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7574,
                        "name": "ElementaryTypeName",
                        "src": "1264:5:3"
                      }
                    ],
                    "id": 7575,
                    "name": "VariableDeclaration",
                    "src": "1264:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7576,
                            "name": "ElementaryTypeName",
                            "src": "1282:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7577,
                            "name": "Literal",
                            "src": "1287:1:3"
                          }
                        ],
                        "id": 7578,
                        "name": "ArrayTypeName",
                        "src": "1282:7:3"
                      }
                    ],
                    "id": 7579,
                    "name": "VariableDeclaration",
                    "src": "1282:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7580,
                                "name": "ElementaryTypeName",
                                "src": "1304:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7581,
                                "name": "Literal",
                                "src": "1309:1:3"
                              }
                            ],
                            "id": 7582,
                            "name": "ArrayTypeName",
                            "src": "1304:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7583,
                            "name": "Literal",
                            "src": "1312:1:3"
                          }
                        ],
                        "id": 7584,
                        "name": "ArrayTypeName",
                        "src": "1304:10:3"
                      }
                    ],
                    "id": 7585,
                    "name": "VariableDeclaration",
                    "src": "1304:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7586,
                            "name": "ElementaryTypeName",
                            "src": "1329:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7587,
                            "name": "Literal",
                            "src": "1334:1:3"
                          }
                        ],
                        "id": 7588,
                        "name": "ArrayTypeName",
                        "src": "1329:7:3"
                      }
                    ],
                    "id": 7589,
                    "name": "VariableDeclaration",
                    "src": "1329:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[1]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[1]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7590,
                            "name": "ElementaryTypeName",
                            "src": "1347:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 7591,
                            "name": "Literal",
                            "src": "1352:1:3"
                          }
                        ],
                        "id": 7592,
                        "name": "ArrayTypeName",
                        "src": "1347:7:3"
                      }
                    ],
                    "id": 7593,
                    "name": "VariableDeclaration",
                    "src": "1347:20:3"
                  }
                ],
                "id": 7594,
                "name": "ParameterList",
                "src": "1258:113:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7595,
                        "name": "ElementaryTypeName",
                        "src": "1387:4:3"
                      }
                    ],
                    "id": 7596,
                    "name": "VariableDeclaration",
                    "src": "1387:11:3"
                  }
                ],
                "id": 7597,
                "name": "ParameterList",
                "src": "1386:13:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7599
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isVerified",
                          "scope": 7636,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7598,
                            "name": "ElementaryTypeName",
                            "src": "1408:4:3"
                          }
                        ],
                        "id": 7599,
                        "name": "VariableDeclaration",
                        "src": "1408:15:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                                  "typeString": "uint256[1] memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "verifyTx",
                              "referencedDeclaration": 10171,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7513,
                                  "type": "contract SquareVerifier",
                                  "value": "squareVerifier"
                                },
                                "id": 7600,
                                "name": "Identifier",
                                "src": "1426:14:3"
                              }
                            ],
                            "id": 7601,
                            "name": "MemberAccess",
                            "src": "1426:23:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7579,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7602,
                            "name": "Identifier",
                            "src": "1450:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7585,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7603,
                            "name": "Identifier",
                            "src": "1453:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7589,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7604,
                            "name": "Identifier",
                            "src": "1456:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7593,
                              "type": "uint256[1] memory",
                              "value": "input"
                            },
                            "id": 7605,
                            "name": "Identifier",
                            "src": "1459:5:3"
                          }
                        ],
                        "id": 7606,
                        "name": "FunctionCall",
                        "src": "1426:39:3"
                      }
                    ],
                    "id": 7607,
                    "name": "VariableDeclarationStatement",
                    "src": "1408:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                                  "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10508,
                                10509
                              ],
                              "referencedDeclaration": 10509,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7608,
                            "name": "Identifier",
                            "src": "1473:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7599,
                                  "type": "bool",
                                  "value": "isVerified"
                                },
                                "id": 7609,
                                "name": "Identifier",
                                "src": "1481:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7610,
                                "name": "Literal",
                                "src": "1495:4:3"
                              }
                            ],
                            "id": 7611,
                            "name": "BinaryOperation",
                            "src": "1481:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Cannot mint a new token- Verification failed\"",
                              "value": "Cannot mint a new token- Verification failed"
                            },
                            "id": 7612,
                            "name": "Literal",
                            "src": "1501:46:3"
                          }
                        ],
                        "id": 7613,
                        "name": "FunctionCall",
                        "src": "1473:75:3"
                      }
                    ],
                    "id": 7614,
                    "name": "ExpressionStatement",
                    "src": "1473:75:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7573,
                              "type": "function (uint8,address)",
                              "value": "addSolution"
                            },
                            "id": 7615,
                            "name": "Identifier",
                            "src": "1556:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7575,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7616,
                            "name": "Identifier",
                            "src": "1568:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10505,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7617,
                                "name": "Identifier",
                                "src": "1576:3:3"
                              }
                            ],
                            "id": 7618,
                            "name": "MemberAccess",
                            "src": "1576:10:3"
                          }
                        ],
                        "id": 7619,
                        "name": "FunctionCall",
                        "src": "1556:31:3"
                      }
                    ],
                    "id": 7620,
                    "name": "ExpressionStatement",
                    "src": "1556:31:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7596,
                              "type": "bool",
                              "value": "result"
                            },
                            "id": 7621,
                            "name": "Identifier",
                            "src": "1597:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1228,
                                  "type": "function (address,uint256) returns (bool)",
                                  "value": "mint"
                                },
                                "id": 7622,
                                "name": "Identifier",
                                "src": "1606:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10505,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7623,
                                    "name": "Identifier",
                                    "src": "1611:3:3"
                                  }
                                ],
                                "id": 7624,
                                "name": "MemberAccess",
                                "src": "1611:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7575,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7625,
                                "name": "Identifier",
                                "src": "1623:6:3"
                              }
                            ],
                            "id": 7626,
                            "name": "FunctionCall",
                            "src": "1606:24:3"
                          }
                        ],
                        "id": 7627,
                        "name": "Assignment",
                        "src": "1597:33:3"
                      }
                    ],
                    "id": 7628,
                    "name": "ExpressionStatement",
                    "src": "1597:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                                  "typeString": "literal_string \"Error minting token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10508,
                                10509
                              ],
                              "referencedDeclaration": 10509,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7629,
                            "name": "Identifier",
                            "src": "1638:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7596,
                                  "type": "bool",
                                  "value": "result"
                                },
                                "id": 7630,
                                "name": "Identifier",
                                "src": "1646:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7631,
                                "name": "Literal",
                                "src": "1656:4:3"
                              }
                            ],
                            "id": 7632,
                            "name": "BinaryOperation",
                            "src": "1646:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4572726f72206d696e74696e6720746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Error minting token\"",
                              "value": "Error minting token"
                            },
                            "id": 7633,
                            "name": "Literal",
                            "src": "1662:21:3"
                          }
                        ],
                        "id": 7634,
                        "name": "FunctionCall",
                        "src": "1638:46:3"
                      }
                    ],
                    "id": 7635,
                    "name": "ExpressionStatement",
                    "src": "1638:46:3"
                  }
                ],
                "id": 7636,
                "name": "Block",
                "src": "1400:289:3"
              }
            ],
            "id": 7637,
            "name": "FunctionDefinition",
            "src": "1242:447:3"
          }
        ],
        "id": 7638,
        "name": "ContractDefinition",
        "src": "232:1459:3"
      }
    ],
    "id": 7639,
    "name": "SourceUnit",
    "src": "0:1932:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x00e705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "name": "NewTokenMinted",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xebd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "_index",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xe723aa171b3767f9c62faeadb9c8eb01ecf0bf8134354a6bb8a68be7023fab7c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "Unpased",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0Aa87745E05BC0b0AD5f9Bb84E7D4eBd4e1d37BA",
      "transactionHash": "0x7fc83c510ad79686eceafcbc0f9f6be8eb44bc0823c25db0e51574274d662777"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x00e705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "name": "NewTokenMinted",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xebd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "_index",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xe723aa171b3767f9c62faeadb9c8eb01ecf0bf8134354a6bb8a68be7023fab7c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "Unpased",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3Cbea8eCEC17f3f63af1B3579848fDC1CcbD682C",
      "transactionHash": "0x289203d56b9edfa8d629d3b4b0de449d878d28482a23e34bbcaf6d25bb8b54f3"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-17T19:54:55.468Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}