{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "NewTokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unpased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "internalType": "contract SquareVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNtf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"NewTokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Unpased\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintNtf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"internalType\":\"contract SquareVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x6d18e0f939dbd3a7062b4e6738c51ecc4de9bea395b739ba384d7c01071f8c12\",\"urls\":[\"bzz-raw://ebd12bfc1a64b7e425ccb4bced4e785d510e6df55823ecbd347fecc11062aa3a\",\"dweb:/ipfs/QmW67PD1C9SzBbuByfBsKAS9bwyzxd47cKop6JuLvzUHkM\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xe4ae026767e397a74c226996d2e055052d45cf9542cade5520c6d3cb974fac6d\",\"urls\":[\"bzz-raw://5e421b47e17ed0200c26353d8a1014c527b586be28b74f20013bc21d8cf16950\",\"dweb:/ipfs/QmQz6rBqAqfu2Sy9qSDchSGRGX6j85CZiW4vmeLzMpKq1H\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol\":{\"keccak256\":\"0x2fa0d70586782616561fd6a3e54b5732af848953186ae1a2afc04dcb55582162\",\"urls\":[\"bzz-raw://529fd6f7fe47d6ab2108a692993466e9f2474d2cdb3d0d8687025a9083a803c6\",\"dweb:/ipfs/QmdwC9PheLgqAm99XMDsdhwJf7UMMHAov3wDUCHvx7SRNc\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x4573bf23043e3f7124b720a4287e2a525ad3b8d815b6c363e5492a85055cbf32\",\"urls\":[\"bzz-raw://7fb22f66d871aca6d0bbd04e532a7d0c1034df9e75baddd02aea38cf92a764f9\",\"dweb:/ipfs/QmYu6su1mQk39UpY5vUYQTTUi9QWzwQeYVjuRkBo1hWHgL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200377b3803806200377b83398181016040526200003791908101906200041a565b6040518060400160405280600581526020017f47414242590000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f47425900000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f81526020016200373c603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200010f60006200020560201b60201c565b620001276301ffc9a760e01b620002b460201b60201c565b6200013f6380ac58cd60e01b620002b460201b60201c565b6200015763780e9d6360e01b620002b460201b60201c565b82600f90805190602001906200016f92919062000354565b5081601090805190602001906200018892919062000354565b508060119080519060200190620001a192919062000354565b50620001ba635b5e139f60e01b620002b460201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200052f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000297576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028e90620004ae565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002e857600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200039757805160ff1916838001178555620003c8565b82800160010185558215620003c8579182015b82811115620003c7578251825591602001919060010190620003aa565b5b509050620003d79190620003db565b5090565b6200040091905b80821115620003fc576000816000905550600101620003e2565b5090565b90565b600081519050620004148162000515565b92915050565b6000602082840312156200042d57600080fd5b60006200043d8482850162000403565b91505092915050565b600062000455602e83620004d0565b91507f6f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008301527f20746869732066756e6374696f6e0000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620004c98162000446565b9050919050565b600082825260208201905092915050565b6000620004ee82620004f5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200052081620004e1565b81146200052c57600080fd5b50565b6131fd806200053f6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80634c1b1c93116100de578063893d20e811610097578063bdc32be011610071578063bdc32be0146104a5578063c87b56dd146104c3578063e985e9c5146104f3578063f2fde38b146105235761018e565b8063893d20e81461044f578063a22cb4651461046d578063b88d4fde146104895761018e565b80634c1b1c93146103555780634f6ccce7146103735780635a156750146103a35780636352211e146103bf57806370a08231146103ef578063716a4f6e1461041f5761018e565b806318160ddd1161014b5780632f745c59116101255780632f745c59146102bd57806338bbfa50146102ed57806340c10f191461030957806342842e0e146103395761018e565b806318160ddd1461026757806323b872dd1461028557806327dc297e146102a15761018e565b806301ffc9a714610193578063081812fc146101c3578063095ea7b3146101f3578063150704011461020f57806316c38b3c1461022d57806317d7de7c14610249575b600080fd5b6101ad60048036036101a8919081019061297d565b61053f565b6040516101ba9190612d8e565b60405180910390f35b6101dd60048036036101d891908101906129cf565b6105a7565b6040516101ea9190612d27565b60405180910390f35b61020d60048036036102089190810190612845565b6105e4565b005b61021761076c565b6040516102249190612dc4565b60405180910390f35b61024760048036036102429190810190612881565b61080e565b005b6102516108ba565b60405161025e9190612dc4565b60405180910390f35b61026f61095c565b60405161027c9190612e86565b60405180910390f35b61029f600480360361029a919081019061273f565b610969565b005b6102bb60048036036102b691908101906128aa565b61098c565b005b6102d760048036036102d29190810190612845565b6109cf565b6040516102e49190612e86565b60405180910390f35b610307600480360361030291908101906128fe565b610a42565b005b610323600480360361031e9190810190612845565b610a47565b6040516103309190612d8e565b60405180910390f35b610353600480360361034e919081019061273f565b610b52565b005b61035d610b72565b60405161036a9190612da9565b60405180910390f35b61038d600480360361038891908101906129cf565b610b98565b60405161039a9190612e86565b60405180910390f35b6103bd60048036036103b891908101906129f8565b610bcc565b005b6103d960048036036103d491908101906129cf565b610ded565b6040516103e69190612d27565b60405180910390f35b610409600480360361040491908101906126da565b610e2a565b6040516104169190612e86565b60405180910390f35b61043960048036036104349190810190612a34565b610e76565b6040516104469190612d8e565b60405180910390f35b610457610ee1565b6040516104649190612d27565b60405180910390f35b61048760048036036104829190810190612809565b610f0a565b005b6104a3600480360361049e919081019061278e565b611040565b005b6104ad611066565b6040516104ba9190612dc4565b60405180910390f35b6104dd60048036036104d891908101906129cf565b611108565b6040516104ea9190612dc4565b60405180910390f35b61050d60048036036105089190810190612703565b6111cf565b60405161051a9190612d8e565b60405180910390f35b61053d600480360361053891908101906126da565b611263565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561065057600080fd5b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bb57600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490612de6565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109525780601f1061092757610100808354040283529160200191610952565b820191906000526020600020905b81548152906001019060200180831161093557829003601f168201915b5050505050905090565b6000600880549050905090565b61097333826113a6565b61097c57600080fd5b61098783838361143b565b505050565b6109cb828260006040519080825280601f01601f1916602001820160405280156109c55781602001600182028038833980820191505090505b50610a42565b5050565b60006109da83610e2a565b82106109e557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a2f57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acf90612de6565b60405180910390fd5b610ae2838361145f565b6060610aed83611480565b905080604051610afd9190612d10565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b610b6d83838360405180602001604052806000815250611040565b505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ba261095c565b8210610bad57600080fd5b60088281548110610bba57fe5b90600052602060002001549050919050565b610bd4612336565b601460008460ff1660ff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160159054906101000a900460ff161515151581525050905060011515816040015115151514610cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccb90612e46565b60405180910390fd5b60405180606001604052808460ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601460008560ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507febd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb8383604051610de0929190612ea1565b60405180910390a1505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6000610e828633610bcc565b610e8f338760ff16610a47565b90506001151581151514610ed8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecf90612e66565b60405180910390fd5b95945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110349190612d8e565b60405180910390a35050565b61104b848484610969565b61105784848484611575565b61106057600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110fe5780601f106110d3576101008083540402835291602001916110fe565b820191906000526020600020905b8154815290600101906020018083116110e157829003601f168201915b5050505050905090565b60606111138261168c565b61111c57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612de6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561132c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da68160405161139b9190612d27565b60405180910390a150565b6000806113b283610ded565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061142157508373ffffffffffffffffffffffffffffffffffffffff16611409846105a7565b73ffffffffffffffffffffffffffffffffffffffff16145b80611432575061143181856111cf565b5b91505092915050565b6114468383836116fe565b61145083826119c7565b61145a8282611b65565b505050565b6114698282611c2c565b6114738282611b65565b61147c81611dc6565b5050565b606061148b8261168c565b61149457600080fd5b606061154260118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561152f5780601f106115045761010080835404028352916020019161152f565b820191906000526020600020905b81548152906001019060200180831161151257829003601f168201915b505050505061153d85611e12565b611f3f565b90508060126000858152602001908152602001600020908051906020019061156b929190612372565b5080915050919050565b60006115968473ffffffffffffffffffffffffffffffffffffffff16611f83565b6115a35760019050611684565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016115e49493929190612d42565b602060405180830381600087803b1580156115fe57600080fd5b505af1158015611612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061163691908101906129a6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461176957600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183090612e06565b60405180910390fd5b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611915600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f96565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611a1f6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611fb990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611b0c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611a8c57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ae457fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b5e91906123f2565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc590612e26565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d67600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612003565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611e5a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f3a565b600082905060005b60008214611e84578080600101915050600a8281611e7c57fe5b049150611e62565b6060816040519080825280601f01601f191660200182016040528015611eb95781602001600182028038833980820191505090505b50905060006001830390505b60008614611f3257600a8681611ed757fe5b0660300160f81b82828060019003935081518110611ef157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611f2a57fe5b049550611ec5565b819450505050505b919050565b6060611f7b8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612019565b905092915050565b600080823b905060008111915050919050565b611fae60018260000154611fb990919063ffffffff16565b816000018190555050565b6000611ffb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506122db565b905092915050565b6001816000016000828254019250508190555050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156120755781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156120fa578881815181106120a157fe5b602001015160f81c60f81b8383806001019450815181106120be57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061208c565b600090505b875181101561216d5787818151811061211457fe5b602001015160f81c60f81b83838060010194508151811061213157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506120ff565b600090505b86518110156121e05786818151811061218757fe5b602001015160f81c60f81b8383806001019450815181106121a457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612172565b600090505b8551811015612253578581815181106121fa57fe5b602001015160f81c60f81b83838060010194508151811061221757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121e5565b600090505b84518110156122c65784818151811061226d57fe5b602001015160f81c60f81b83838060010194508151811061228a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612258565b82995050505050505050505095945050505050565b6000838311158290612323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231a9190612dc4565b60405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123b357805160ff19168380011785556123e1565b828001600101855582156123e1579182015b828111156123e05782518255916020019190600101906123c5565b5b5090506123ee919061241e565b5090565b81548183558181111561241957818360005260206000209182019101612418919061241e565b5b505050565b61244091905b8082111561243c576000816000905550600101612424565b5090565b90565b60008135905061245281613130565b92915050565b600082601f83011261246957600080fd5b600261247c61247782612ef7565b612eca565b9150818385604084028201111561249257600080fd5b60005b838110156124c257816124a888826124cc565b845260208401935060408301925050600181019050612495565b5050505092915050565b600082601f8301126124dd57600080fd5b60026124f06124eb82612f19565b612eca565b9150818385602084028201111561250657600080fd5b60005b83811015612536578161251c88826126b0565b845260208401935060208301925050600181019050612509565b5050505092915050565b600082601f83011261255157600080fd5b600261256461255f82612f3b565b612eca565b9150818385602084028201111561257a57600080fd5b60005b838110156125aa578161259088826126b0565b84526020840193506020830192505060018101905061257d565b5050505092915050565b6000813590506125c381613147565b92915050565b6000813590506125d88161315e565b92915050565b6000813590506125ed81613175565b92915050565b60008151905061260281613175565b92915050565b600082601f83011261261957600080fd5b813561262c61262782612f5d565b612eca565b9150808252602083016020830185838301111561264857600080fd5b6126538382846130dd565b50505092915050565b600082601f83011261266d57600080fd5b813561268061267b82612f89565b612eca565b9150808252602083016020830185838301111561269c57600080fd5b6126a78382846130dd565b50505092915050565b6000813590506126bf8161318c565b92915050565b6000813590506126d4816131a3565b92915050565b6000602082840312156126ec57600080fd5b60006126fa84828501612443565b91505092915050565b6000806040838503121561271657600080fd5b600061272485828601612443565b925050602061273585828601612443565b9150509250929050565b60008060006060848603121561275457600080fd5b600061276286828701612443565b935050602061277386828701612443565b9250506040612784868287016126b0565b9150509250925092565b600080600080608085870312156127a457600080fd5b60006127b287828801612443565b94505060206127c387828801612443565b93505060406127d4878288016126b0565b925050606085013567ffffffffffffffff8111156127f157600080fd5b6127fd87828801612608565b91505092959194509250565b6000806040838503121561281c57600080fd5b600061282a85828601612443565b925050602061283b858286016125b4565b9150509250929050565b6000806040838503121561285857600080fd5b600061286685828601612443565b9250506020612877858286016126b0565b9150509250929050565b60006020828403121561289357600080fd5b60006128a1848285016125b4565b91505092915050565b600080604083850312156128bd57600080fd5b60006128cb858286016125c9565b925050602083013567ffffffffffffffff8111156128e857600080fd5b6128f48582860161265c565b9150509250929050565b60008060006060848603121561291357600080fd5b6000612921868287016125c9565b935050602084013567ffffffffffffffff81111561293e57600080fd5b61294a8682870161265c565b925050604084013567ffffffffffffffff81111561296757600080fd5b61297386828701612608565b9150509250925092565b60006020828403121561298f57600080fd5b600061299d848285016125de565b91505092915050565b6000602082840312156129b857600080fd5b60006129c6848285016125f3565b91505092915050565b6000602082840312156129e157600080fd5b60006129ef848285016126b0565b91505092915050565b60008060408385031215612a0b57600080fd5b6000612a19858286016126c5565b9250506020612a2a85828601612443565b9150509250929050565b60008060008060006101608688031215612a4d57600080fd5b6000612a5b888289016126c5565b9550506020612a6c88828901612540565b9450506060612a7d88828901612458565b93505060e0612a8e88828901612540565b925050610120612aa088828901612540565b9150509295509295909350565b612ab681613083565b82525050565b612ac581612ff8565b82525050565b612ad48161300a565b82525050565b6000612ae582612fb5565b612aef8185612fcb565b9350612aff8185602086016130ec565b612b088161311f565b840191505092915050565b612b1c81613095565b82525050565b6000612b2d82612fc0565b612b378185612fdc565b9350612b478185602086016130ec565b612b508161311f565b840191505092915050565b6000612b6682612fc0565b612b708185612fed565b9350612b808185602086016130ec565b80840191505092915050565b6000612b99602e83612fdc565b91507f6f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008301527f20746869732066756e6374696f6e0000000000000000000000000000000000006020830152604082019050919050565b6000612bff601283612fdc565b91507f4e6f7420612076616c69642061647265737300000000000000000000000000006000830152602082019050919050565b6000612c3f601e83612fdc565b91507f546f6b656e20666f72206f776e657220616c72656164792065786973747300006000830152602082019050919050565b6000612c7f601783612fdc565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b6000612cbf601383612fdc565b91507f4572726f72206d696e74696e6720746f6b656e000000000000000000000000006000830152602082019050919050565b612cfb8161306c565b82525050565b612d0a81613076565b82525050565b6000612d1c8284612b5b565b915081905092915050565b6000602082019050612d3c6000830184612abc565b92915050565b6000608082019050612d576000830187612aad565b612d646020830186612abc565b612d716040830185612cf2565b8181036060830152612d838184612ada565b905095945050505050565b6000602082019050612da36000830184612acb565b92915050565b6000602082019050612dbe6000830184612b13565b92915050565b60006020820190508181036000830152612dde8184612b22565b905092915050565b60006020820190508181036000830152612dff81612b8c565b9050919050565b60006020820190508181036000830152612e1f81612bf2565b9050919050565b60006020820190508181036000830152612e3f81612c32565b9050919050565b60006020820190508181036000830152612e5f81612c72565b9050919050565b60006020820190508181036000830152612e7f81612cb2565b9050919050565b6000602082019050612e9b6000830184612cf2565b92915050565b6000604082019050612eb66000830185612d01565b612ec36020830184612abc565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715612eed57600080fd5b8060405250919050565b600067ffffffffffffffff821115612f0e57600080fd5b602082029050919050565b600067ffffffffffffffff821115612f3057600080fd5b602082029050919050565b600067ffffffffffffffff821115612f5257600080fd5b602082029050919050565b600067ffffffffffffffff821115612f7457600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612fa057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006130038261304c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061308e826130b9565b9050919050565b60006130a0826130a7565b9050919050565b60006130b28261304c565b9050919050565b60006130c4826130cb565b9050919050565b60006130d68261304c565b9050919050565b82818337600083830152505050565b60005b8381101561310a5780820151818401526020810190506130ef565b83811115613119576000848401525b50505050565b6000601f19601f8301169050919050565b61313981612ff8565b811461314457600080fd5b50565b6131508161300a565b811461315b57600080fd5b50565b61316781613016565b811461317257600080fd5b50565b61317e81613020565b811461318957600080fd5b50565b6131958161306c565b81146131a057600080fd5b50565b6131ac81613076565b81146131b757600080fd5b5056fea365627a7a723158204accc31081a2a56ab71cfcb2098c040b346705c76ded7e11f3b35b015ae14ecc6c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80634c1b1c93116100de578063893d20e811610097578063bdc32be011610071578063bdc32be0146104a5578063c87b56dd146104c3578063e985e9c5146104f3578063f2fde38b146105235761018e565b8063893d20e81461044f578063a22cb4651461046d578063b88d4fde146104895761018e565b80634c1b1c93146103555780634f6ccce7146103735780635a156750146103a35780636352211e146103bf57806370a08231146103ef578063716a4f6e1461041f5761018e565b806318160ddd1161014b5780632f745c59116101255780632f745c59146102bd57806338bbfa50146102ed57806340c10f191461030957806342842e0e146103395761018e565b806318160ddd1461026757806323b872dd1461028557806327dc297e146102a15761018e565b806301ffc9a714610193578063081812fc146101c3578063095ea7b3146101f3578063150704011461020f57806316c38b3c1461022d57806317d7de7c14610249575b600080fd5b6101ad60048036036101a8919081019061297d565b61053f565b6040516101ba9190612d8e565b60405180910390f35b6101dd60048036036101d891908101906129cf565b6105a7565b6040516101ea9190612d27565b60405180910390f35b61020d60048036036102089190810190612845565b6105e4565b005b61021761076c565b6040516102249190612dc4565b60405180910390f35b61024760048036036102429190810190612881565b61080e565b005b6102516108ba565b60405161025e9190612dc4565b60405180910390f35b61026f61095c565b60405161027c9190612e86565b60405180910390f35b61029f600480360361029a919081019061273f565b610969565b005b6102bb60048036036102b691908101906128aa565b61098c565b005b6102d760048036036102d29190810190612845565b6109cf565b6040516102e49190612e86565b60405180910390f35b610307600480360361030291908101906128fe565b610a42565b005b610323600480360361031e9190810190612845565b610a47565b6040516103309190612d8e565b60405180910390f35b610353600480360361034e919081019061273f565b610b52565b005b61035d610b72565b60405161036a9190612da9565b60405180910390f35b61038d600480360361038891908101906129cf565b610b98565b60405161039a9190612e86565b60405180910390f35b6103bd60048036036103b891908101906129f8565b610bcc565b005b6103d960048036036103d491908101906129cf565b610ded565b6040516103e69190612d27565b60405180910390f35b610409600480360361040491908101906126da565b610e2a565b6040516104169190612e86565b60405180910390f35b61043960048036036104349190810190612a34565b610e76565b6040516104469190612d8e565b60405180910390f35b610457610ee1565b6040516104649190612d27565b60405180910390f35b61048760048036036104829190810190612809565b610f0a565b005b6104a3600480360361049e919081019061278e565b611040565b005b6104ad611066565b6040516104ba9190612dc4565b60405180910390f35b6104dd60048036036104d891908101906129cf565b611108565b6040516104ea9190612dc4565b60405180910390f35b61050d60048036036105089190810190612703565b6111cf565b60405161051a9190612d8e565b60405180910390f35b61053d600480360361053891908101906126da565b611263565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561065057600080fd5b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bb57600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490612de6565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109525780601f1061092757610100808354040283529160200191610952565b820191906000526020600020905b81548152906001019060200180831161093557829003601f168201915b5050505050905090565b6000600880549050905090565b61097333826113a6565b61097c57600080fd5b61098783838361143b565b505050565b6109cb828260006040519080825280601f01601f1916602001820160405280156109c55781602001600182028038833980820191505090505b50610a42565b5050565b60006109da83610e2a565b82106109e557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a2f57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acf90612de6565b60405180910390fd5b610ae2838361145f565b6060610aed83611480565b905080604051610afd9190612d10565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b610b6d83838360405180602001604052806000815250611040565b505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ba261095c565b8210610bad57600080fd5b60088281548110610bba57fe5b90600052602060002001549050919050565b610bd4612336565b601460008460ff1660ff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160159054906101000a900460ff161515151581525050905060011515816040015115151514610cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccb90612e46565b60405180910390fd5b60405180606001604052808460ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601460008560ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507febd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb8383604051610de0929190612ea1565b60405180910390a1505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6000610e828633610bcc565b610e8f338760ff16610a47565b90506001151581151514610ed8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecf90612e66565b60405180910390fd5b95945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110349190612d8e565b60405180910390a35050565b61104b848484610969565b61105784848484611575565b61106057600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110fe5780601f106110d3576101008083540402835291602001916110fe565b820191906000526020600020905b8154815290600101906020018083116110e157829003601f168201915b5050505050905090565b60606111138261168c565b61111c57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612de6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561132c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da68160405161139b9190612d27565b60405180910390a150565b6000806113b283610ded565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061142157508373ffffffffffffffffffffffffffffffffffffffff16611409846105a7565b73ffffffffffffffffffffffffffffffffffffffff16145b80611432575061143181856111cf565b5b91505092915050565b6114468383836116fe565b61145083826119c7565b61145a8282611b65565b505050565b6114698282611c2c565b6114738282611b65565b61147c81611dc6565b5050565b606061148b8261168c565b61149457600080fd5b606061154260118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561152f5780601f106115045761010080835404028352916020019161152f565b820191906000526020600020905b81548152906001019060200180831161151257829003601f168201915b505050505061153d85611e12565b611f3f565b90508060126000858152602001908152602001600020908051906020019061156b929190612372565b5080915050919050565b60006115968473ffffffffffffffffffffffffffffffffffffffff16611f83565b6115a35760019050611684565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016115e49493929190612d42565b602060405180830381600087803b1580156115fe57600080fd5b505af1158015611612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061163691908101906129a6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461176957600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183090612e06565b60405180910390fd5b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611915600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f96565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611a1f6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611fb990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611b0c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611a8c57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ae457fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b5e91906123f2565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc590612e26565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d67600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612003565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611e5a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f3a565b600082905060005b60008214611e84578080600101915050600a8281611e7c57fe5b049150611e62565b6060816040519080825280601f01601f191660200182016040528015611eb95781602001600182028038833980820191505090505b50905060006001830390505b60008614611f3257600a8681611ed757fe5b0660300160f81b82828060019003935081518110611ef157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611f2a57fe5b049550611ec5565b819450505050505b919050565b6060611f7b8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612019565b905092915050565b600080823b905060008111915050919050565b611fae60018260000154611fb990919063ffffffff16565b816000018190555050565b6000611ffb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506122db565b905092915050565b6001816000016000828254019250508190555050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156120755781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156120fa578881815181106120a157fe5b602001015160f81c60f81b8383806001019450815181106120be57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061208c565b600090505b875181101561216d5787818151811061211457fe5b602001015160f81c60f81b83838060010194508151811061213157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506120ff565b600090505b86518110156121e05786818151811061218757fe5b602001015160f81c60f81b8383806001019450815181106121a457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612172565b600090505b8551811015612253578581815181106121fa57fe5b602001015160f81c60f81b83838060010194508151811061221757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121e5565b600090505b84518110156122c65784818151811061226d57fe5b602001015160f81c60f81b83838060010194508151811061228a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612258565b82995050505050505050505095945050505050565b6000838311158290612323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231a9190612dc4565b60405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123b357805160ff19168380011785556123e1565b828001600101855582156123e1579182015b828111156123e05782518255916020019190600101906123c5565b5b5090506123ee919061241e565b5090565b81548183558181111561241957818360005260206000209182019101612418919061241e565b5b505050565b61244091905b8082111561243c576000816000905550600101612424565b5090565b90565b60008135905061245281613130565b92915050565b600082601f83011261246957600080fd5b600261247c61247782612ef7565b612eca565b9150818385604084028201111561249257600080fd5b60005b838110156124c257816124a888826124cc565b845260208401935060408301925050600181019050612495565b5050505092915050565b600082601f8301126124dd57600080fd5b60026124f06124eb82612f19565b612eca565b9150818385602084028201111561250657600080fd5b60005b83811015612536578161251c88826126b0565b845260208401935060208301925050600181019050612509565b5050505092915050565b600082601f83011261255157600080fd5b600261256461255f82612f3b565b612eca565b9150818385602084028201111561257a57600080fd5b60005b838110156125aa578161259088826126b0565b84526020840193506020830192505060018101905061257d565b5050505092915050565b6000813590506125c381613147565b92915050565b6000813590506125d88161315e565b92915050565b6000813590506125ed81613175565b92915050565b60008151905061260281613175565b92915050565b600082601f83011261261957600080fd5b813561262c61262782612f5d565b612eca565b9150808252602083016020830185838301111561264857600080fd5b6126538382846130dd565b50505092915050565b600082601f83011261266d57600080fd5b813561268061267b82612f89565b612eca565b9150808252602083016020830185838301111561269c57600080fd5b6126a78382846130dd565b50505092915050565b6000813590506126bf8161318c565b92915050565b6000813590506126d4816131a3565b92915050565b6000602082840312156126ec57600080fd5b60006126fa84828501612443565b91505092915050565b6000806040838503121561271657600080fd5b600061272485828601612443565b925050602061273585828601612443565b9150509250929050565b60008060006060848603121561275457600080fd5b600061276286828701612443565b935050602061277386828701612443565b9250506040612784868287016126b0565b9150509250925092565b600080600080608085870312156127a457600080fd5b60006127b287828801612443565b94505060206127c387828801612443565b93505060406127d4878288016126b0565b925050606085013567ffffffffffffffff8111156127f157600080fd5b6127fd87828801612608565b91505092959194509250565b6000806040838503121561281c57600080fd5b600061282a85828601612443565b925050602061283b858286016125b4565b9150509250929050565b6000806040838503121561285857600080fd5b600061286685828601612443565b9250506020612877858286016126b0565b9150509250929050565b60006020828403121561289357600080fd5b60006128a1848285016125b4565b91505092915050565b600080604083850312156128bd57600080fd5b60006128cb858286016125c9565b925050602083013567ffffffffffffffff8111156128e857600080fd5b6128f48582860161265c565b9150509250929050565b60008060006060848603121561291357600080fd5b6000612921868287016125c9565b935050602084013567ffffffffffffffff81111561293e57600080fd5b61294a8682870161265c565b925050604084013567ffffffffffffffff81111561296757600080fd5b61297386828701612608565b9150509250925092565b60006020828403121561298f57600080fd5b600061299d848285016125de565b91505092915050565b6000602082840312156129b857600080fd5b60006129c6848285016125f3565b91505092915050565b6000602082840312156129e157600080fd5b60006129ef848285016126b0565b91505092915050565b60008060408385031215612a0b57600080fd5b6000612a19858286016126c5565b9250506020612a2a85828601612443565b9150509250929050565b60008060008060006101608688031215612a4d57600080fd5b6000612a5b888289016126c5565b9550506020612a6c88828901612540565b9450506060612a7d88828901612458565b93505060e0612a8e88828901612540565b925050610120612aa088828901612540565b9150509295509295909350565b612ab681613083565b82525050565b612ac581612ff8565b82525050565b612ad48161300a565b82525050565b6000612ae582612fb5565b612aef8185612fcb565b9350612aff8185602086016130ec565b612b088161311f565b840191505092915050565b612b1c81613095565b82525050565b6000612b2d82612fc0565b612b378185612fdc565b9350612b478185602086016130ec565b612b508161311f565b840191505092915050565b6000612b6682612fc0565b612b708185612fed565b9350612b808185602086016130ec565b80840191505092915050565b6000612b99602e83612fdc565b91507f6f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008301527f20746869732066756e6374696f6e0000000000000000000000000000000000006020830152604082019050919050565b6000612bff601283612fdc565b91507f4e6f7420612076616c69642061647265737300000000000000000000000000006000830152602082019050919050565b6000612c3f601e83612fdc565b91507f546f6b656e20666f72206f776e657220616c72656164792065786973747300006000830152602082019050919050565b6000612c7f601783612fdc565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b6000612cbf601383612fdc565b91507f4572726f72206d696e74696e6720746f6b656e000000000000000000000000006000830152602082019050919050565b612cfb8161306c565b82525050565b612d0a81613076565b82525050565b6000612d1c8284612b5b565b915081905092915050565b6000602082019050612d3c6000830184612abc565b92915050565b6000608082019050612d576000830187612aad565b612d646020830186612abc565b612d716040830185612cf2565b8181036060830152612d838184612ada565b905095945050505050565b6000602082019050612da36000830184612acb565b92915050565b6000602082019050612dbe6000830184612b13565b92915050565b60006020820190508181036000830152612dde8184612b22565b905092915050565b60006020820190508181036000830152612dff81612b8c565b9050919050565b60006020820190508181036000830152612e1f81612bf2565b9050919050565b60006020820190508181036000830152612e3f81612c32565b9050919050565b60006020820190508181036000830152612e5f81612c72565b9050919050565b60006020820190508181036000830152612e7f81612cb2565b9050919050565b6000602082019050612e9b6000830184612cf2565b92915050565b6000604082019050612eb66000830185612d01565b612ec36020830184612abc565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715612eed57600080fd5b8060405250919050565b600067ffffffffffffffff821115612f0e57600080fd5b602082029050919050565b600067ffffffffffffffff821115612f3057600080fd5b602082029050919050565b600067ffffffffffffffff821115612f5257600080fd5b602082029050919050565b600067ffffffffffffffff821115612f7457600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612fa057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006130038261304c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061308e826130b9565b9050919050565b60006130a0826130a7565b9050919050565b60006130b28261304c565b9050919050565b60006130c4826130cb565b9050919050565b60006130d68261304c565b9050919050565b82818337600083830152505050565b60005b8381101561310a5780820151818401526020810190506130ef565b83811115613119576000848401525b50505050565b6000601f19601f8301169050919050565b61313981612ff8565b811461314457600080fd5b50565b6131508161300a565b811461315b57600080fd5b50565b61316781613016565b811461317257600080fd5b50565b61317e81613020565b811461318957600080fd5b50565b6131958161306c565b81146131a057600080fd5b50565b6131ac81613076565b81146131b757600080fd5b5056fea365627a7a723158204accc31081a2a56ab71cfcb2098c040b346705c76ded7e11f3b35b015ae14ecc6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "576:1462:2:-;;;1123:103;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:103:2;;;;;;;;;;;;;;;;;;;;;;;;19802:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:10;887:6;;:19;;;;;;;;;;;;;;;;;;2211:16;2221:5;2211:9;;;:16;;:::i;:::-;3034:40;2631:10;3053:20;;3034:18;;;:40;;:::i;:::-;5180;5054:10;5199:20;;5180:18;;;:40;;:::i;:::-;12479:51;12085:10;12498:31;;12479:18;;;:51;;:::i;:::-;19951:4;19943:5;:12;;;;;;;;;;;;:::i;:::-;;19975:6;19965:7;:16;;;;;;;;;;;;:::i;:::-;;20007:12;19991:13;:28;;;;;;;;;;;;:::i;:::-;;20030:49;19613:10;20049:29;;20030:18;;;:49;;:::i;:::-;19802:284;;;1205:15:2;1173:14;;:48;;;;;;;;;;;;;;;;;;1123:103;576:1462;;2240:83:0;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:79;;;;;;;;;;;;;;;;;;;;;;2311:5;2301:7;;:15;;;;;;;;;;;;;;;;;;2240:83;:::o;3384:158::-;3474:10;3459:25;;:11;:25;;;;;3451:34;;;;;;3531:4;3495:20;:33;3516:11;3495:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3384:158;:::o;576:1462:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:383;;577:67;641:2;636:3;577:67;;;570:74;;677:34;673:1;668:3;664:11;657:55;746:16;741:2;736:3;732:12;725:38;791:2;786:3;782:12;775:19;;563:237;;;;808:407;;999:2;988:9;984:18;976:26;;1049:9;1043:4;1039:20;1035:1;1024:9;1020:17;1013:47;1074:131;1200:4;1074:131;;;1066:139;;970:245;;;;1223:163;;1338:6;1333:3;1326:19;1375:4;1370:3;1366:14;1351:29;;1319:67;;;;;1394:91;;1456:24;1474:5;1456:24;;;1445:35;;1439:46;;;;1492:121;;1565:42;1558:5;1554:54;1543:65;;1537:76;;;;1620:117;1689:24;1707:5;1689:24;;;1682:5;1679:35;1669:2;;1728:1;1725;1718:12;1669:2;1663:74;;576:1462:2;;;;;;;",
  "deployedSourceMap": "576:1462:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:1462:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6288:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5756:526;;;;;;;;;;;;;;;;:::i;:::-;;20260:85;;;:::i;:::-;;;;;;;;;;;;;;;;2240:83;;;;;;;;;;;;;;;;:::i;:::-;;20173:81;;;:::i;:::-;;;;;;;;;;;;;;;;13244:94;;;:::i;:::-;;;;;;;;;;;;;;;;7432:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:1;;;;;;;;;;;;;;;;:::i;:::-;;12910:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:1;;;;;;;;;;;;;;;;:::i;:::-;;22469:230:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7618:132;;;;;;;;;;;;;;;;:::i;:::-;;788:36:2;;;:::i;:::-;;;;;;;;;;;;;;;;13675:148:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1311:271:2;;;;;;;;;;;;;;;;:::i;:::-;;5521:162:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5233:282;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1587:449:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1243:80:0;;;:::i;:::-;;;;;;;;;;;;;;;;6747:213;;;;;;;;;;;;;;;;:::i;:::-;;7756:211;;;;;;;;;;;;;;;;:::i;:::-;;20351:97;;;:::i;:::-;;;;;;;;;;;;;;;;20454:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7281:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1329:319;;;;;;;;;;;;;;;;:::i;:::-;;3172:133;3242:4;3265:20;:33;3286:11;3265:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3258:40;;3172:133;;;:::o;6288:167::-;6347:7;6424:15;:24;6440:7;6424:24;;;;;;;;;;;;;;;;;;;;;6417:31;;6288:167;;;:::o;5756:526::-;5919:11;:20;5931:7;5919:20;;;;;;;;;;;;;;;;;;;;;5913:26;;:2;:26;;;;5905:35;;;;;;6077:11;:20;6089:7;6077:20;;;;;;;;;;;;;;;;;;;;;6063:34;;:10;:34;;;6055:43;;;;;;6188:2;6161:15;:24;6177:7;6161:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6267:7;6263:2;6242:33;;6251:10;6242:33;;;;;;;;;;;;5756:526;;:::o;20260:85::-;20299:13;20331:7;20324:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20260:85;:::o;2240:83::-;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:79;;;;;;;;;;;;;;;;;;;;;;2311:5;2301:7;;:15;;;;;;;;;;;;;;;;;;2240:83;:::o;20173:81::-;20210:13;20242:5;20235:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20173:81;:::o;13244:94::-;13288:7;13314:10;:17;;;;13307:24;;13244:94;:::o;7432:180::-;7522:39;7541:10;7553:7;7522:18;:39::i;:::-;7514:48;;;;;;7573:32;7587:4;7593:2;7597:7;7573:13;:32::i;:::-;7432:180;;;:::o;14801:122:1:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:1;;;;14876:10;:40::i;:::-;14801:122;;:::o;12910:182:0:-;12990:7;13025:16;13035:5;13025:9;:16::i;:::-;13017:5;:24;13009:33;;;;;;13059:12;:19;13072:5;13059:19;;;;;;;;;;;;;;;13079:5;13059:26;;;;;;;;;;;;;;;;13052:33;;12910:182;;;;:::o;14929:166:1:-;;;;:::o;22469:230:0:-;22535:4;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:79;;;;;;;;;;;;;;;;;;;;;;22551:24;22563:2;22567:7;22551:11;:24::i;:::-;22586:17;22606:26;22624:7;22606:17;:26::i;:::-;22586:46;;22666:3;22647:23;;;;;;;;;;;;;;;22662:2;22647:23;;;;;;;;;;;;22688:4;22681:11;;;22469:230;;;;:::o;7618:132::-;7704:39;7721:4;7727:2;7731:7;7704:39;;;;;;;;;;;;:16;:39::i;:::-;7618:132;;;:::o;788:36:2:-;;;;;;;;;;;;;:::o;13675:148:0:-;13733:7;13768:13;:11;:13::i;:::-;13760:5;:21;13752:30;;;;;;13799:10;13810:5;13799:17;;;;;;;;;;;;;;;;13792:24;;13675:148;;;:::o;1311:271:2:-;1377:19;;:::i;:::-;1399:9;:17;1409:6;1399:17;;;;;;;;;;;;;;;1377:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:4;1430:19;;1431:3;:10;;;1430:11;:19;;;1422:55;;;;;;;;;;;;;;;;;;;;;;1503:32;;;;;;;;1512:6;1503:32;;;;;;1520:8;1503:32;;;;;;1530:4;1503:32;;;;;1483:9;:17;1493:6;1483:17;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:31;1560:6;1568:8;1546:31;;;;;;;;;;;;;;;;1311:271;;;:::o;5521:162:0:-;5576:7;5656:11;:20;5668:7;5656:20;;;;;;;;;;;;;;;;;;;;;5649:27;;5521:162;;;:::o;5233:282::-;5288:7;5477:17;:24;5495:5;5477:24;;;;;;;;;;;;;;;:31;;;5470:38;;5233:282;;;:::o;1587:449:2:-;1732:11;1897:31;1909:6;1917:10;1897:11;:31::i;:::-;1947:30;1958:10;1970:6;1947:30;;:10;:30::i;:::-;1938:39;;2003:4;1993:14;;:6;:14;;;1985:46;;;;;;;;;;;;;;;;;;;;;;1587:449;;;;;;;:::o;1243:80:0:-;1284:7;1310:6;;;;;;;;;;;1303:13;;1243:80;:::o;6747:213::-;6832:10;6826:16;;:2;:16;;;;6818:25;;;;;;6890:8;6853:18;:30;6872:10;6853:30;;;;;;;;;;;;;;;:34;6884:2;6853:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6940:2;6913:40;;6928:10;6913:40;;;6944:8;6913:40;;;;;;;;;;;;;;;6747:213;;:::o;7756:211::-;7862:31;7875:4;7881:2;7885:7;7862:12;:31::i;:::-;7911:48;7934:4;7940:2;7944:7;7953:5;7911:22;:48::i;:::-;7903:57;;;;;;7756:211;;;;:::o;20351:97::-;20396:13;20428;20421:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20351:97;:::o;20454:151::-;20512:13;20545:16;20553:7;20545;:16::i;:::-;20537:25;;;;;;20579:10;:19;20590:7;20579:19;;;;;;;;;;;20572:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20454:151;;;:::o;7281:145::-;7361:4;7384:18;:25;7403:5;7384:25;;;;;;;;;;;;;;;:35;7410:8;7384:35;;;;;;;;;;;;;;;;;;;;;;;;;7377:42;;7281:145;;;;:::o;1329:319::-;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:79;;;;;;;;;;;;;;;;;;;;;;1567:1;1547:22;;:8;:22;;;;1539:31;;;;;;1589:8;1580:6;;:17;;;;;;;;;;;;;;;;;;1612:29;1632:8;1612:29;;;;;;;;;;;;;;;1329:319;:::o;8673:246::-;8758:4;8774:13;8790:16;8798:7;8790;:16::i;:::-;8774:32;;8835:5;8824:16;;:7;:16;;;:51;;;;8868:7;8844:31;;:20;8856:7;8844:11;:20::i;:::-;:31;;;8824:51;:87;;;;8879:32;8896:5;8903:7;8879:16;:32::i;:::-;8824:87;8816:96;;;8673:246;;;;:::o;14198:239::-;14283:38;14303:4;14309:2;14313:7;14283:19;:38::i;:::-;14332:47;14365:4;14371:7;14332:32;:47::i;:::-;14390:40;14418:2;14422:7;14390:27;:40::i;:::-;14198:239;;;:::o;14692:196::-;14755:24;14767:2;14771:7;14755:11;:24::i;:::-;14790:40;14818:2;14822:7;14790:27;:40::i;:::-;14841;14873:7;14841:31;:40::i;:::-;14692:196;;:::o;21083:239::-;21136:13;21169:16;21177:7;21169;:16::i;:::-;21161:25;;;;;;21196:17;21216:43;21226:13;21216:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21241:17;21250:7;21241:8;:17::i;:::-;21216:9;:43::i;:::-;21196:63;;21291:3;21269:10;:19;21280:7;21269:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;21312:3;21305:10;;;21083:239;;;:::o;10930:347::-;11051:4;11076:15;:2;:13;;;:15::i;:::-;11071:58;;11114:4;11107:11;;;;11071:58;11139:13;11171:2;11155:36;;;11192:10;11204:4;11210:7;11219:5;11155:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11155:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11155:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11155:70:0;;;;;;;;;11139:86;;4187:10;11253:16;;11243:26;;;:6;:26;;;;11235:35;;;10930:347;;;;;;;:::o;8161:152::-;8218:4;8234:13;8250:11;:20;8262:7;8250:20;;;;;;;;;;;;;;;;;;;;;8234:36;;8304:1;8287:19;;:5;:19;;;;8280:26;;;8161:152;;;:::o;9742:660::-;9930:4;9906:28;;:11;:20;9918:7;9906:20;;;;;;;;;;;;;;;;;;;;;:28;;;9898:37;;;;;;10054:4;10022:36;;:18;:24;10041:4;10022:24;;;;;;;;;;;;;;;:28;10047:2;10022:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;10014:67;;;;;;;;;;;;;;;;;;;;;;10155:5;10124:18;:24;10143:4;10124:24;;;;;;;;;;;;;;;:28;10149:2;10124:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;10246:35;:17;:23;10264:4;10246:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10314:2;10291:11;:20;10303:7;10291:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10387:7;10383:2;10368:27;;10377:4;10368:27;;;;;;;;;;;;9742:660;;;:::o;16664:1128::-;16926:22;16951:32;16981:1;16951:12;:18;16964:4;16951:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;16926:57;;16993:18;17014:17;:26;17032:7;17014:26;;;;;;;;;;;;16993:47;;17158:14;17144:10;:28;17140:323;;17188:19;17210:12;:18;17223:4;17210:18;;;;;;;;;;;;;;;17229:14;17210:34;;;;;;;;;;;;;;;;17188:56;;17292:11;17259:12;:18;17272:4;17259:18;;;;;;;;;;;;;;;17278:10;17259:30;;;;;;;;;;;;;;;:44;;;;17408:10;17375:17;:30;17393:11;17375:30;;;;;;;;;;;:43;;;;17140:323;;17549:12;:18;17562:4;17549:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16664:1128;;;;:::o;15510:183::-;15623:12;:16;15636:2;15623:16;;;;;;;;;;;;;;;:23;;;;15594:17;:26;15612:7;15594:26;;;;;;;;;;;:52;;;;15656:12;:16;15669:2;15656:16;;;;;;;;;;;;;;;15678:7;15656:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15656:30:0;;;;;;;;;;;;;;;;;;;;;;15510:183;;:::o;9076:467::-;9255:2;9231:26;;:11;:20;9243:7;9231:20;;;;;;;;;;;;;;;;;;;;;:26;;;;9223:69;;;;;;;;;;;;;;;;;;;;;;9406:2;9383:11;:20;9395:7;9383:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9418:33;:17;:21;9436:2;9418:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9528:7;9524:2;9503:33;;9512:10;9503:33;;;;;;;;;;;;9076:467;;:::o;15888:161::-;15991:10;:17;;;;15964:15;:24;15980:7;15964:24;;;;;;;;;;;:44;;;;16018:10;16034:7;16018:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16018:24:0;;;;;;;;;;;;;;;;;;;;;;15888:161;:::o;43271:465:1:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:1;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:468:7:-;746:4;1004:12;1113:7;1101:20;1093:28;;1146:1;1139:4;:8;1132:15;;;686:468;;;:::o;1367:108:4:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:5:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1183:178:4:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;40282:1020:1:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:1;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:5:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;576:1462:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;164:673;;298:3;291:4;283:6;279:17;275:27;265:2;;316:1;313;306:12;265:2;340:4;359:97;374:81;448:6;374:81;;;359:97;;;350:106;;473:5;532:6;579:3;571:4;563:6;559:17;554:3;550:27;547:36;544:2;;;596:1;593;586:12;544:2;621:1;606:225;631:6;628:1;625:13;606:225;;;689:3;711:56;763:3;751:10;711:56;;;706:3;699:69;791:4;786:3;782:14;775:21;;819:4;814:3;810:14;803:21;;663:168;653:1;650;646:9;641:14;;606:225;;;610:14;258:579;;;;;;;;864:608;;975:3;968:4;960:6;956:17;952:27;942:2;;993:1;990;983:12;942:2;1017:4;1036:74;1051:58;1102:6;1051:58;;;1036:74;;;1027:83;;1127:5;1186:6;1233:3;1225:4;1217:6;1213:17;1208:3;1204:27;1201:36;1198:2;;;1250:1;1247;1240:12;1198:2;1275:1;1260:206;1285:6;1282:1;1279:13;1260:206;;;1343:3;1365:37;1398:3;1386:10;1365:37;;;1360:3;1353:50;1426:4;1421:3;1417:14;1410:21;;1454:4;1449:3;1445:14;1438:21;;1317:149;1307:1;1304;1300:9;1295:14;;1260:206;;;1264:14;935:537;;;;;;;;1499:616;;1614:3;1607:4;1599:6;1595:17;1591:27;1581:2;;1632:1;1629;1622:12;1581:2;1656:4;1675:78;1690:62;1745:6;1690:62;;;1675:78;;;1666:87;;1770:5;1829:6;1876:3;1868:4;1860:6;1856:17;1851:3;1847:27;1844:36;1841:2;;;1893:1;1890;1883:12;1841:2;1918:1;1903:206;1928:6;1925:1;1922:13;1903:206;;;1986:3;2008:37;2041:3;2029:10;2008:37;;;2003:3;1996:50;2069:4;2064:3;2060:14;2053:21;;2097:4;2092:3;2088:14;2081:21;;1960:149;1950:1;1947;1943:9;1938:14;;1903:206;;;1907:14;1574:541;;;;;;;;2123:124;;2200:6;2187:20;2178:29;;2212:30;2236:5;2212:30;;;2172:75;;;;;2254:130;;2334:6;2321:20;2312:29;;2346:33;2373:5;2346:33;;;2306:78;;;;;2391:128;;2470:6;2457:20;2448:29;;2482:32;2508:5;2482:32;;;2442:77;;;;;2526:132;;2609:6;2603:13;2594:22;;2621:32;2647:5;2621:32;;;2588:70;;;;;2666:440;;2767:3;2760:4;2752:6;2748:17;2744:27;2734:2;;2785:1;2782;2775:12;2734:2;2822:6;2809:20;2844:64;2859:48;2900:6;2859:48;;;2844:64;;;2835:73;;2928:6;2921:5;2914:21;2964:4;2956:6;2952:17;2997:4;2990:5;2986:16;3032:3;3023:6;3018:3;3014:16;3011:25;3008:2;;;3049:1;3046;3039:12;3008:2;3059:41;3093:6;3088:3;3083;3059:41;;;2727:379;;;;;;;;3115:442;;3217:3;3210:4;3202:6;3198:17;3194:27;3184:2;;3235:1;3232;3225:12;3184:2;3272:6;3259:20;3294:65;3309:49;3351:6;3309:49;;;3294:65;;;3285:74;;3379:6;3372:5;3365:21;3415:4;3407:6;3403:17;3448:4;3441:5;3437:16;3483:3;3474:6;3469:3;3465:16;3462:25;3459:2;;;3500:1;3497;3490:12;3459:2;3510:41;3544:6;3539:3;3534;3510:41;;;3177:380;;;;;;;;3565:130;;3645:6;3632:20;3623:29;;3657:33;3684:5;3657:33;;;3617:78;;;;;3702:126;;3780:6;3767:20;3758:29;;3792:31;3817:5;3792:31;;;3752:76;;;;;3835:241;;3939:2;3927:9;3918:7;3914:23;3910:32;3907:2;;;3955:1;3952;3945:12;3907:2;3990:1;4007:53;4052:7;4043:6;4032:9;4028:22;4007:53;;;3997:63;;3969:97;3901:175;;;;;4083:366;;;4204:2;4192:9;4183:7;4179:23;4175:32;4172:2;;;4220:1;4217;4210:12;4172:2;4255:1;4272:53;4317:7;4308:6;4297:9;4293:22;4272:53;;;4262:63;;4234:97;4362:2;4380:53;4425:7;4416:6;4405:9;4401:22;4380:53;;;4370:63;;4341:98;4166:283;;;;;;4456:491;;;;4594:2;4582:9;4573:7;4569:23;4565:32;4562:2;;;4610:1;4607;4600:12;4562:2;4645:1;4662:53;4707:7;4698:6;4687:9;4683:22;4662:53;;;4652:63;;4624:97;4752:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;;;4760:63;;4731:98;4860:2;4878:53;4923:7;4914:6;4903:9;4899:22;4878:53;;;4868:63;;4839:98;4556:391;;;;;;4954:721;;;;;5118:3;5106:9;5097:7;5093:23;5089:33;5086:2;;;5135:1;5132;5125:12;5086:2;5170:1;5187:53;5232:7;5223:6;5212:9;5208:22;5187:53;;;5177:63;;5149:97;5277:2;5295:53;5340:7;5331:6;5320:9;5316:22;5295:53;;;5285:63;;5256:98;5385:2;5403:53;5448:7;5439:6;5428:9;5424:22;5403:53;;;5393:63;;5364:98;5521:2;5510:9;5506:18;5493:32;5545:18;5537:6;5534:30;5531:2;;;5577:1;5574;5567:12;5531:2;5597:62;5651:7;5642:6;5631:9;5627:22;5597:62;;;5587:72;;5472:193;5080:595;;;;;;;;5682:360;;;5800:2;5788:9;5779:7;5775:23;5771:32;5768:2;;;5816:1;5813;5806:12;5768:2;5851:1;5868:53;5913:7;5904:6;5893:9;5889:22;5868:53;;;5858:63;;5830:97;5958:2;5976:50;6018:7;6009:6;5998:9;5994:22;5976:50;;;5966:60;;5937:95;5762:280;;;;;;6049:366;;;6170:2;6158:9;6149:7;6145:23;6141:32;6138:2;;;6186:1;6183;6176:12;6138:2;6221:1;6238:53;6283:7;6274:6;6263:9;6259:22;6238:53;;;6228:63;;6200:97;6328:2;6346:53;6391:7;6382:6;6371:9;6367:22;6346:53;;;6336:63;;6307:98;6132:283;;;;;;6422:235;;6523:2;6511:9;6502:7;6498:23;6494:32;6491:2;;;6539:1;6536;6529:12;6491:2;6574:1;6591:50;6633:7;6624:6;6613:9;6609:22;6591:50;;;6581:60;;6553:94;6485:172;;;;;6664:472;;;6795:2;6783:9;6774:7;6770:23;6766:32;6763:2;;;6811:1;6808;6801:12;6763:2;6846:1;6863:53;6908:7;6899:6;6888:9;6884:22;6863:53;;;6853:63;;6825:97;6981:2;6970:9;6966:18;6953:32;7005:18;6997:6;6994:30;6991:2;;;7037:1;7034;7027:12;6991:2;7057:63;7112:7;7103:6;7092:9;7088:22;7057:63;;;7047:73;;6932:194;6757:379;;;;;;7143:701;;;;7300:2;7288:9;7279:7;7275:23;7271:32;7268:2;;;7316:1;7313;7306:12;7268:2;7351:1;7368:53;7413:7;7404:6;7393:9;7389:22;7368:53;;;7358:63;;7330:97;7486:2;7475:9;7471:18;7458:32;7510:18;7502:6;7499:30;7496:2;;;7542:1;7539;7532:12;7496:2;7562:63;7617:7;7608:6;7597:9;7593:22;7562:63;;;7552:73;;7437:194;7690:2;7679:9;7675:18;7662:32;7714:18;7706:6;7703:30;7700:2;;;7746:1;7743;7736:12;7700:2;7766:62;7820:7;7811:6;7800:9;7796:22;7766:62;;;7756:72;;7641:193;7262:582;;;;;;7851:239;;7954:2;7942:9;7933:7;7929:23;7925:32;7922:2;;;7970:1;7967;7960:12;7922:2;8005:1;8022:52;8066:7;8057:6;8046:9;8042:22;8022:52;;;8012:62;;7984:96;7916:174;;;;;8097:261;;8211:2;8199:9;8190:7;8186:23;8182:32;8179:2;;;8227:1;8224;8217:12;8179:2;8262:1;8279:63;8334:7;8325:6;8314:9;8310:22;8279:63;;;8269:73;;8241:107;8173:185;;;;;8365:241;;8469:2;8457:9;8448:7;8444:23;8440:32;8437:2;;;8485:1;8482;8475:12;8437:2;8520:1;8537:53;8582:7;8573:6;8562:9;8558:22;8537:53;;;8527:63;;8499:97;8431:175;;;;;8613:362;;;8732:2;8720:9;8711:7;8707:23;8703:32;8700:2;;;8748:1;8745;8738:12;8700:2;8783:1;8800:51;8843:7;8834:6;8823:9;8819:22;8800:51;;;8790:61;;8762:95;8888:2;8906:53;8951:7;8942:6;8931:9;8927:22;8906:53;;;8896:63;;8867:98;8694:281;;;;;;8982:962;;;;;;9263:3;9251:9;9242:7;9238:23;9234:33;9231:2;;;9280:1;9277;9270:12;9231:2;9315:1;9332:51;9375:7;9366:6;9355:9;9351:22;9332:51;;;9322:61;;9294:95;9420:2;9438:76;9506:7;9497:6;9486:9;9482:22;9438:76;;;9428:86;;9399:121;9551:2;9569:95;9656:7;9647:6;9636:9;9632:22;9569:95;;;9559:105;;9530:140;9701:3;9720:76;9788:7;9779:6;9768:9;9764:22;9720:76;;;9710:86;;9680:122;9833:3;9852:76;9920:7;9911:6;9900:9;9896:22;9852:76;;;9842:86;;9812:122;9225:719;;;;;;;;;9951:142;10042:45;10081:5;10042:45;;;10037:3;10030:58;10024:69;;;10100:113;10183:24;10201:5;10183:24;;;10178:3;10171:37;10165:48;;;10220:104;10297:21;10312:5;10297:21;;;10292:3;10285:34;10279:45;;;10331:343;;10441:38;10473:5;10441:38;;;10491:70;10554:6;10549:3;10491:70;;;10484:77;;10566:52;10611:6;10606:3;10599:4;10592:5;10588:16;10566:52;;;10639:29;10661:6;10639:29;;;10634:3;10630:39;10623:46;;10421:253;;;;;;10681:174;10788:61;10843:5;10788:61;;;10783:3;10776:74;10770:85;;;10862:347;;10974:39;11007:5;10974:39;;;11025:71;11089:6;11084:3;11025:71;;;11018:78;;11101:52;11146:6;11141:3;11134:4;11127:5;11123:16;11101:52;;;11174:29;11196:6;11174:29;;;11169:3;11165:39;11158:46;;10954:255;;;;;;11216:360;;11346:39;11379:5;11346:39;;;11397:89;11479:6;11474:3;11397:89;;;11390:96;;11491:52;11536:6;11531:3;11524:4;11517:5;11513:16;11491:52;;;11564:6;11559:3;11555:16;11548:23;;11326:250;;;;;;11584:383;;11744:67;11808:2;11803:3;11744:67;;;11737:74;;11844:34;11840:1;11835:3;11831:11;11824:55;11913:16;11908:2;11903:3;11899:12;11892:38;11958:2;11953:3;11949:12;11942:19;;11730:237;;;;11976:318;;12136:67;12200:2;12195:3;12136:67;;;12129:74;;12236:20;12232:1;12227:3;12223:11;12216:41;12285:2;12280:3;12276:12;12269:19;;12122:172;;;;12303:330;;12463:67;12527:2;12522:3;12463:67;;;12456:74;;12563:32;12559:1;12554:3;12550:11;12543:53;12624:2;12619:3;12615:12;12608:19;;12449:184;;;;12642:323;;12802:67;12866:2;12861:3;12802:67;;;12795:74;;12902:25;12898:1;12893:3;12889:11;12882:46;12956:2;12951:3;12947:12;12940:19;;12788:177;;;;12974:319;;13134:67;13198:2;13193:3;13134:67;;;13127:74;;13234:21;13230:1;13225:3;13221:11;13214:42;13284:2;13279:3;13275:12;13268:19;;13120:173;;;;13301:113;13384:24;13402:5;13384:24;;;13379:3;13372:37;13366:48;;;13421:107;13500:22;13516:5;13500:22;;;13495:3;13488:35;13482:46;;;13535:266;;13681:95;13772:3;13763:6;13681:95;;;13674:102;;13793:3;13786:10;;13662:139;;;;;13808:213;;13926:2;13915:9;13911:18;13903:26;;13940:71;14008:1;13997:9;13993:17;13984:6;13940:71;;;13897:124;;;;;14028:647;;14256:3;14245:9;14241:19;14233:27;;14271:79;14347:1;14336:9;14332:17;14323:6;14271:79;;;14361:72;14429:2;14418:9;14414:18;14405:6;14361:72;;;14444;14512:2;14501:9;14497:18;14488:6;14444:72;;;14564:9;14558:4;14554:20;14549:2;14538:9;14534:18;14527:48;14589:76;14660:4;14651:6;14589:76;;;14581:84;;14227:448;;;;;;;;14682:201;;14794:2;14783:9;14779:18;14771:26;;14808:65;14870:1;14859:9;14855:17;14846:6;14808:65;;;14765:118;;;;;14890:261;;15032:2;15021:9;15017:18;15009:26;;15046:95;15138:1;15127:9;15123:17;15114:6;15046:95;;;15003:148;;;;;15158:301;;15296:2;15285:9;15281:18;15273:26;;15346:9;15340:4;15336:20;15332:1;15321:9;15317:17;15310:47;15371:78;15444:4;15435:6;15371:78;;;15363:86;;15267:192;;;;;15466:407;;15657:2;15646:9;15642:18;15634:26;;15707:9;15701:4;15697:20;15693:1;15682:9;15678:17;15671:47;15732:131;15858:4;15732:131;;;15724:139;;15628:245;;;;15880:407;;16071:2;16060:9;16056:18;16048:26;;16121:9;16115:4;16111:20;16107:1;16096:9;16092:17;16085:47;16146:131;16272:4;16146:131;;;16138:139;;16042:245;;;;16294:407;;16485:2;16474:9;16470:18;16462:26;;16535:9;16529:4;16525:20;16521:1;16510:9;16506:17;16499:47;16560:131;16686:4;16560:131;;;16552:139;;16456:245;;;;16708:407;;16899:2;16888:9;16884:18;16876:26;;16949:9;16943:4;16939:20;16935:1;16924:9;16920:17;16913:47;16974:131;17100:4;16974:131;;;16966:139;;16870:245;;;;17122:407;;17313:2;17302:9;17298:18;17290:26;;17363:9;17357:4;17353:20;17349:1;17338:9;17334:17;17327:47;17388:131;17514:4;17388:131;;;17380:139;;17284:245;;;;17536:213;;17654:2;17643:9;17639:18;17631:26;;17668:71;17736:1;17725:9;17721:17;17712:6;17668:71;;;17625:124;;;;;17756:316;;17898:2;17887:9;17883:18;17875:26;;17912:67;17976:1;17965:9;17961:17;17952:6;17912:67;;;17990:72;18058:2;18047:9;18043:18;18034:6;17990:72;;;17869:203;;;;;;18079:256;;18141:2;18135:9;18125:19;;18179:4;18171:6;18167:17;18278:6;18266:10;18263:22;18242:18;18230:10;18227:34;18224:62;18221:2;;;18299:1;18296;18289:12;18221:2;18319:10;18315:2;18308:22;18119:216;;;;;18342:263;;18518:18;18510:6;18507:30;18504:2;;;18550:1;18547;18540:12;18504:2;18585:4;18577:6;18573:17;18565:25;;18441:164;;;;18612:240;;18765:18;18757:6;18754:30;18751:2;;;18797:1;18794;18787:12;18751:2;18832:4;18824:6;18820:17;18812:25;;18688:164;;;;18859:244;;19016:18;19008:6;19005:30;19002:2;;;19048:1;19045;19038:12;19002:2;19083:4;19075:6;19071:17;19063:25;;18939:164;;;;19110:321;;19253:18;19245:6;19242:30;19239:2;;;19285:1;19282;19275:12;19239:2;19352:4;19348:9;19341:4;19333:6;19329:17;19325:33;19317:41;;19416:4;19410;19406:15;19398:23;;19176:255;;;;19438:322;;19582:18;19574:6;19571:30;19568:2;;;19614:1;19611;19604:12;19568:2;19681:4;19677:9;19670:4;19662:6;19658:17;19654:33;19646:41;;19745:4;19739;19735:15;19727:23;;19505:255;;;;19767:121;;19860:5;19854:12;19844:22;;19825:63;;;;19895:122;;19989:5;19983:12;19973:22;;19954:63;;;;20025:162;;20139:6;20134:3;20127:19;20176:4;20171:3;20167:14;20152:29;;20120:67;;;;;20196:163;;20311:6;20306:3;20299:19;20348:4;20343:3;20339:14;20324:29;;20292:67;;;;;20368:145;;20504:3;20489:18;;20482:31;;;;;20521:91;;20583:24;20601:5;20583:24;;;20572:35;;20566:46;;;;20619:85;;20692:5;20685:13;20678:21;20667:32;;20661:43;;;;20711:72;;20773:5;20762:16;;20756:27;;;;20790:144;;20862:66;20855:5;20851:78;20840:89;;20834:100;;;;20941:121;;21014:42;21007:5;21003:54;20992:65;;20986:76;;;;21069:72;;21131:5;21120:16;;21114:27;;;;21148:81;;21219:4;21212:5;21208:16;21197:27;;21191:38;;;;21236:129;;21323:37;21354:5;21323:37;;;21310:50;;21304:61;;;;21372:169;;21475:61;21530:5;21475:61;;;21462:74;;21456:85;;;;21548:132;;21651:24;21669:5;21651:24;;;21638:37;;21632:48;;;;21687:121;;21766:37;21797:5;21766:37;;;21753:50;;21747:61;;;;21815:108;;21894:24;21912:5;21894:24;;;21881:37;;21875:48;;;;21931:145;22012:6;22007:3;22002;21989:30;22068:1;22059:6;22054:3;22050:16;22043:27;21982:94;;;;22085:268;22150:1;22157:101;22171:6;22168:1;22165:13;22157:101;;;22247:1;22242:3;22238:11;22232:18;22228:1;22223:3;22219:11;22212:39;22193:2;22190:1;22186:10;22181:15;;22157:101;;;22273:6;22270:1;22267:13;22264:2;;;22338:1;22329:6;22324:3;22320:16;22313:27;22264:2;22134:219;;;;;22361:97;;22449:2;22445:7;22440:2;22433:5;22429:14;22425:28;22415:38;;22409:49;;;;22466:117;22535:24;22553:5;22535:24;;;22528:5;22525:35;22515:2;;22574:1;22571;22564:12;22515:2;22509:74;;22590:111;22656:21;22671:5;22656:21;;;22649:5;22646:32;22636:2;;22692:1;22689;22682:12;22636:2;22630:71;;22708:117;22777:24;22795:5;22777:24;;;22770:5;22767:35;22757:2;;22816:1;22813;22806:12;22757:2;22751:74;;22832:115;22900:23;22917:5;22900:23;;;22893:5;22890:34;22880:2;;22938:1;22935;22928:12;22880:2;22874:73;;22954:117;23023:24;23041:5;23023:24;;;23016:5;23013:35;23003:2;;23062:1;23059;23052:12;23003:2;22997:74;;23078:113;23145:22;23161:5;23145:22;;;23138:5;23135:33;23125:2;;23182:1;23179;23172:12;23125:2;23119:72;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\nimport './SquareVerifier.sol';\nimport './ERC721Mintable.sol';\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// contract Verifier {\n//   constructor() {\n\n//   }\n\n//   function verifyTx(\n//     uint[2] memory a,\n//     uint[2][2] memory b,\n//     uint[2] memory c, \n//     uint[2] memory input\n//   ) public view returns (bool r) {\n//   };\n\n// }\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721MintableComplete {\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n    uint8 _index;\n    address _address;\n    bool exists;\n  }\n\n  SquareVerifier public squareVerifier;\n\n  // TODO define an array of the above struct\n  // Solution[] solutions;\n\n  // TODO define a mapping to store unique solutions submitted\n  mapping(uint8 => Solution) solutions; \n\n  // TODO Create an event to emit when a solution is added\n  event SolutionAdded(uint8 _index, address _address);\n\n  constructor(address verifierAddress) public {\n    squareVerifier = SquareVerifier(verifierAddress);\n  }\n\n  // TODO Create a function to add the solutions to the array and emit the event\n  function addSolution(uint8 _index, address _address) public {\n    Solution memory sol = solutions[_index];\n    require(!sol.exists == true, 'Solution already exists');\n    solutions[_index] = Solution(_index, _address, true);\n    emit SolutionAdded(_index, _address);\n  } \n\n  function mintNtf(\n    uint8 _index,\n    uint[2] memory a,\n    uint[2][2] memory b,\n    uint[2] memory c, uint[2] memory input\n  ) public returns(bool result) {\n      // bool valid = squareVerifier.verifyTx(a, b, c, input);\n      // require(valid == true, \"Cannot mint a new token- Verification failed\");\n      addSolution(_index, msg.sender);  \n      result = super.mint(msg.sender, _index);\n      require(result == true, 'Error minting token');\n  }\n}\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7496
      ]
    },
    "id": 7497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7373,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "id": 7374,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:2"
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7375,
        "nodeType": "ImportDirective",
        "scope": 7497,
        "sourceUnit": 10047,
        "src": "67:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7376,
        "nodeType": "ImportDirective",
        "scope": 7497,
        "sourceUnit": 1104,
        "src": "98:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7377,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1103,
              "src": "607:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1103",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7378,
            "nodeType": "InheritanceSpecifier",
            "src": "607:22:2"
          }
        ],
        "contractDependencies": [
          69,
          122,
          168,
          634,
          932,
          1049,
          1103,
          7371
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7496,
        "linearizedBaseContracts": [
          7496,
          1103,
          1049,
          7371,
          932,
          634,
          168,
          122,
          69
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7385,
            "members": [
              {
                "constant": false,
                "id": 7380,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7385,
                "src": "728:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 7379,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "728:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7382,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7385,
                "src": "746:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7381,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "746:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7384,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7385,
                "src": "768:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7383,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7496,
            "src": "706:78:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7387,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7496,
            "src": "788:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$10046",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7386,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10046,
              "src": "788:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$10046",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7391,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7496,
            "src": "966:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7385_storage_$",
              "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7390,
              "keyType": {
                "id": 7388,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "974:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "966:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7385_storage_$",
                "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7389,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7385,
                "src": "983:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7385_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7397,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7393,
                  "indexed": false,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7397,
                  "src": "1087:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7392,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7395,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7397,
                  "src": "1101:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1086:32:2"
            },
            "src": "1067:52:2"
          },
          {
            "body": {
              "id": 7408,
              "nodeType": "Block",
              "src": "1167:59:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7402,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7387,
                      "src": "1173:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10046",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7404,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7399,
                          "src": "1205:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7403,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10046,
                        "src": "1190:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$10046_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1190:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10046",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "1173:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$10046",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7407,
                  "nodeType": "ExpressionStatement",
                  "src": "1173:48:2"
                }
              ]
            },
            "documentation": null,
            "id": 7409,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7399,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7409,
                  "src": "1135:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1134:25:2"
            },
            "returnParameters": {
              "id": 7401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:2"
            },
            "scope": 7496,
            "src": "1123:103:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7446,
              "nodeType": "Block",
              "src": "1371:211:2",
              "statements": [
                {
                  "assignments": [
                    7417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7417,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7446,
                      "src": "1377:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7385_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7416,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7385,
                        "src": "1377:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7385_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7421,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7418,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7391,
                      "src": "1399:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7385_storage_$",
                        "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7420,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7419,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7411,
                      "src": "1409:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1399:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7385_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1377:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1430:11:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7423,
                              "name": "sol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7417,
                              "src": "1431:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solution_$7385_memory_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution memory"
                              }
                            },
                            "id": 7424,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7384,
                            "src": "1431:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1445:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1430:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10382,
                        10383
                      ],
                      "referencedDeclaration": 10383,
                      "src": "1422:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7430,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7431,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7391,
                        "src": "1483:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7385_storage_$",
                          "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7433,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7432,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7411,
                        "src": "1493:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1483:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7385_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7435,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7411,
                          "src": "1512:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7436,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7413,
                          "src": "1520:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1530:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7434,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7385,
                        "src": "1503:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7385_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1503:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7385_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1483:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7385_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7440,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:52:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7442,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7411,
                        "src": "1560:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7443,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "1568:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7441,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7397,
                      "src": "1546:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7445,
                  "nodeType": "EmitStatement",
                  "src": "1541:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 7447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7411,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "1332:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7410,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7413,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "1346:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1331:32:2"
            },
            "returnParameters": {
              "id": 7415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:2"
            },
            "scope": 7496,
            "src": "1311:271:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7494,
              "nodeType": "Block",
              "src": "1745:291:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7473,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7449,
                        "src": "1909:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7474,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10379,
                          "src": "1917:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1917:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7472,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7447,
                      "src": "1897:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7477,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7478,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7470,
                      "src": "1938:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7481,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10379,
                            "src": "1958:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1958:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7483,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7449,
                          "src": "1970:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7479,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10434,
                          "src": "1947:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SolnSquareVerifier_$7496",
                            "typeString": "contract super SolnSquareVerifier"
                          }
                        },
                        "id": 7480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1102,
                        "src": "1947:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 7484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1947:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1938:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7486,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7488,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7470,
                          "src": "1993:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2003:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1993:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72206d696e74696e6720746f6b656e",
                        "id": 7491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2009:21:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        },
                        "value": "Error minting token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        }
                      ],
                      "id": 7487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10382,
                        10383
                      ],
                      "referencedDeclaration": 10383,
                      "src": "1985:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7493,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:46:2"
                }
              ]
            },
            "documentation": null,
            "id": 7495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNtf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7449,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1609:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7448,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7453,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1627:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7450,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1627:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7452,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1632:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1627:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7459,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1649:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7454,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1649:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7456,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1654:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7458,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1657:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1649:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1674:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7460,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1674:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7462,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1679:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1674:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7467,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1692:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7464,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1692:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7466,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1697:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1692:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:113:2"
            },
            "returnParameters": {
              "id": 7471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7470,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 7495,
                  "src": "1732:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1731:13:2"
            },
            "scope": 7496,
            "src": "1587:449:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7497,
        "src": "576:1462:2"
      }
    ],
    "src": "0:2279:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7496
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7373,
        "name": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7374,
        "name": "PragmaDirective",
        "src": "33:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 10047,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7497,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7375,
        "name": "ImportDirective",
        "src": "67:30:2"
      },
      {
        "attributes": {
          "SourceUnit": 1104,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7497,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7376,
        "name": "ImportDirective",
        "src": "98:30:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            69,
            122,
            168,
            634,
            932,
            1049,
            1103,
            7371
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7496,
            1103,
            1049,
            7371,
            932,
            634,
            168,
            122,
            69
          ],
          "name": "SolnSquareVerifier",
          "scope": 7497
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1103,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7377,
                "name": "UserDefinedTypeName",
                "src": "607:22:2"
              }
            ],
            "id": 7378,
            "name": "InheritanceSpecifier",
            "src": "607:22:2"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7496,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7385,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint8",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7379,
                    "name": "ElementaryTypeName",
                    "src": "728:5:2"
                  }
                ],
                "id": 7380,
                "name": "VariableDeclaration",
                "src": "728:12:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7385,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7381,
                    "name": "ElementaryTypeName",
                    "src": "746:7:2"
                  }
                ],
                "id": 7382,
                "name": "VariableDeclaration",
                "src": "746:16:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exists",
                  "scope": 7385,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7383,
                    "name": "ElementaryTypeName",
                    "src": "768:4:2"
                  }
                ],
                "id": 7384,
                "name": "VariableDeclaration",
                "src": "768:11:2"
              }
            ],
            "id": 7385,
            "name": "StructDefinition",
            "src": "706:78:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "squareVerifier",
              "scope": 7496,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract SquareVerifier",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 10046,
                  "type": "contract SquareVerifier"
                },
                "id": 7386,
                "name": "UserDefinedTypeName",
                "src": "788:14:2"
              }
            ],
            "id": 7387,
            "name": "VariableDeclaration",
            "src": "788:36:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7496,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7388,
                    "name": "ElementaryTypeName",
                    "src": "974:5:2"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7385,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7389,
                    "name": "UserDefinedTypeName",
                    "src": "983:8:2"
                  }
                ],
                "id": 7390,
                "name": "Mapping",
                "src": "966:26:2"
              }
            ],
            "id": 7391,
            "name": "VariableDeclaration",
            "src": "966:36:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_index",
                      "scope": 7397,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7392,
                        "name": "ElementaryTypeName",
                        "src": "1087:5:2"
                      }
                    ],
                    "id": 7393,
                    "name": "VariableDeclaration",
                    "src": "1087:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7397,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7394,
                        "name": "ElementaryTypeName",
                        "src": "1101:7:2"
                      }
                    ],
                    "id": 7395,
                    "name": "VariableDeclaration",
                    "src": "1101:16:2"
                  }
                ],
                "id": 7396,
                "name": "ParameterList",
                "src": "1086:32:2"
              }
            ],
            "id": 7397,
            "name": "EventDefinition",
            "src": "1067:52:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7496,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7409,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7398,
                        "name": "ElementaryTypeName",
                        "src": "1135:7:2"
                      }
                    ],
                    "id": 7399,
                    "name": "VariableDeclaration",
                    "src": "1135:23:2"
                  }
                ],
                "id": 7400,
                "name": "ParameterList",
                "src": "1134:25:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7401,
                "name": "ParameterList",
                "src": "1167:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract SquareVerifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7387,
                              "type": "contract SquareVerifier",
                              "value": "squareVerifier"
                            },
                            "id": 7402,
                            "name": "Identifier",
                            "src": "1173:14:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract SquareVerifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10046,
                                  "type": "type(contract SquareVerifier)",
                                  "value": "SquareVerifier"
                                },
                                "id": 7403,
                                "name": "Identifier",
                                "src": "1190:14:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7399,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7404,
                                "name": "Identifier",
                                "src": "1205:15:2"
                              }
                            ],
                            "id": 7405,
                            "name": "FunctionCall",
                            "src": "1190:31:2"
                          }
                        ],
                        "id": 7406,
                        "name": "Assignment",
                        "src": "1173:48:2"
                      }
                    ],
                    "id": 7407,
                    "name": "ExpressionStatement",
                    "src": "1173:48:2"
                  }
                ],
                "id": 7408,
                "name": "Block",
                "src": "1167:59:2"
              }
            ],
            "id": 7409,
            "name": "FunctionDefinition",
            "src": "1123:103:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7496,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7447,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7410,
                        "name": "ElementaryTypeName",
                        "src": "1332:5:2"
                      }
                    ],
                    "id": 7411,
                    "name": "VariableDeclaration",
                    "src": "1332:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7447,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7412,
                        "name": "ElementaryTypeName",
                        "src": "1346:7:2"
                      }
                    ],
                    "id": 7413,
                    "name": "VariableDeclaration",
                    "src": "1346:16:2"
                  }
                ],
                "id": 7414,
                "name": "ParameterList",
                "src": "1331:32:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7415,
                "name": "ParameterList",
                "src": "1371:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7417
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7446,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7385,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7416,
                            "name": "UserDefinedTypeName",
                            "src": "1377:8:2"
                          }
                        ],
                        "id": 7417,
                        "name": "VariableDeclaration",
                        "src": "1377:19:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7391,
                              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                              "value": "solutions"
                            },
                            "id": 7418,
                            "name": "Identifier",
                            "src": "1399:9:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7411,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7419,
                            "name": "Identifier",
                            "src": "1409:6:2"
                          }
                        ],
                        "id": 7420,
                        "name": "IndexAccess",
                        "src": "1399:17:2"
                      }
                    ],
                    "id": 7421,
                    "name": "VariableDeclarationStatement",
                    "src": "1377:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                                  "typeString": "literal_string \"Solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10382,
                                10383
                              ],
                              "referencedDeclaration": 10383,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7422,
                            "name": "Identifier",
                            "src": "1422:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "exists",
                                      "referencedDeclaration": 7384,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7417,
                                          "type": "struct SolnSquareVerifier.Solution memory",
                                          "value": "sol"
                                        },
                                        "id": 7423,
                                        "name": "Identifier",
                                        "src": "1431:3:2"
                                      }
                                    ],
                                    "id": 7424,
                                    "name": "MemberAccess",
                                    "src": "1431:10:2"
                                  }
                                ],
                                "id": 7425,
                                "name": "UnaryOperation",
                                "src": "1430:11:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7426,
                                "name": "Literal",
                                "src": "1445:4:2"
                              }
                            ],
                            "id": 7427,
                            "name": "BinaryOperation",
                            "src": "1430:19:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists\"",
                              "value": "Solution already exists"
                            },
                            "id": 7428,
                            "name": "Literal",
                            "src": "1451:25:2"
                          }
                        ],
                        "id": 7429,
                        "name": "FunctionCall",
                        "src": "1422:55:2"
                      }
                    ],
                    "id": 7430,
                    "name": "ExpressionStatement",
                    "src": "1422:55:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7391,
                                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7431,
                                "name": "Identifier",
                                "src": "1483:9:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7411,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7432,
                                "name": "Identifier",
                                "src": "1493:6:2"
                              }
                            ],
                            "id": 7433,
                            "name": "IndexAccess",
                            "src": "1483:17:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7385,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7434,
                                "name": "Identifier",
                                "src": "1503:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7411,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7435,
                                "name": "Identifier",
                                "src": "1512:6:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7413,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 7436,
                                "name": "Identifier",
                                "src": "1520:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7437,
                                "name": "Literal",
                                "src": "1530:4:2"
                              }
                            ],
                            "id": 7438,
                            "name": "FunctionCall",
                            "src": "1503:32:2"
                          }
                        ],
                        "id": 7439,
                        "name": "Assignment",
                        "src": "1483:52:2"
                      }
                    ],
                    "id": 7440,
                    "name": "ExpressionStatement",
                    "src": "1483:52:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7397,
                              "type": "function (uint8,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7441,
                            "name": "Identifier",
                            "src": "1546:13:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7411,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7442,
                            "name": "Identifier",
                            "src": "1560:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7413,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7443,
                            "name": "Identifier",
                            "src": "1568:8:2"
                          }
                        ],
                        "id": 7444,
                        "name": "FunctionCall",
                        "src": "1546:31:2"
                      }
                    ],
                    "id": 7445,
                    "name": "EmitStatement",
                    "src": "1541:36:2"
                  }
                ],
                "id": 7446,
                "name": "Block",
                "src": "1371:211:2"
              }
            ],
            "id": 7447,
            "name": "FunctionDefinition",
            "src": "1311:271:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNtf",
              "scope": 7496,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7448,
                        "name": "ElementaryTypeName",
                        "src": "1609:5:2"
                      }
                    ],
                    "id": 7449,
                    "name": "VariableDeclaration",
                    "src": "1609:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7450,
                            "name": "ElementaryTypeName",
                            "src": "1627:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7451,
                            "name": "Literal",
                            "src": "1632:1:2"
                          }
                        ],
                        "id": 7452,
                        "name": "ArrayTypeName",
                        "src": "1627:7:2"
                      }
                    ],
                    "id": 7453,
                    "name": "VariableDeclaration",
                    "src": "1627:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7454,
                                "name": "ElementaryTypeName",
                                "src": "1649:4:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7455,
                                "name": "Literal",
                                "src": "1654:1:2"
                              }
                            ],
                            "id": 7456,
                            "name": "ArrayTypeName",
                            "src": "1649:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7457,
                            "name": "Literal",
                            "src": "1657:1:2"
                          }
                        ],
                        "id": 7458,
                        "name": "ArrayTypeName",
                        "src": "1649:10:2"
                      }
                    ],
                    "id": 7459,
                    "name": "VariableDeclaration",
                    "src": "1649:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7460,
                            "name": "ElementaryTypeName",
                            "src": "1674:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7461,
                            "name": "Literal",
                            "src": "1679:1:2"
                          }
                        ],
                        "id": 7462,
                        "name": "ArrayTypeName",
                        "src": "1674:7:2"
                      }
                    ],
                    "id": 7463,
                    "name": "VariableDeclaration",
                    "src": "1674:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7464,
                            "name": "ElementaryTypeName",
                            "src": "1692:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7465,
                            "name": "Literal",
                            "src": "1697:1:2"
                          }
                        ],
                        "id": 7466,
                        "name": "ArrayTypeName",
                        "src": "1692:7:2"
                      }
                    ],
                    "id": 7467,
                    "name": "VariableDeclaration",
                    "src": "1692:20:2"
                  }
                ],
                "id": 7468,
                "name": "ParameterList",
                "src": "1603:113:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 7495,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7469,
                        "name": "ElementaryTypeName",
                        "src": "1732:4:2"
                      }
                    ],
                    "id": 7470,
                    "name": "VariableDeclaration",
                    "src": "1732:11:2"
                  }
                ],
                "id": 7471,
                "name": "ParameterList",
                "src": "1731:13:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7447,
                              "type": "function (uint8,address)",
                              "value": "addSolution"
                            },
                            "id": 7472,
                            "name": "Identifier",
                            "src": "1897:11:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7449,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7473,
                            "name": "Identifier",
                            "src": "1909:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10379,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7474,
                                "name": "Identifier",
                                "src": "1917:3:2"
                              }
                            ],
                            "id": 7475,
                            "name": "MemberAccess",
                            "src": "1917:10:2"
                          }
                        ],
                        "id": 7476,
                        "name": "FunctionCall",
                        "src": "1897:31:2"
                      }
                    ],
                    "id": 7477,
                    "name": "ExpressionStatement",
                    "src": "1897:31:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7470,
                              "type": "bool",
                              "value": "result"
                            },
                            "id": 7478,
                            "name": "Identifier",
                            "src": "1938:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "mint",
                                  "referencedDeclaration": 1102,
                                  "type": "function (address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10434,
                                      "type": "contract super SolnSquareVerifier",
                                      "value": "super"
                                    },
                                    "id": 7479,
                                    "name": "Identifier",
                                    "src": "1947:5:2"
                                  }
                                ],
                                "id": 7480,
                                "name": "MemberAccess",
                                "src": "1947:10:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10379,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7481,
                                    "name": "Identifier",
                                    "src": "1958:3:2"
                                  }
                                ],
                                "id": 7482,
                                "name": "MemberAccess",
                                "src": "1958:10:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7449,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7483,
                                "name": "Identifier",
                                "src": "1970:6:2"
                              }
                            ],
                            "id": 7484,
                            "name": "FunctionCall",
                            "src": "1947:30:2"
                          }
                        ],
                        "id": 7485,
                        "name": "Assignment",
                        "src": "1938:39:2"
                      }
                    ],
                    "id": 7486,
                    "name": "ExpressionStatement",
                    "src": "1938:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                                  "typeString": "literal_string \"Error minting token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10382,
                                10383
                              ],
                              "referencedDeclaration": 10383,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7487,
                            "name": "Identifier",
                            "src": "1985:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7470,
                                  "type": "bool",
                                  "value": "result"
                                },
                                "id": 7488,
                                "name": "Identifier",
                                "src": "1993:6:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7489,
                                "name": "Literal",
                                "src": "2003:4:2"
                              }
                            ],
                            "id": 7490,
                            "name": "BinaryOperation",
                            "src": "1993:14:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4572726f72206d696e74696e6720746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Error minting token\"",
                              "value": "Error minting token"
                            },
                            "id": 7491,
                            "name": "Literal",
                            "src": "2009:21:2"
                          }
                        ],
                        "id": 7492,
                        "name": "FunctionCall",
                        "src": "1985:46:2"
                      }
                    ],
                    "id": 7493,
                    "name": "ExpressionStatement",
                    "src": "1985:46:2"
                  }
                ],
                "id": 7494,
                "name": "Block",
                "src": "1745:291:2"
              }
            ],
            "id": 7495,
            "name": "FunctionDefinition",
            "src": "1587:449:2"
          }
        ],
        "id": 7496,
        "name": "ContractDefinition",
        "src": "576:1462:2"
      }
    ],
    "id": 7497,
    "name": "SourceUnit",
    "src": "0:2279:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-16T07:42:08.072Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}