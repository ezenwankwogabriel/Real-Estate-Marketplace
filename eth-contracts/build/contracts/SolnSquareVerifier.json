{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "NewTokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unpased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "internalType": "contract SquareVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_index",
          "type": "uint8"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNtf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"NewTokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Unpased\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_index\",\"type\":\"uint8\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintNtf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"internalType\":\"contract SquareVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/Context.sol\":{\"keccak256\":\"0x3d7d1c5526051a968d1d42b7e5d6b86cd6f7c79a7ce5938eb1a2194b6c10101c\",\"urls\":[\"bzz-raw://adf8473cf91ccd9384c68e705ba8e9640f1bdd6f53649a62ed198019ad40fb1a\",\"dweb:/ipfs/QmYk4yKxL9BmLXg831fBbeG3LbxQxXzJoprAwbVwvSGT2g\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x42563e6e3d8cd5861c73f8af316c7c4e986fa4e27694facbd0f1e50191a1baa0\",\"urls\":[\"bzz-raw://06f14bd5b61e2c3a1681eb132331b013ad51f0034e6e99fd247679ac77fc4487\",\"dweb:/ipfs/QmaESknSyqZ4dfNarkTF17PomQRNPinNEpdR8yugbt1DPr\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xe53b34bbcc464816fa64943d1808cc62703dfcc96b322d331437a4db7297d7b8\",\"urls\":[\"bzz-raw://0e5945392390cd8e09b5cfc5a057cb7db34db30b2c1b59ed88072528f28bcc3b\",\"dweb:/ipfs/QmSVGQtDgfdy9PLHZiGvswm1GHLEeLzLx6sV5yocAJQ3DN\"]},\"/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol\":{\"keccak256\":\"0x2fa0d70586782616561fd6a3e54b5732af848953186ae1a2afc04dcb55582162\",\"urls\":[\"bzz-raw://529fd6f7fe47d6ab2108a692993466e9f2474d2cdb3d0d8687025a9083a803c6\",\"dweb:/ipfs/QmdwC9PheLgqAm99XMDsdhwJf7UMMHAov3wDUCHvx7SRNc\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x4573bf23043e3f7124b720a4287e2a525ad3b8d815b6c363e5492a85055cbf32\",\"urls\":[\"bzz-raw://7fb22f66d871aca6d0bbd04e532a7d0c1034df9e75baddd02aea38cf92a764f9\",\"dweb:/ipfs/QmYu6su1mQk39UpY5vUYQTTUi9QWzwQeYVjuRkBo1hWHgL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003e5b38038062003e5b8339818101604052620000379190810190620004d3565b6040518060400160405280600581526020017f47414242590000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f47425900000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003e1c603f9139620000cd6200029060201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200019a60006200029860201b60201c565b620001b26301ffc9a760e01b6200030760201b60201c565b620001ca6380ac58cd60e01b6200030760201b60201c565b620001e263780e9d6360e01b6200030760201b60201c565b82600f9080519060200190620001fa9291906200040d565b508160109080519060200190620002139291906200040d565b5080601190805190602001906200022c9291906200040d565b5062000245635b5e139f60e01b6200030760201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005c2565b600033905090565b620002a8620003a760201b60201c565b620002ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e19062000541565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200033b57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620003f16200029060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200045057805160ff191683800117855562000481565b8280016001018555821562000481579182015b828111156200048057825182559160200191906001019062000463565b5b50905062000490919062000494565b5090565b620004b991905b80821115620004b55760008160009055506001016200049b565b5090565b90565b600081519050620004cd81620005a8565b92915050565b600060208284031215620004e657600080fd5b6000620004f684828501620004bc565b91505092915050565b60006200050e60208362000563565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060208201905081810360008301526200055c81620004ff565b9050919050565b600082825260208201905092915050565b6000620005818262000588565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620005b38162000574565b8114620005bf57600080fd5b50565b61384a80620005d26000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635a156750116100f957806395d89b4111610097578063bdc32be011610071578063bdc32be014610503578063c87b56dd14610521578063e985e9c514610551578063f2fde38b14610581576101c4565b806395d89b41146104ad578063a22cb465146104cb578063b88d4fde146104e7576101c4565b8063715018a6116100d3578063715018a614610437578063716a4f6e146104415780638da5cb5b146104715780638f32d59b1461048f576101c4565b80635a156750146103bb5780636352211e146103d757806370a0823114610407576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f191461032157806342842e0e146103515780634c1b1c931461036d5780634f6ccce71461038b576101c4565b806327dc297e146102b95780632f745c59146102d557806338bbfa5014610305576101c4565b8063095ea7b3116101a2578063095ea7b31461024757806316c38b3c1461026357806318160ddd1461027f57806323b872dd1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de9190810190612a5a565b61059d565b6040516101f09190613274565b60405180910390f35b610201610605565b60405161020e91906132aa565b60405180910390f35b610231600480360361022c9190810190612aac565b6106a7565b60405161023e91906131c6565b60405180910390f35b610261600480360361025c91908101906128f9565b61072c565b005b61027d60048036036102789190810190612935565b6108e3565b005b610287610947565b604051610294919061344c565b60405180910390f35b6102b760048036036102b291908101906127f3565b610954565b005b6102d360048036036102ce9190810190612987565b610b83565b005b6102ef60048036036102ea91908101906128f9565b610bc6565b6040516102fc919061344c565b60405180910390f35b61031f600480360361031a91908101906129db565b610c39565b005b61033b600480360361033691908101906128f9565b610c3e565b6040516103489190613274565b60405180910390f35b61036b600480360361036691908101906127f3565b610d01565b005b610375610d21565b604051610382919061328f565b60405180910390f35b6103a560048036036103a09190810190612aac565b610d47565b6040516103b2919061344c565b60405180910390f35b6103d560048036036103d09190810190612ad5565b610d7b565b005b6103f160048036036103ec9190810190612aac565b610f9c565b6040516103fe91906131c6565b60405180910390f35b610421600480360361041c919081019061278e565b610fd9565b60405161042e919061344c565b60405180910390f35b61043f611025565b005b61045b60048036036104569190810190612b11565b61112b565b6040516104689190613274565b60405180910390f35b610479611292565b60405161048691906131c6565b60405180910390f35b6104976112bb565b6040516104a49190613274565b60405180910390f35b6104b5611319565b6040516104c291906132aa565b60405180910390f35b6104e560048036036104e091908101906128bd565b6113bb565b005b61050160048036036104fc9190810190612842565b6114f1565b005b61050b611517565b60405161051891906132aa565b60405180910390f35b61053b60048036036105369190810190612aac565b6115b9565b60405161054891906132aa565b60405180910390f35b61056b600480360361056691908101906127b7565b611680565b6040516105789190613274565b60405180910390f35b61059b6004803603610596919081019061278e565b611714565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b60006106b282611767565b6106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e89061342c565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61073581610f9c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079a906133ec565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166107c382610f9c565b73ffffffffffffffffffffffffffffffffffffffff1614806107f357506107f26107ec82610f9c565b33611680565b5b610832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108299061330c565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6108eb6112bb565b61092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061336c565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6000600880549050905090565b8273ffffffffffffffffffffffffffffffffffffffff1661097482610f9c565b73ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c19061338c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a319061332c565b60405180910390fd5b610a43816117d9565b610a8a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611897565b610ad1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610bc2828260006040519080825280601f01601f191660200182016040528015610bbc5781602001600182028038833980820191505090505b50610c39565b5050565b6000610bd183610fd9565b8210610bdc57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c2657fe5b9060005260206000200154905092915050565b505050565b6000610c486112bb565b610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e9061336c565b60405180910390fd5b610c9183836118d0565b6060610c9c836118f1565b905080604051610cac91906131af565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b610d1c838383604051806020016040528060008152506114f1565b505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d51610947565b8210610d5c57600080fd5b60088281548110610d6957fe5b90600052602060002001549050919050565b610d83612401565b601460008460ff1660ff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160159054906101000a900460ff161515151581525050905060011515816040015115151514610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a906133ac565b60405180910390fd5b60405180606001604052808460ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601460008560ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507febd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb8383604051610f8f929190613467565b60405180910390a1505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b61102d6112bb565b61106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110639061336c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663621e9ec0878787876040518563ffffffff1660e01b815260040161118f949392919061322d565b60206040518083038186803b1580156111a757600080fd5b505afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111df919081019061295e565b90506001151581151514611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f906133cc565b60405180910390fd5b6112328733610d7b565b61123f338860ff16610c3e565b91506001151582151514611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127f9061340c565b60405180910390fd5b5095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112fd611a1c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b15780601f10611386576101008083540402835291602001916113b1565b820191906000526020600020905b81548152906001019060200180831161139457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113f457600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114e59190613274565b60405180910390a35050565b6114fc848484610954565b61150884848484611a24565b61151157600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115af5780601f10611584576101008083540402835291602001916115af565b820191906000526020600020905b81548152906001019060200180831161159257829003601f168201915b5050505050905090565b60606115c482611767565b6115cd57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116745780601f1061164957610100808354040283529160200191611674565b820191906000526020600020905b81548152906001019060200180831161165757829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61171c6112bb565b61175b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117529061336c565b60405180910390fd5b61176481611b3b565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118945760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6118af60018260000154611c6990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6118da8282611cb3565b6118e48282611e4d565b6118ed81611f14565b5050565b60606118fc82611767565b61193b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611932906132cc565b60405180910390fd5b60606119e960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119d65780601f106119ab576101008083540402835291602001916119d6565b820191906000526020600020905b8154815290600101906020018083116119b957829003601f168201915b50505050506119e485611f60565b61208d565b905080601260008581526020019081526020016000209080519060200190611a1292919061243d565b5080915050919050565b600033905090565b6000611a458473ffffffffffffffffffffffffffffffffffffffff166120d1565b611a525760019050611b33565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611a9394939291906131e1565b602060405180830381600087803b158015611aad57600080fd5b505af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ae59190810190612a83565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba2906132ec565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cab83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120e4565b905092915050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4c9061334c565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dee600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fa8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612088565b600082905060005b60008214611fd2578080600101915050600a8281611fca57fe5b049150611fb0565b6060816040519080825280601f01601f1916602001820160405280156120075781602001600182028038833980820191505090505b50905060006001830390505b6000861461208057600a868161202557fe5b0660300160f81b8282806001900393508151811061203f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161207857fe5b049550612013565b819450505050505b919050565b60606120c9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061213f565b905092915050565b600080823b905060008111915050919050565b600083831115829061212c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212391906132aa565b60405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561219b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612220578881815181106121c757fe5b602001015160f81c60f81b8383806001019450815181106121e457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121b2565b600090505b87518110156122935787818151811061223a57fe5b602001015160f81c60f81b83838060010194508151811061225757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612225565b600090505b8651811015612306578681815181106122ad57fe5b602001015160f81c60f81b8383806001019450815181106122ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612298565b600090505b85518110156123795785818151811061232057fe5b602001015160f81c60f81b83838060010194508151811061233d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061230b565b600090505b84518110156123ec5784818151811061239357fe5b602001015160f81c60f81b8383806001019450815181106123b057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061237e565b82995050505050505050505095945050505050565b6040518060600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061247e57805160ff19168380011785556124ac565b828001600101855582156124ac579182015b828111156124ab578251825591602001919060010190612490565b5b5090506124b991906124bd565b5090565b6124df91905b808211156124db5760008160009055506001016124c3565b5090565b90565b6000813590506124f18161377d565b92915050565b600082601f83011261250857600080fd5b600261251b612516826134bd565b613490565b9150818385604084028201111561253157600080fd5b60005b838110156125615781612547888261256b565b845260208401935060408301925050600181019050612534565b5050505092915050565b600082601f83011261257c57600080fd5b600261258f61258a826134df565b613490565b915081838560208402820111156125a557600080fd5b60005b838110156125d557816125bb8882612764565b8452602084019350602083019250506001810190506125a8565b5050505092915050565b600082601f8301126125f057600080fd5b60026126036125fe82613501565b613490565b9150818385602084028201111561261957600080fd5b60005b83811015612649578161262f8882612764565b84526020840193506020830192505060018101905061261c565b5050505092915050565b60008135905061266281613794565b92915050565b60008151905061267781613794565b92915050565b60008135905061268c816137ab565b92915050565b6000813590506126a1816137c2565b92915050565b6000815190506126b6816137c2565b92915050565b600082601f8301126126cd57600080fd5b81356126e06126db82613523565b613490565b915080825260208301602083018583830111156126fc57600080fd5b61270783828461372a565b50505092915050565b600082601f83011261272157600080fd5b813561273461272f8261354f565b613490565b9150808252602083016020830185838301111561275057600080fd5b61275b83828461372a565b50505092915050565b600081359050612773816137d9565b92915050565b600081359050612788816137f0565b92915050565b6000602082840312156127a057600080fd5b60006127ae848285016124e2565b91505092915050565b600080604083850312156127ca57600080fd5b60006127d8858286016124e2565b92505060206127e9858286016124e2565b9150509250929050565b60008060006060848603121561280857600080fd5b6000612816868287016124e2565b9350506020612827868287016124e2565b925050604061283886828701612764565b9150509250925092565b6000806000806080858703121561285857600080fd5b6000612866878288016124e2565b9450506020612877878288016124e2565b935050604061288887828801612764565b925050606085013567ffffffffffffffff8111156128a557600080fd5b6128b1878288016126bc565b91505092959194509250565b600080604083850312156128d057600080fd5b60006128de858286016124e2565b92505060206128ef85828601612653565b9150509250929050565b6000806040838503121561290c57600080fd5b600061291a858286016124e2565b925050602061292b85828601612764565b9150509250929050565b60006020828403121561294757600080fd5b600061295584828501612653565b91505092915050565b60006020828403121561297057600080fd5b600061297e84828501612668565b91505092915050565b6000806040838503121561299a57600080fd5b60006129a88582860161267d565b925050602083013567ffffffffffffffff8111156129c557600080fd5b6129d185828601612710565b9150509250929050565b6000806000606084860312156129f057600080fd5b60006129fe8682870161267d565b935050602084013567ffffffffffffffff811115612a1b57600080fd5b612a2786828701612710565b925050604084013567ffffffffffffffff811115612a4457600080fd5b612a50868287016126bc565b9150509250925092565b600060208284031215612a6c57600080fd5b6000612a7a84828501612692565b91505092915050565b600060208284031215612a9557600080fd5b6000612aa3848285016126a7565b91505092915050565b600060208284031215612abe57600080fd5b6000612acc84828501612764565b91505092915050565b60008060408385031215612ae857600080fd5b6000612af685828601612779565b9250506020612b07858286016124e2565b9150509250929050565b60008060008060006101608688031215612b2a57600080fd5b6000612b3888828901612779565b9550506020612b49888289016125df565b9450506060612b5a888289016124f7565b93505060e0612b6b888289016125df565b925050610120612b7d888289016125df565b9150509295509295909350565b6000612b968383612c86565b60408301905092915050565b6000612bae8383613182565b60208301905092915050565b612bc3816136d0565b82525050565b612bd281613645565b82525050565b612be181613599565b612beb81846135f7565b9250612bf68261357b565b8060005b83811015612c27578151612c0e8782612b8a565b9650612c19836135d0565b925050600181019050612bfa565b505050505050565b612c38816135af565b612c42818461360d565b9250612c4d8261358f565b8060005b83811015612c7e578151612c658782612ba2565b9650612c70836135ea565b925050600181019050612c51565b505050505050565b612c8f816135a4565b612c998184613602565b9250612ca482613585565b8060005b83811015612cd5578151612cbc8782612ba2565b9650612cc7836135dd565b925050600181019050612ca8565b505050505050565b612ce681613657565b82525050565b6000612cf7826135ba565b612d018185613618565b9350612d11818560208601613739565b612d1a8161376c565b840191505092915050565b612d2e816136e2565b82525050565b6000612d3f826135c5565b612d498185613629565b9350612d59818560208601613739565b612d628161376c565b840191505092915050565b6000612d78826135c5565b612d82818561363a565b9350612d92818560208601613739565b80840191505092915050565b6000612dab602083613629565b91507f546f6b656e20616c72656164792065786973747320696e20706c6174666f726d6000830152602082019050919050565b6000612deb602683613629565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e51603983613629565b91507f4d73672e73656e646572206d757374206265206f776e6572206f72206973417060008301527f70726f766564466f72416c6c206d7573742062652074727565000000000000006020830152604082019050919050565b6000612eb7602483613629565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f1d601e83613629565b91507f546f6b656e20666f72206f776e657220616c72656164792065786973747300006000830152602082019050919050565b6000612f5d602083613629565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612f9d602983613629565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613003601783613629565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b6000613043602c83613629565b91507f43616e6e6f74206d696e742061206e657720746f6b656e2d205665726966696360008301527f6174696f6e206661696c656400000000000000000000000000000000000000006020830152604082019050919050565b60006130a9602183613629565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061310f601383613629565b91507f4572726f72206d696e74696e6720746f6b656e000000000000000000000000006000830152602082019050919050565b600061314f601483613629565b91507f546f6b656e20646f6573206e6f742065786974730000000000000000000000006000830152602082019050919050565b61318b816136b9565b82525050565b61319a816136b9565b82525050565b6131a9816136c3565b82525050565b60006131bb8284612d6d565b915081905092915050565b60006020820190506131db6000830184612bc9565b92915050565b60006080820190506131f66000830187612bba565b6132036020830186612bc9565b6132106040830185613191565b81810360608301526132228184612cec565b905095945050505050565b6000610140820190506132436000830187612c2f565b6132506040830186612bd8565b61325d60c0830185612c2f565b61326b610100830184612c2f565b95945050505050565b60006020820190506132896000830184612cdd565b92915050565b60006020820190506132a46000830184612d25565b92915050565b600060208201905081810360008301526132c48184612d34565b905092915050565b600060208201905081810360008301526132e581612d9e565b9050919050565b6000602082019050818103600083015261330581612dde565b9050919050565b6000602082019050818103600083015261332581612e44565b9050919050565b6000602082019050818103600083015261334581612eaa565b9050919050565b6000602082019050818103600083015261336581612f10565b9050919050565b6000602082019050818103600083015261338581612f50565b9050919050565b600060208201905081810360008301526133a581612f90565b9050919050565b600060208201905081810360008301526133c581612ff6565b9050919050565b600060208201905081810360008301526133e581613036565b9050919050565b600060208201905081810360008301526134058161309c565b9050919050565b6000602082019050818103600083015261342581613102565b9050919050565b6000602082019050818103600083015261344581613142565b9050919050565b60006020820190506134616000830184613191565b92915050565b600060408201905061347c60008301856131a0565b6134896020830184612bc9565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156134b357600080fd5b8060405250919050565b600067ffffffffffffffff8211156134d457600080fd5b602082029050919050565b600067ffffffffffffffff8211156134f657600080fd5b602082029050919050565b600067ffffffffffffffff82111561351857600080fd5b602082029050919050565b600067ffffffffffffffff82111561353a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561356657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061365082613699565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006136db82613706565b9050919050565b60006136ed826136f4565b9050919050565b60006136ff82613699565b9050919050565b600061371182613718565b9050919050565b600061372382613699565b9050919050565b82818337600083830152505050565b60005b8381101561375757808201518184015260208101905061373c565b83811115613766576000848401525b50505050565b6000601f19601f8301169050919050565b61378681613645565b811461379157600080fd5b50565b61379d81613657565b81146137a857600080fd5b50565b6137b481613663565b81146137bf57600080fd5b50565b6137cb8161366d565b81146137d657600080fd5b50565b6137e2816136b9565b81146137ed57600080fd5b50565b6137f9816136c3565b811461380457600080fd5b5056fea365627a7a72315820f832a6366f57818aede44a600e5adc1d78ee02aea4569a9939535d81015200a86c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80635a156750116100f957806395d89b4111610097578063bdc32be011610071578063bdc32be014610503578063c87b56dd14610521578063e985e9c514610551578063f2fde38b14610581576101c4565b806395d89b41146104ad578063a22cb465146104cb578063b88d4fde146104e7576101c4565b8063715018a6116100d3578063715018a614610437578063716a4f6e146104415780638da5cb5b146104715780638f32d59b1461048f576101c4565b80635a156750146103bb5780636352211e146103d757806370a0823114610407576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f191461032157806342842e0e146103515780634c1b1c931461036d5780634f6ccce71461038b576101c4565b806327dc297e146102b95780632f745c59146102d557806338bbfa5014610305576101c4565b8063095ea7b3116101a2578063095ea7b31461024757806316c38b3c1461026357806318160ddd1461027f57806323b872dd1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de9190810190612a5a565b61059d565b6040516101f09190613274565b60405180910390f35b610201610605565b60405161020e91906132aa565b60405180910390f35b610231600480360361022c9190810190612aac565b6106a7565b60405161023e91906131c6565b60405180910390f35b610261600480360361025c91908101906128f9565b61072c565b005b61027d60048036036102789190810190612935565b6108e3565b005b610287610947565b604051610294919061344c565b60405180910390f35b6102b760048036036102b291908101906127f3565b610954565b005b6102d360048036036102ce9190810190612987565b610b83565b005b6102ef60048036036102ea91908101906128f9565b610bc6565b6040516102fc919061344c565b60405180910390f35b61031f600480360361031a91908101906129db565b610c39565b005b61033b600480360361033691908101906128f9565b610c3e565b6040516103489190613274565b60405180910390f35b61036b600480360361036691908101906127f3565b610d01565b005b610375610d21565b604051610382919061328f565b60405180910390f35b6103a560048036036103a09190810190612aac565b610d47565b6040516103b2919061344c565b60405180910390f35b6103d560048036036103d09190810190612ad5565b610d7b565b005b6103f160048036036103ec9190810190612aac565b610f9c565b6040516103fe91906131c6565b60405180910390f35b610421600480360361041c919081019061278e565b610fd9565b60405161042e919061344c565b60405180910390f35b61043f611025565b005b61045b60048036036104569190810190612b11565b61112b565b6040516104689190613274565b60405180910390f35b610479611292565b60405161048691906131c6565b60405180910390f35b6104976112bb565b6040516104a49190613274565b60405180910390f35b6104b5611319565b6040516104c291906132aa565b60405180910390f35b6104e560048036036104e091908101906128bd565b6113bb565b005b61050160048036036104fc9190810190612842565b6114f1565b005b61050b611517565b60405161051891906132aa565b60405180910390f35b61053b60048036036105369190810190612aac565b6115b9565b60405161054891906132aa565b60405180910390f35b61056b600480360361056691908101906127b7565b611680565b6040516105789190613274565b60405180910390f35b61059b6004803603610596919081019061278e565b611714565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b60006106b282611767565b6106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e89061342c565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61073581610f9c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079a906133ec565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166107c382610f9c565b73ffffffffffffffffffffffffffffffffffffffff1614806107f357506107f26107ec82610f9c565b33611680565b5b610832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108299061330c565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6108eb6112bb565b61092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061336c565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6000600880549050905090565b8273ffffffffffffffffffffffffffffffffffffffff1661097482610f9c565b73ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c19061338c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a319061332c565b60405180910390fd5b610a43816117d9565b610a8a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611897565b610ad1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610bc2828260006040519080825280601f01601f191660200182016040528015610bbc5781602001600182028038833980820191505090505b50610c39565b5050565b6000610bd183610fd9565b8210610bdc57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c2657fe5b9060005260206000200154905092915050565b505050565b6000610c486112bb565b610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e9061336c565b60405180910390fd5b610c9183836118d0565b6060610c9c836118f1565b905080604051610cac91906131af565b60405180910390208473ffffffffffffffffffffffffffffffffffffffff167ee705e3614976c3d5c59c0907231ec8257134a4315ad94dd897a1751428d21260405160405180910390a3600191505092915050565b610d1c838383604051806020016040528060008152506114f1565b505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d51610947565b8210610d5c57600080fd5b60088281548110610d6957fe5b90600052602060002001549050919050565b610d83612401565b601460008460ff1660ff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160159054906101000a900460ff161515151581525050905060011515816040015115151514610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a906133ac565b60405180910390fd5b60405180606001604052808460ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601460008560ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507febd7798e7e2f133e2e975e81a521241b5528769d7a37548d355e3c493a9adbcb8383604051610f8f929190613467565b60405180910390a1505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b61102d6112bb565b61106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110639061336c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663621e9ec0878787876040518563ffffffff1660e01b815260040161118f949392919061322d565b60206040518083038186803b1580156111a757600080fd5b505afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111df919081019061295e565b90506001151581151514611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f906133cc565b60405180910390fd5b6112328733610d7b565b61123f338860ff16610c3e565b91506001151582151514611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127f9061340c565b60405180910390fd5b5095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112fd611a1c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b15780601f10611386576101008083540402835291602001916113b1565b820191906000526020600020905b81548152906001019060200180831161139457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113f457600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114e59190613274565b60405180910390a35050565b6114fc848484610954565b61150884848484611a24565b61151157600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115af5780601f10611584576101008083540402835291602001916115af565b820191906000526020600020905b81548152906001019060200180831161159257829003601f168201915b5050505050905090565b60606115c482611767565b6115cd57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116745780601f1061164957610100808354040283529160200191611674565b820191906000526020600020905b81548152906001019060200180831161165757829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61171c6112bb565b61175b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117529061336c565b60405180910390fd5b61176481611b3b565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118945760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6118af60018260000154611c6990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6118da8282611cb3565b6118e48282611e4d565b6118ed81611f14565b5050565b60606118fc82611767565b61193b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611932906132cc565b60405180910390fd5b60606119e960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119d65780601f106119ab576101008083540402835291602001916119d6565b820191906000526020600020905b8154815290600101906020018083116119b957829003601f168201915b50505050506119e485611f60565b61208d565b905080601260008581526020019081526020016000209080519060200190611a1292919061243d565b5080915050919050565b600033905090565b6000611a458473ffffffffffffffffffffffffffffffffffffffff166120d1565b611a525760019050611b33565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611a9394939291906131e1565b602060405180830381600087803b158015611aad57600080fd5b505af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ae59190810190612a83565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba2906132ec565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cab83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120e4565b905092915050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4c9061334c565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dee600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118ba565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fa8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612088565b600082905060005b60008214611fd2578080600101915050600a8281611fca57fe5b049150611fb0565b6060816040519080825280601f01601f1916602001820160405280156120075781602001600182028038833980820191505090505b50905060006001830390505b6000861461208057600a868161202557fe5b0660300160f81b8282806001900393508151811061203f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161207857fe5b049550612013565b819450505050505b919050565b60606120c9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061213f565b905092915050565b600080823b905060008111915050919050565b600083831115829061212c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212391906132aa565b60405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561219b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612220578881815181106121c757fe5b602001015160f81c60f81b8383806001019450815181106121e457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121b2565b600090505b87518110156122935787818151811061223a57fe5b602001015160f81c60f81b83838060010194508151811061225757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612225565b600090505b8651811015612306578681815181106122ad57fe5b602001015160f81c60f81b8383806001019450815181106122ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612298565b600090505b85518110156123795785818151811061232057fe5b602001015160f81c60f81b83838060010194508151811061233d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061230b565b600090505b84518110156123ec5784818151811061239357fe5b602001015160f81c60f81b8383806001019450815181106123b057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061237e565b82995050505050505050505095945050505050565b6040518060600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061247e57805160ff19168380011785556124ac565b828001600101855582156124ac579182015b828111156124ab578251825591602001919060010190612490565b5b5090506124b991906124bd565b5090565b6124df91905b808211156124db5760008160009055506001016124c3565b5090565b90565b6000813590506124f18161377d565b92915050565b600082601f83011261250857600080fd5b600261251b612516826134bd565b613490565b9150818385604084028201111561253157600080fd5b60005b838110156125615781612547888261256b565b845260208401935060408301925050600181019050612534565b5050505092915050565b600082601f83011261257c57600080fd5b600261258f61258a826134df565b613490565b915081838560208402820111156125a557600080fd5b60005b838110156125d557816125bb8882612764565b8452602084019350602083019250506001810190506125a8565b5050505092915050565b600082601f8301126125f057600080fd5b60026126036125fe82613501565b613490565b9150818385602084028201111561261957600080fd5b60005b83811015612649578161262f8882612764565b84526020840193506020830192505060018101905061261c565b5050505092915050565b60008135905061266281613794565b92915050565b60008151905061267781613794565b92915050565b60008135905061268c816137ab565b92915050565b6000813590506126a1816137c2565b92915050565b6000815190506126b6816137c2565b92915050565b600082601f8301126126cd57600080fd5b81356126e06126db82613523565b613490565b915080825260208301602083018583830111156126fc57600080fd5b61270783828461372a565b50505092915050565b600082601f83011261272157600080fd5b813561273461272f8261354f565b613490565b9150808252602083016020830185838301111561275057600080fd5b61275b83828461372a565b50505092915050565b600081359050612773816137d9565b92915050565b600081359050612788816137f0565b92915050565b6000602082840312156127a057600080fd5b60006127ae848285016124e2565b91505092915050565b600080604083850312156127ca57600080fd5b60006127d8858286016124e2565b92505060206127e9858286016124e2565b9150509250929050565b60008060006060848603121561280857600080fd5b6000612816868287016124e2565b9350506020612827868287016124e2565b925050604061283886828701612764565b9150509250925092565b6000806000806080858703121561285857600080fd5b6000612866878288016124e2565b9450506020612877878288016124e2565b935050604061288887828801612764565b925050606085013567ffffffffffffffff8111156128a557600080fd5b6128b1878288016126bc565b91505092959194509250565b600080604083850312156128d057600080fd5b60006128de858286016124e2565b92505060206128ef85828601612653565b9150509250929050565b6000806040838503121561290c57600080fd5b600061291a858286016124e2565b925050602061292b85828601612764565b9150509250929050565b60006020828403121561294757600080fd5b600061295584828501612653565b91505092915050565b60006020828403121561297057600080fd5b600061297e84828501612668565b91505092915050565b6000806040838503121561299a57600080fd5b60006129a88582860161267d565b925050602083013567ffffffffffffffff8111156129c557600080fd5b6129d185828601612710565b9150509250929050565b6000806000606084860312156129f057600080fd5b60006129fe8682870161267d565b935050602084013567ffffffffffffffff811115612a1b57600080fd5b612a2786828701612710565b925050604084013567ffffffffffffffff811115612a4457600080fd5b612a50868287016126bc565b9150509250925092565b600060208284031215612a6c57600080fd5b6000612a7a84828501612692565b91505092915050565b600060208284031215612a9557600080fd5b6000612aa3848285016126a7565b91505092915050565b600060208284031215612abe57600080fd5b6000612acc84828501612764565b91505092915050565b60008060408385031215612ae857600080fd5b6000612af685828601612779565b9250506020612b07858286016124e2565b9150509250929050565b60008060008060006101608688031215612b2a57600080fd5b6000612b3888828901612779565b9550506020612b49888289016125df565b9450506060612b5a888289016124f7565b93505060e0612b6b888289016125df565b925050610120612b7d888289016125df565b9150509295509295909350565b6000612b968383612c86565b60408301905092915050565b6000612bae8383613182565b60208301905092915050565b612bc3816136d0565b82525050565b612bd281613645565b82525050565b612be181613599565b612beb81846135f7565b9250612bf68261357b565b8060005b83811015612c27578151612c0e8782612b8a565b9650612c19836135d0565b925050600181019050612bfa565b505050505050565b612c38816135af565b612c42818461360d565b9250612c4d8261358f565b8060005b83811015612c7e578151612c658782612ba2565b9650612c70836135ea565b925050600181019050612c51565b505050505050565b612c8f816135a4565b612c998184613602565b9250612ca482613585565b8060005b83811015612cd5578151612cbc8782612ba2565b9650612cc7836135dd565b925050600181019050612ca8565b505050505050565b612ce681613657565b82525050565b6000612cf7826135ba565b612d018185613618565b9350612d11818560208601613739565b612d1a8161376c565b840191505092915050565b612d2e816136e2565b82525050565b6000612d3f826135c5565b612d498185613629565b9350612d59818560208601613739565b612d628161376c565b840191505092915050565b6000612d78826135c5565b612d82818561363a565b9350612d92818560208601613739565b80840191505092915050565b6000612dab602083613629565b91507f546f6b656e20616c72656164792065786973747320696e20706c6174666f726d6000830152602082019050919050565b6000612deb602683613629565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e51603983613629565b91507f4d73672e73656e646572206d757374206265206f776e6572206f72206973417060008301527f70726f766564466f72416c6c206d7573742062652074727565000000000000006020830152604082019050919050565b6000612eb7602483613629565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f1d601e83613629565b91507f546f6b656e20666f72206f776e657220616c72656164792065786973747300006000830152602082019050919050565b6000612f5d602083613629565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612f9d602983613629565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613003601783613629565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b6000613043602c83613629565b91507f43616e6e6f74206d696e742061206e657720746f6b656e2d205665726966696360008301527f6174696f6e206661696c656400000000000000000000000000000000000000006020830152604082019050919050565b60006130a9602183613629565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061310f601383613629565b91507f4572726f72206d696e74696e6720746f6b656e000000000000000000000000006000830152602082019050919050565b600061314f601483613629565b91507f546f6b656e20646f6573206e6f742065786974730000000000000000000000006000830152602082019050919050565b61318b816136b9565b82525050565b61319a816136b9565b82525050565b6131a9816136c3565b82525050565b60006131bb8284612d6d565b915081905092915050565b60006020820190506131db6000830184612bc9565b92915050565b60006080820190506131f66000830187612bba565b6132036020830186612bc9565b6132106040830185613191565b81810360608301526132228184612cec565b905095945050505050565b6000610140820190506132436000830187612c2f565b6132506040830186612bd8565b61325d60c0830185612c2f565b61326b610100830184612c2f565b95945050505050565b60006020820190506132896000830184612cdd565b92915050565b60006020820190506132a46000830184612d25565b92915050565b600060208201905081810360008301526132c48184612d34565b905092915050565b600060208201905081810360008301526132e581612d9e565b9050919050565b6000602082019050818103600083015261330581612dde565b9050919050565b6000602082019050818103600083015261332581612e44565b9050919050565b6000602082019050818103600083015261334581612eaa565b9050919050565b6000602082019050818103600083015261336581612f10565b9050919050565b6000602082019050818103600083015261338581612f50565b9050919050565b600060208201905081810360008301526133a581612f90565b9050919050565b600060208201905081810360008301526133c581612ff6565b9050919050565b600060208201905081810360008301526133e581613036565b9050919050565b600060208201905081810360008301526134058161309c565b9050919050565b6000602082019050818103600083015261342581613102565b9050919050565b6000602082019050818103600083015261344581613142565b9050919050565b60006020820190506134616000830184613191565b92915050565b600060408201905061347c60008301856131a0565b6134896020830184612bc9565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156134b357600080fd5b8060405250919050565b600067ffffffffffffffff8211156134d457600080fd5b602082029050919050565b600067ffffffffffffffff8211156134f657600080fd5b602082029050919050565b600067ffffffffffffffff82111561351857600080fd5b602082029050919050565b600067ffffffffffffffff82111561353a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561356657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061365082613699565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006136db82613706565b9050919050565b60006136ed826136f4565b9050919050565b60006136ff82613699565b9050919050565b600061371182613718565b9050919050565b600061372382613699565b9050919050565b82818337600083830152505050565b60005b8381101561375757808201518184015260208101905061373c565b83811115613766576000848401525b50505050565b6000601f19601f8301169050919050565b61378681613645565b811461379157600080fd5b50565b61379d81613657565b81146137a857600080fd5b50565b6137b481613663565b81146137bf57600080fd5b50565b6137cb8161366d565b81146137d657600080fd5b50565b6137e2816136b9565b81146137ed57600080fd5b50565b6137f9816136c3565b811461380457600080fd5b5056fea365627a7a72315820f832a6366f57818aede44a600e5adc1d78ee02aea4569a9939535d81015200a86c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "232:1459:3:-;;;778:103;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:103:3;;;;;;;;;;;;;;;;;;;;;;;;20953:284:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:12;:10;;;:12;;:::i;:::-;615:6;;:21;;;;;;;;;;;;;;;;;;684:6;;;;;;;;;;;651:40;;680:1;651:40;;;;;;;;;;;;2841:16;2851:5;2841:9;;;:16;;:::i;:::-;3664:40;3261:10;3683:20;;3664:18;;;:40;;:::i;:::-;5810;5684:10;5829:20;;5810:18;;;:40;;:::i;:::-;13630:51;13236:10;13649:31;;13630:18;;;:51;;:::i;:::-;21102:4;21094:5;:12;;;;;;;;;;;;:::i;:::-;;21126:6;21116:7;:16;;;;;;;;;;;;:::i;:::-;;21158:12;21142:13;:28;;;;;;;;;;;;:::i;:::-;;21181:49;20764:10;21200:29;;21181:18;;;:49;;:::i;:::-;20953:284;;;860:15:3;828:14;;:48;;;;;;;;;;;;;;;;;;778:103;232:1459;;788:96:0;833:15;867:10;860:17;;788:96;:::o;2870:83:1:-;978:9;:7;;;:9;;:::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;2941:5;2931:7;;:15;;;;;;;;;;;;;;;;;;2870:83;:::o;4014:158::-;4104:10;4089:25;;:11;:25;;;;;4081:34;;;;;;4161:4;4125:20;:33;4146:11;4125:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4014:158;:::o;1125:92::-;1165:4;1204:6;;;;;;;;;;;1188:22;;:12;:10;;;:12;;:::i;:::-;:22;;;1181:29;;1125:92;:::o;232:1459:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:332;;577:67;641:2;636:3;577:67;;;570:74;;677:34;673:1;668:3;664:11;657:55;740:2;735:3;731:12;724:19;;563:186;;;;757:407;;948:2;937:9;933:18;925:26;;998:9;992:4;988:20;984:1;973:9;969:17;962:47;1023:131;1149:4;1023:131;;;1015:139;;919:245;;;;1172:163;;1287:6;1282:3;1275:19;1324:4;1319:3;1315:14;1300:29;;1268:67;;;;;1343:91;;1405:24;1423:5;1405:24;;;1394:35;;1388:46;;;;1441:121;;1514:42;1507:5;1503:54;1492:65;;1486:76;;;;1569:117;1638:24;1656:5;1638:24;;;1631:5;1628:35;1618:2;;1677:1;1674;1667:12;1618:2;1612:74;;232:1459:3;;;;;;;",
  "deployedSourceMap": "232:1459:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:1459:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:133:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21324:78;;;:::i;:::-;;;;;;;;;;;;;;;;7116:226;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6386:724;;;;;;;;;;;;;;;;:::i;:::-;;2870:83;;;;;;;;;;;;;;;;:::i;:::-;;14395:94;;;:::i;:::-;;;;;;;;;;;;;;;;8319:444;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;14061:182:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;23650:230:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8769:132;;;;;;;;;;;;;;;;:::i;:::-;;443:36:3;;;:::i;:::-;;;;;;;;;;;;;;;;14826:148:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;966:271:3;;;;;;;;;;;;;;;;:::i;:::-;;6151:162:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5863:282;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1559:137;;;:::i;:::-;;1242:447:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;774:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;1125:92;;;:::i;:::-;;;;;;;;;;;;;;;;21408:82;;;:::i;:::-;;;;;;;;;;;;;;;;7634:213;;;;;;;;;;;;;;;;:::i;:::-;;8907:211;;;;;;;;;;;;;;;;:::i;:::-;;21496:97;;;:::i;:::-;;;;;;;;;;;;;;;;21599:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8168:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1845:107;;;;;;;;;;;;;;;;:::i;:::-;;3802:133;3872:4;3895:20;:33;3916:11;3895:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3888:40;;3802:133;;;:::o;21324:78::-;21358:13;21390:5;21383:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21324:78;:::o;7116:226::-;7175:7;7253:16;7261:7;7253;:16::i;:::-;7245:49;;;;;;;;;;;;;;;;;;;;;;7311:15;:24;7327:7;7311:24;;;;;;;;;;;;;;;;;;;;;7304:31;;7116:226;;;:::o;6386:724::-;6549:16;6557:7;6549;:16::i;:::-;6543:22;;:2;:22;;;;6535:68;;;;;;;;;;;;;;;;;;;;;;6803:10;6783:30;;:16;6791:7;6783;:16::i;:::-;:30;;;:80;;;;6817:46;6834:16;6842:7;6834;:16::i;:::-;6852:10;6817:16;:46::i;:::-;6783:80;6774:152;;;;;;;;;;;;;;;;;;;;;;7016:2;6989:15;:24;7005:7;6989:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7095:7;7091:2;7070:33;;7079:10;7070:33;;;;;;;;;;;;6386:724;;:::o;2870:83::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;2941:5;2931:7;;:15;;;;;;;;;;;;;;;;;;2870:83;:::o;14395:94::-;14439:7;14465:10;:17;;;;14458:24;;14395:94;:::o;8319:444::-;8429:4;8409:24;;:16;8417:7;8409;:16::i;:::-;:24;;;8401:78;;;;;;;;;;;;;;;;;;;;;;8511:1;8497:16;;:2;:16;;;;8489:65;;;;;;;;;;;;;;;;;;;;;;8565:23;8580:7;8565:14;:23::i;:::-;8599:35;:17;:23;8617:4;8599:23;;;;;;;;;;;;;;;:33;:35::i;:::-;8644:33;:17;:21;8662:2;8644:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8711:2;8688:11;:20;8700:7;8688:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8748:7;8744:2;8729:27;;8738:4;8729:27;;;;;;;;;;;;8319:444;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;14061:182:1:-;14141:7;14176:16;14186:5;14176:9;:16::i;:::-;14168:5;:24;14160:33;;;;;;14210:12;:19;14223:5;14210:19;;;;;;;;;;;;;;;14230:5;14210:26;;;;;;;;;;;;;;;;14203:33;;14061:182;;;;:::o;14929:166:2:-;;;;:::o;23650:230:1:-;23716:4;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;23732:24;23744:2;23748:7;23732:11;:24::i;:::-;23767:17;23787:26;23805:7;23787:17;:26::i;:::-;23767:46;;23847:3;23828:23;;;;;;;;;;;;;;;23843:2;23828:23;;;;;;;;;;;;23869:4;23862:11;;;23650:230;;;;:::o;8769:132::-;8855:39;8872:4;8878:2;8882:7;8855:39;;;;;;;;;;;;:16;:39::i;:::-;8769:132;;;:::o;443:36:3:-;;;;;;;;;;;;;:::o;14826:148:1:-;14884:7;14919:13;:11;:13::i;:::-;14911:5;:21;14903:30;;;;;;14950:10;14961:5;14950:17;;;;;;;;;;;;;;;;14943:24;;14826:148;;;:::o;966:271:3:-;1032:19;;:::i;:::-;1054:9;:17;1064:6;1054:17;;;;;;;;;;;;;;;1032:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:4;1085:19;;1086:3;:10;;;1085:11;:19;;;1077:55;;;;;;;;;;;;;;;;;;;;;;1158:32;;;;;;;;1167:6;1158:32;;;;;;1175:8;1158:32;;;;;;1185:4;1158:32;;;;;1138:9;:17;1148:6;1138:17;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:31;1215:6;1223:8;1201:31;;;;;;;;;;;;;;;;966:271;;;:::o;6151:162:1:-;6206:7;6286:11;:20;6298:7;6286:20;;;;;;;;;;;;;;;;;;;;;6279:27;;6151:162;;;:::o;5863:282::-;5918:7;6107:17;:24;6125:5;6107:24;;;;;;;;;;;;;;;:31;;;6100:38;;5863:282;;;:::o;1559:137::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;1657:1;1620:40;;1641:6;;;;;;;;;;;1620:40;;;;;;;;;;;;1687:1;1670:6;;:19;;;;;;;;;;;;;;;;;;1559:137::o;1242:447:3:-;1387:11;1408:15;1426:14;;;;;;;;;;;:23;;;1450:1;1453;1456;1459:5;1426:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1426:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1426:39:3;;;;;;;;;1408:57;;1495:4;1481:18;;:10;:18;;;1473:75;;;;;;;;;;;;;;;;;;;;;;1556:31;1568:6;1576:10;1556:11;:31::i;:::-;1606:24;1611:10;1623:6;1606:24;;:4;:24::i;:::-;1597:33;;1656:4;1646:14;;:6;:14;;;1638:46;;;;;;;;;;;;;;;;;;;;;;1242:447;;;;;;;;:::o;774:77:1:-;812:7;838:6;;;;;;;;;;;831:13;;774:77;:::o;1125:92::-;1165:4;1204:6;;;;;;;;;;;1188:22;;:12;:10;:12::i;:::-;:22;;;1181:29;;1125:92;:::o;21408:82::-;21444:13;21476:7;21469:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21408:82;:::o;7634:213::-;7719:10;7713:16;;:2;:16;;;;7705:25;;;;;;7777:8;7740:18;:30;7759:10;7740:30;;;;;;;;;;;;;;;:34;7771:2;7740:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7827:2;7800:40;;7815:10;7800:40;;;7831:8;7800:40;;;;;;;;;;;;;;;7634:213;;:::o;8907:211::-;9013:31;9026:4;9032:2;9036:7;9013:12;:31::i;:::-;9062:48;9085:4;9091:2;9095:7;9104:5;9062:22;:48::i;:::-;9054:57;;;;;;8907:211;;;;:::o;21496:97::-;21541:13;21573;21566:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21496:97;:::o;21599:151::-;21657:13;21690:16;21698:7;21690;:16::i;:::-;21682:25;;;;;;21724:10;:19;21735:7;21724:19;;;;;;;;;;;21717:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21599:151;;;:::o;8168:145::-;8248:4;8271:18;:25;8290:5;8271:25;;;;;;;;;;;;;;;:35;8297:8;8271:35;;;;;;;;;;;;;;;;;;;;;;;;;8264:42;;8168:145;;;;:::o;1845:107::-;978:9;:7;:9::i;:::-;970:54;;;;;;;;;;;;;;;;;;;;;;1917:28;1936:8;1917:18;:28::i;:::-;1845:107;:::o;9312:152::-;9369:4;9385:13;9401:11;:20;9413:7;9401:20;;;;;;;;;;;;;;;;;;;;;9385:36;;9455:1;9438:19;;:5;:19;;;;9431:26;;;9312:152;;;:::o;12509:171::-;12608:1;12572:38;;:15;:24;12588:7;12572:24;;;;;;;;;;;;;;;;;;;;;:38;;;12568:106;;12661:1;12626:15;:24;12642:7;12626:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12568:106;12509:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;15843:196:1:-;15906:24;15918:2;15922:7;15906:11;:24::i;:::-;15941:40;15969:2;15973:7;15941:27;:40::i;:::-;15992;16024:7;15992:31;:40::i;:::-;15843:196;;:::o;22228:275::-;22281:13;22314:16;22322:7;22314;:16::i;:::-;22306:61;;;;;;;;;;;;;;;;;;;;;;22377:17;22397:43;22407:13;22397:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22422:17;22431:7;22422:8;:17::i;:::-;22397:9;:43::i;:::-;22377:63;;22472:3;22450:10;:19;22461:7;22450:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;22493:3;22486:10;;;22228:275;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;12081:347:1:-;12202:4;12227:15;:2;:13;;;:15::i;:::-;12222:58;;12265:4;12258:11;;;;12222:58;12290:13;12322:2;12306:36;;;12343:10;12355:4;12361:7;12370:5;12306:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12306:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12306:70:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12306:70:1;;;;;;;;;12290:86;;4817:10;12404:16;;12394:26;;;:6;:26;;;;12386:35;;;12081:347;;;;;;;:::o;2053:225::-;2146:1;2126:22;;:8;:22;;;;2118:73;;;;;;;;;;;;;;;;;;;;;;2235:8;2206:38;;2227:6;;;;;;;;;;;2206:38;;;;;;;;;;;;2263:8;2254:6;;:17;;;;;;;;;;;;;;;;;;2053:225;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;10227:467:1:-;10406:2;10382:26;;:11;:20;10394:7;10382:20;;;;;;;;;;;;;;;;;;;;;:26;;;;10374:69;;;;;;;;;;;;;;;;;;;;;;10557:2;10534:11;:20;10546:7;10534:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10569:33;:17;:21;10587:2;10569:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10679:7;10675:2;10654:33;;10663:10;10654:33;;;;;;;;;;;;10227:467;;:::o;16661:183::-;16774:12;:16;16787:2;16774:16;;;;;;;;;;;;;;;:23;;;;16745:17;:26;16763:7;16745:26;;;;;;;;;;;:52;;;;16807:12;:16;16820:2;16807:16;;;;;;;;;;;;;;;16829:7;16807:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16807:30:1;;;;;;;;;;;;;;;;;;;;;;16661:183;;:::o;17039:161::-;17142:10;:17;;;;17115:15;:24;17131:7;17115:24;;;;;;;;;;;:44;;;;17169:10;17185:7;17169:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17169:24:1;;;;;;;;;;;;;;;;;;;;;;17039:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:468:8:-;746:4;1004:12;1113:7;1101:20;1093:28;;1146:1;1139:4;:8;1132:15;;;686:468;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;232:1459:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;164:673;;298:3;291:4;283:6;279:17;275:27;265:2;;316:1;313;306:12;265:2;340:4;359:97;374:81;448:6;374:81;;;359:97;;;350:106;;473:5;532:6;579:3;571:4;563:6;559:17;554:3;550:27;547:36;544:2;;;596:1;593;586:12;544:2;621:1;606:225;631:6;628:1;625:13;606:225;;;689:3;711:56;763:3;751:10;711:56;;;706:3;699:69;791:4;786:3;782:14;775:21;;819:4;814:3;810:14;803:21;;663:168;653:1;650;646:9;641:14;;606:225;;;610:14;258:579;;;;;;;;864:608;;975:3;968:4;960:6;956:17;952:27;942:2;;993:1;990;983:12;942:2;1017:4;1036:74;1051:58;1102:6;1051:58;;;1036:74;;;1027:83;;1127:5;1186:6;1233:3;1225:4;1217:6;1213:17;1208:3;1204:27;1201:36;1198:2;;;1250:1;1247;1240:12;1198:2;1275:1;1260:206;1285:6;1282:1;1279:13;1260:206;;;1343:3;1365:37;1398:3;1386:10;1365:37;;;1360:3;1353:50;1426:4;1421:3;1417:14;1410:21;;1454:4;1449:3;1445:14;1438:21;;1317:149;1307:1;1304;1300:9;1295:14;;1260:206;;;1264:14;935:537;;;;;;;;1499:616;;1614:3;1607:4;1599:6;1595:17;1591:27;1581:2;;1632:1;1629;1622:12;1581:2;1656:4;1675:78;1690:62;1745:6;1690:62;;;1675:78;;;1666:87;;1770:5;1829:6;1876:3;1868:4;1860:6;1856:17;1851:3;1847:27;1844:36;1841:2;;;1893:1;1890;1883:12;1841:2;1918:1;1903:206;1928:6;1925:1;1922:13;1903:206;;;1986:3;2008:37;2041:3;2029:10;2008:37;;;2003:3;1996:50;2069:4;2064:3;2060:14;2053:21;;2097:4;2092:3;2088:14;2081:21;;1960:149;1950:1;1947;1943:9;1938:14;;1903:206;;;1907:14;1574:541;;;;;;;;2123:124;;2200:6;2187:20;2178:29;;2212:30;2236:5;2212:30;;;2172:75;;;;;2254:128;;2335:6;2329:13;2320:22;;2347:30;2371:5;2347:30;;;2314:68;;;;;2389:130;;2469:6;2456:20;2447:29;;2481:33;2508:5;2481:33;;;2441:78;;;;;2526:128;;2605:6;2592:20;2583:29;;2617:32;2643:5;2617:32;;;2577:77;;;;;2661:132;;2744:6;2738:13;2729:22;;2756:32;2782:5;2756:32;;;2723:70;;;;;2801:440;;2902:3;2895:4;2887:6;2883:17;2879:27;2869:2;;2920:1;2917;2910:12;2869:2;2957:6;2944:20;2979:64;2994:48;3035:6;2994:48;;;2979:64;;;2970:73;;3063:6;3056:5;3049:21;3099:4;3091:6;3087:17;3132:4;3125:5;3121:16;3167:3;3158:6;3153:3;3149:16;3146:25;3143:2;;;3184:1;3181;3174:12;3143:2;3194:41;3228:6;3223:3;3218;3194:41;;;2862:379;;;;;;;;3250:442;;3352:3;3345:4;3337:6;3333:17;3329:27;3319:2;;3370:1;3367;3360:12;3319:2;3407:6;3394:20;3429:65;3444:49;3486:6;3444:49;;;3429:65;;;3420:74;;3514:6;3507:5;3500:21;3550:4;3542:6;3538:17;3583:4;3576:5;3572:16;3618:3;3609:6;3604:3;3600:16;3597:25;3594:2;;;3635:1;3632;3625:12;3594:2;3645:41;3679:6;3674:3;3669;3645:41;;;3312:380;;;;;;;;3700:130;;3780:6;3767:20;3758:29;;3792:33;3819:5;3792:33;;;3752:78;;;;;3837:126;;3915:6;3902:20;3893:29;;3927:31;3952:5;3927:31;;;3887:76;;;;;3970:241;;4074:2;4062:9;4053:7;4049:23;4045:32;4042:2;;;4090:1;4087;4080:12;4042:2;4125:1;4142:53;4187:7;4178:6;4167:9;4163:22;4142:53;;;4132:63;;4104:97;4036:175;;;;;4218:366;;;4339:2;4327:9;4318:7;4314:23;4310:32;4307:2;;;4355:1;4352;4345:12;4307:2;4390:1;4407:53;4452:7;4443:6;4432:9;4428:22;4407:53;;;4397:63;;4369:97;4497:2;4515:53;4560:7;4551:6;4540:9;4536:22;4515:53;;;4505:63;;4476:98;4301:283;;;;;;4591:491;;;;4729:2;4717:9;4708:7;4704:23;4700:32;4697:2;;;4745:1;4742;4735:12;4697:2;4780:1;4797:53;4842:7;4833:6;4822:9;4818:22;4797:53;;;4787:63;;4759:97;4887:2;4905:53;4950:7;4941:6;4930:9;4926:22;4905:53;;;4895:63;;4866:98;4995:2;5013:53;5058:7;5049:6;5038:9;5034:22;5013:53;;;5003:63;;4974:98;4691:391;;;;;;5089:721;;;;;5253:3;5241:9;5232:7;5228:23;5224:33;5221:2;;;5270:1;5267;5260:12;5221:2;5305:1;5322:53;5367:7;5358:6;5347:9;5343:22;5322:53;;;5312:63;;5284:97;5412:2;5430:53;5475:7;5466:6;5455:9;5451:22;5430:53;;;5420:63;;5391:98;5520:2;5538:53;5583:7;5574:6;5563:9;5559:22;5538:53;;;5528:63;;5499:98;5656:2;5645:9;5641:18;5628:32;5680:18;5672:6;5669:30;5666:2;;;5712:1;5709;5702:12;5666:2;5732:62;5786:7;5777:6;5766:9;5762:22;5732:62;;;5722:72;;5607:193;5215:595;;;;;;;;5817:360;;;5935:2;5923:9;5914:7;5910:23;5906:32;5903:2;;;5951:1;5948;5941:12;5903:2;5986:1;6003:53;6048:7;6039:6;6028:9;6024:22;6003:53;;;5993:63;;5965:97;6093:2;6111:50;6153:7;6144:6;6133:9;6129:22;6111:50;;;6101:60;;6072:95;5897:280;;;;;;6184:366;;;6305:2;6293:9;6284:7;6280:23;6276:32;6273:2;;;6321:1;6318;6311:12;6273:2;6356:1;6373:53;6418:7;6409:6;6398:9;6394:22;6373:53;;;6363:63;;6335:97;6463:2;6481:53;6526:7;6517:6;6506:9;6502:22;6481:53;;;6471:63;;6442:98;6267:283;;;;;;6557:235;;6658:2;6646:9;6637:7;6633:23;6629:32;6626:2;;;6674:1;6671;6664:12;6626:2;6709:1;6726:50;6768:7;6759:6;6748:9;6744:22;6726:50;;;6716:60;;6688:94;6620:172;;;;;6799:257;;6911:2;6899:9;6890:7;6886:23;6882:32;6879:2;;;6927:1;6924;6917:12;6879:2;6962:1;6979:61;7032:7;7023:6;7012:9;7008:22;6979:61;;;6969:71;;6941:105;6873:183;;;;;7063:472;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7380:2;7369:9;7365:18;7352:32;7404:18;7396:6;7393:30;7390:2;;;7436:1;7433;7426:12;7390:2;7456:63;7511:7;7502:6;7491:9;7487:22;7456:63;;;7446:73;;7331:194;7156:379;;;;;;7542:701;;;;7699:2;7687:9;7678:7;7674:23;7670:32;7667:2;;;7715:1;7712;7705:12;7667:2;7750:1;7767:53;7812:7;7803:6;7792:9;7788:22;7767:53;;;7757:63;;7729:97;7885:2;7874:9;7870:18;7857:32;7909:18;7901:6;7898:30;7895:2;;;7941:1;7938;7931:12;7895:2;7961:63;8016:7;8007:6;7996:9;7992:22;7961:63;;;7951:73;;7836:194;8089:2;8078:9;8074:18;8061:32;8113:18;8105:6;8102:30;8099:2;;;8145:1;8142;8135:12;8099:2;8165:62;8219:7;8210:6;8199:9;8195:22;8165:62;;;8155:72;;8040:193;7661:582;;;;;;8250:239;;8353:2;8341:9;8332:7;8328:23;8324:32;8321:2;;;8369:1;8366;8359:12;8321:2;8404:1;8421:52;8465:7;8456:6;8445:9;8441:22;8421:52;;;8411:62;;8383:96;8315:174;;;;;8496:261;;8610:2;8598:9;8589:7;8585:23;8581:32;8578:2;;;8626:1;8623;8616:12;8578:2;8661:1;8678:63;8733:7;8724:6;8713:9;8709:22;8678:63;;;8668:73;;8640:107;8572:185;;;;;8764:241;;8868:2;8856:9;8847:7;8843:23;8839:32;8836:2;;;8884:1;8881;8874:12;8836:2;8919:1;8936:53;8981:7;8972:6;8961:9;8957:22;8936:53;;;8926:63;;8898:97;8830:175;;;;;9012:362;;;9131:2;9119:9;9110:7;9106:23;9102:32;9099:2;;;9147:1;9144;9137:12;9099:2;9182:1;9199:51;9242:7;9233:6;9222:9;9218:22;9199:51;;;9189:61;;9161:95;9287:2;9305:53;9350:7;9341:6;9330:9;9326:22;9305:53;;;9295:63;;9266:98;9093:281;;;;;;9381:962;;;;;;9662:3;9650:9;9641:7;9637:23;9633:33;9630:2;;;9679:1;9676;9669:12;9630:2;9714:1;9731:51;9774:7;9765:6;9754:9;9750:22;9731:51;;;9721:61;;9693:95;9819:2;9837:76;9905:7;9896:6;9885:9;9881:22;9837:76;;;9827:86;;9798:121;9950:2;9968:95;10055:7;10046:6;10035:9;10031:22;9968:95;;;9958:105;;9929:140;10100:3;10119:76;10187:7;10178:6;10167:9;10163:22;10119:76;;;10109:86;;10079:122;10232:3;10251:76;10319:7;10310:6;10299:9;10295:22;10251:76;;;10241:86;;10211:122;9624:719;;;;;;;;;10351:253;;10476:88;10560:3;10552:6;10476:88;;;10593:4;10588:3;10584:14;10570:28;;10469:135;;;;;10613:173;;10700:46;10742:3;10734:6;10700:46;;;10775:4;10770:3;10766:14;10752:28;;10693:93;;;;;10794:142;10885:45;10924:5;10885:45;;;10880:3;10873:58;10867:69;;;10943:113;11026:24;11044:5;11026:24;;;11021:3;11014:37;11008:48;;;11102:812;11273:71;11338:5;11273:71;;;11357:103;11453:6;11448:3;11357:103;;;11350:110;;11481:73;11548:5;11481:73;;;11574:7;11602:1;11587:315;11612:6;11609:1;11606:13;11587:315;;;11679:6;11673:13;11700:101;11797:3;11782:13;11700:101;;;11693:108;;11818:77;11888:6;11818:77;;;11808:87;;11644:258;11634:1;11631;11627:9;11622:14;;11587:315;;;11591:14;11252:662;;;;;;11955:660;12088:52;12134:5;12088:52;;;12153:84;12230:6;12225:3;12153:84;;;12146:91;;12258:54;12306:5;12258:54;;;12332:7;12360:1;12345:258;12370:6;12367:1;12364:13;12345:258;;;12437:6;12431:13;12458:63;12517:3;12502:13;12458:63;;;12451:70;;12538:58;12589:6;12538:58;;;12528:68;;12402:201;12392:1;12389;12385:9;12380:14;;12345:258;;;12349:14;12067:548;;;;;;12656:624;12775:48;12817:5;12775:48;;;12836:74;12903:6;12898:3;12836:74;;;12829:81;;12931:50;12975:5;12931:50;;;13001:7;13029:1;13014:254;13039:6;13036:1;13033:13;13014:254;;;13106:6;13100:13;13127:63;13186:3;13171:13;13127:63;;;13120:70;;13207:54;13254:6;13207:54;;;13197:64;;13071:197;13061:1;13058;13054:9;13049:14;;13014:254;;;13018:14;12754:526;;;;;;13288:104;13365:21;13380:5;13365:21;;;13360:3;13353:34;13347:45;;;13399:343;;13509:38;13541:5;13509:38;;;13559:70;13622:6;13617:3;13559:70;;;13552:77;;13634:52;13679:6;13674:3;13667:4;13660:5;13656:16;13634:52;;;13707:29;13729:6;13707:29;;;13702:3;13698:39;13691:46;;13489:253;;;;;;13749:174;13856:61;13911:5;13856:61;;;13851:3;13844:74;13838:85;;;13930:347;;14042:39;14075:5;14042:39;;;14093:71;14157:6;14152:3;14093:71;;;14086:78;;14169:52;14214:6;14209:3;14202:4;14195:5;14191:16;14169:52;;;14242:29;14264:6;14242:29;;;14237:3;14233:39;14226:46;;14022:255;;;;;;14284:360;;14414:39;14447:5;14414:39;;;14465:89;14547:6;14542:3;14465:89;;;14458:96;;14559:52;14604:6;14599:3;14592:4;14585:5;14581:16;14559:52;;;14632:6;14627:3;14623:16;14616:23;;14394:250;;;;;;14652:332;;14812:67;14876:2;14871:3;14812:67;;;14805:74;;14912:34;14908:1;14903:3;14899:11;14892:55;14975:2;14970:3;14966:12;14959:19;;14798:186;;;;14993:375;;15153:67;15217:2;15212:3;15153:67;;;15146:74;;15253:34;15249:1;15244:3;15240:11;15233:55;15322:8;15317:2;15312:3;15308:12;15301:30;15359:2;15354:3;15350:12;15343:19;;15139:229;;;;15377:394;;15537:67;15601:2;15596:3;15537:67;;;15530:74;;15637:34;15633:1;15628:3;15624:11;15617:55;15706:27;15701:2;15696:3;15692:12;15685:49;15762:2;15757:3;15753:12;15746:19;;15523:248;;;;15780:373;;15940:67;16004:2;15999:3;15940:67;;;15933:74;;16040:34;16036:1;16031:3;16027:11;16020:55;16109:6;16104:2;16099:3;16095:12;16088:28;16144:2;16139:3;16135:12;16128:19;;15926:227;;;;16162:330;;16322:67;16386:2;16381:3;16322:67;;;16315:74;;16422:32;16418:1;16413:3;16409:11;16402:53;16483:2;16478:3;16474:12;16467:19;;16308:184;;;;16501:332;;16661:67;16725:2;16720:3;16661:67;;;16654:74;;16761:34;16757:1;16752:3;16748:11;16741:55;16824:2;16819:3;16815:12;16808:19;;16647:186;;;;16842:378;;17002:67;17066:2;17061:3;17002:67;;;16995:74;;17102:34;17098:1;17093:3;17089:11;17082:55;17171:11;17166:2;17161:3;17157:12;17150:33;17211:2;17206:3;17202:12;17195:19;;16988:232;;;;17229:323;;17389:67;17453:2;17448:3;17389:67;;;17382:74;;17489:25;17485:1;17480:3;17476:11;17469:46;17543:2;17538:3;17534:12;17527:19;;17375:177;;;;17561:381;;17721:67;17785:2;17780:3;17721:67;;;17714:74;;17821:34;17817:1;17812:3;17808:11;17801:55;17890:14;17885:2;17880:3;17876:12;17869:36;17933:2;17928:3;17924:12;17917:19;;17707:235;;;;17951:370;;18111:67;18175:2;18170:3;18111:67;;;18104:74;;18211:34;18207:1;18202:3;18198:11;18191:55;18280:3;18275:2;18270:3;18266:12;18259:25;18312:2;18307:3;18303:12;18296:19;;18097:224;;;;18330:319;;18490:67;18554:2;18549:3;18490:67;;;18483:74;;18590:21;18586:1;18581:3;18577:11;18570:42;18640:2;18635:3;18631:12;18624:19;;18476:173;;;;18658:320;;18818:67;18882:2;18877:3;18818:67;;;18811:74;;18918:22;18914:1;18909:3;18905:11;18898:43;18969:2;18964:3;18960:12;18953:19;;18804:174;;;;18986:103;19059:24;19077:5;19059:24;;;19054:3;19047:37;19041:48;;;19096:113;19179:24;19197:5;19179:24;;;19174:3;19167:37;19161:48;;;19216:107;19295:22;19311:5;19295:22;;;19290:3;19283:35;19277:46;;;19330:266;;19476:95;19567:3;19558:6;19476:95;;;19469:102;;19588:3;19581:10;;19457:139;;;;;19603:213;;19721:2;19710:9;19706:18;19698:26;;19735:71;19803:1;19792:9;19788:17;19779:6;19735:71;;;19692:124;;;;;19823:647;;20051:3;20040:9;20036:19;20028:27;;20066:79;20142:1;20131:9;20127:17;20118:6;20066:79;;;20156:72;20224:2;20213:9;20209:18;20200:6;20156:72;;;20239;20307:2;20296:9;20292:18;20283:6;20239:72;;;20359:9;20353:4;20349:20;20344:2;20333:9;20329:18;20322:48;20384:76;20455:4;20446:6;20384:76;;;20376:84;;20022:448;;;;;;;;20477:993;;20901:3;20890:9;20886:19;20878:27;;20916:117;21030:1;21019:9;21015:17;21006:6;20916:117;;;21044:156;21196:2;21185:9;21181:18;21172:6;21044:156;;;21211:119;21325:3;21314:9;21310:19;21301:6;21211:119;;;21341;21455:3;21444:9;21440:19;21431:6;21341:119;;;20872:598;;;;;;;;21477:201;;21589:2;21578:9;21574:18;21566:26;;21603:65;21665:1;21654:9;21650:17;21641:6;21603:65;;;21560:118;;;;;21685:261;;21827:2;21816:9;21812:18;21804:26;;21841:95;21933:1;21922:9;21918:17;21909:6;21841:95;;;21798:148;;;;;21953:301;;22091:2;22080:9;22076:18;22068:26;;22141:9;22135:4;22131:20;22127:1;22116:9;22112:17;22105:47;22166:78;22239:4;22230:6;22166:78;;;22158:86;;22062:192;;;;;22261:407;;22452:2;22441:9;22437:18;22429:26;;22502:9;22496:4;22492:20;22488:1;22477:9;22473:17;22466:47;22527:131;22653:4;22527:131;;;22519:139;;22423:245;;;;22675:407;;22866:2;22855:9;22851:18;22843:26;;22916:9;22910:4;22906:20;22902:1;22891:9;22887:17;22880:47;22941:131;23067:4;22941:131;;;22933:139;;22837:245;;;;23089:407;;23280:2;23269:9;23265:18;23257:26;;23330:9;23324:4;23320:20;23316:1;23305:9;23301:17;23294:47;23355:131;23481:4;23355:131;;;23347:139;;23251:245;;;;23503:407;;23694:2;23683:9;23679:18;23671:26;;23744:9;23738:4;23734:20;23730:1;23719:9;23715:17;23708:47;23769:131;23895:4;23769:131;;;23761:139;;23665:245;;;;23917:407;;24108:2;24097:9;24093:18;24085:26;;24158:9;24152:4;24148:20;24144:1;24133:9;24129:17;24122:47;24183:131;24309:4;24183:131;;;24175:139;;24079:245;;;;24331:407;;24522:2;24511:9;24507:18;24499:26;;24572:9;24566:4;24562:20;24558:1;24547:9;24543:17;24536:47;24597:131;24723:4;24597:131;;;24589:139;;24493:245;;;;24745:407;;24936:2;24925:9;24921:18;24913:26;;24986:9;24980:4;24976:20;24972:1;24961:9;24957:17;24950:47;25011:131;25137:4;25011:131;;;25003:139;;24907:245;;;;25159:407;;25350:2;25339:9;25335:18;25327:26;;25400:9;25394:4;25390:20;25386:1;25375:9;25371:17;25364:47;25425:131;25551:4;25425:131;;;25417:139;;25321:245;;;;25573:407;;25764:2;25753:9;25749:18;25741:26;;25814:9;25808:4;25804:20;25800:1;25789:9;25785:17;25778:47;25839:131;25965:4;25839:131;;;25831:139;;25735:245;;;;25987:407;;26178:2;26167:9;26163:18;26155:26;;26228:9;26222:4;26218:20;26214:1;26203:9;26199:17;26192:47;26253:131;26379:4;26253:131;;;26245:139;;26149:245;;;;26401:407;;26592:2;26581:9;26577:18;26569:26;;26642:9;26636:4;26632:20;26628:1;26617:9;26613:17;26606:47;26667:131;26793:4;26667:131;;;26659:139;;26563:245;;;;26815:407;;27006:2;26995:9;26991:18;26983:26;;27056:9;27050:4;27046:20;27042:1;27031:9;27027:17;27020:47;27081:131;27207:4;27081:131;;;27073:139;;26977:245;;;;27229:213;;27347:2;27336:9;27332:18;27324:26;;27361:71;27429:1;27418:9;27414:17;27405:6;27361:71;;;27318:124;;;;;27449:316;;27591:2;27580:9;27576:18;27568:26;;27605:67;27669:1;27658:9;27654:17;27645:6;27605:67;;;27683:72;27751:2;27740:9;27736:18;27727:6;27683:72;;;27562:203;;;;;;27772:256;;27834:2;27828:9;27818:19;;27872:4;27864:6;27860:17;27971:6;27959:10;27956:22;27935:18;27923:10;27920:34;27917:62;27914:2;;;27992:1;27989;27982:12;27914:2;28012:10;28008:2;28001:22;27812:216;;;;;28035:263;;28211:18;28203:6;28200:30;28197:2;;;28243:1;28240;28233:12;28197:2;28278:4;28270:6;28266:17;28258:25;;28134:164;;;;28305:240;;28458:18;28450:6;28447:30;28444:2;;;28490:1;28487;28480:12;28444:2;28525:4;28517:6;28513:17;28505:25;;28381:164;;;;28552:244;;28709:18;28701:6;28698:30;28695:2;;;28741:1;28738;28731:12;28695:2;28776:4;28768:6;28764:17;28756:25;;28632:164;;;;28803:321;;28946:18;28938:6;28935:30;28932:2;;;28978:1;28975;28968:12;28932:2;29045:4;29041:9;29034:4;29026:6;29022:17;29018:33;29010:41;;29109:4;29103;29099:15;29091:23;;28869:255;;;;29131:322;;29275:18;29267:6;29264:30;29261:2;;;29307:1;29304;29297:12;29261:2;29374:4;29370:9;29363:4;29355:6;29351:17;29347:33;29339:41;;29438:4;29432;29428:15;29420:23;;29198:255;;;;29460:116;;29563:3;29555:11;;29549:27;;;;29583:93;;29663:3;29655:11;;29649:27;;;;29683:97;;29767:3;29759:11;;29753:27;;;;29787:127;;29900:4;29890:14;;29878:36;;;;29921:104;;30011:4;30001:14;;29989:36;;;;30032:108;;30126:4;30116:14;;30104:36;;;;30147:121;;30240:5;30234:12;30224:22;;30205:63;;;;30275:122;;30369:5;30363:12;30353:22;;30334:63;;;;30404:125;;30519:4;30514:3;30510:14;30502:22;;30496:33;;;;30536:102;;30628:4;30623:3;30619:14;30611:22;;30605:33;;;;30645:106;;30741:4;30736:3;30732:14;30724:22;;30718:33;;;;30759:159;;30909:3;30894:18;;30887:31;;;;;30927:130;;31048:3;31033:18;;31026:31;;;;;31066:140;;31197:3;31182:18;;31175:31;;;;;31215:162;;31329:6;31324:3;31317:19;31366:4;31361:3;31357:14;31342:29;;31310:67;;;;;31386:163;;31501:6;31496:3;31489:19;31538:4;31533:3;31529:14;31514:29;;31482:67;;;;;31558:145;;31694:3;31679:18;;31672:31;;;;;31711:91;;31773:24;31791:5;31773:24;;;31762:35;;31756:46;;;;31809:85;;31882:5;31875:13;31868:21;31857:32;;31851:43;;;;31901:72;;31963:5;31952:16;;31946:27;;;;31980:144;;32052:66;32045:5;32041:78;32030:89;;32024:100;;;;32131:121;;32204:42;32197:5;32193:54;32182:65;;32176:76;;;;32259:72;;32321:5;32310:16;;32304:27;;;;32338:81;;32409:4;32402:5;32398:16;32387:27;;32381:38;;;;32426:129;;32513:37;32544:5;32513:37;;;32500:50;;32494:61;;;;32562:169;;32665:61;32720:5;32665:61;;;32652:74;;32646:85;;;;32738:132;;32841:24;32859:5;32841:24;;;32828:37;;32822:48;;;;32877:121;;32956:37;32987:5;32956:37;;;32943:50;;32937:61;;;;33005:108;;33084:24;33102:5;33084:24;;;33071:37;;33065:48;;;;33121:145;33202:6;33197:3;33192;33179:30;33258:1;33249:6;33244:3;33240:16;33233:27;33172:94;;;;33275:268;33340:1;33347:101;33361:6;33358:1;33355:13;33347:101;;;33437:1;33432:3;33428:11;33422:18;33418:1;33413:3;33409:11;33402:39;33383:2;33380:1;33376:10;33371:15;;33347:101;;;33463:6;33460:1;33457:13;33454:2;;;33528:1;33519:6;33514:3;33510:16;33503:27;33454:2;33324:219;;;;;33551:97;;33639:2;33635:7;33630:2;33623:5;33619:14;33615:28;33605:38;;33599:49;;;;33656:117;33725:24;33743:5;33725:24;;;33718:5;33715:35;33705:2;;33764:1;33761;33754:12;33705:2;33699:74;;33780:111;33846:21;33861:5;33846:21;;;33839:5;33836:32;33826:2;;33882:1;33879;33872:12;33826:2;33820:71;;33898:117;33967:24;33985:5;33967:24;;;33960:5;33957:35;33947:2;;34006:1;34003;33996:12;33947:2;33941:74;;34022:115;34090:23;34107:5;34090:23;;;34083:5;34080:34;34070:2;;34128:1;34125;34118:12;34070:2;34064:73;;34144:117;34213:24;34231:5;34213:24;;;34206:5;34203:35;34193:2;;34252:1;34249;34242:12;34193:2;34187:74;;34268:113;34335:22;34351:5;34335:22;;;34328:5;34325:33;34315:2;;34372:1;34369;34362:12;34315:2;34309:72;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\nimport './SquareVerifier.sol';\nimport './ERC721Mintable.sol';\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721MintableComplete {\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n    uint8 _index;\n    address _address;\n    bool exists;\n  }\n  SquareVerifier public squareVerifier;\n\n  // TODO define an array of the above struct\n  // Solution[] solutions;\n\n  // TODO define a mapping to store unique solutions submitted\n  mapping(uint8 => Solution) solutions; \n\n  // TODO Create an event to emit when a solution is added\n  event SolutionAdded(uint8 _index, address _address);\n\n  constructor(address verifierAddress) public {\n    squareVerifier = SquareVerifier(verifierAddress);\n  }\n\n  // TODO Create a function to add the solutions to the array and emit the event\n  function addSolution(uint8 _index, address _address) public {\n    Solution memory sol = solutions[_index];\n    require(!sol.exists == true, 'Solution already exists');\n    solutions[_index] = Solution(_index, _address, true);\n    emit SolutionAdded(_index, _address);\n  } \n\n  function mintNtf(\n    uint8 _index,\n    uint[2] memory a,\n    uint[2][2] memory b,\n    uint[2] memory c, uint[2] memory input\n  ) public returns(bool result) {\n      bool isVerified = squareVerifier.verifyTx(a, b, c, input);\n      require(isVerified == true, \"Cannot mint a new token- Verification failed\");\n      addSolution(_index, msg.sender);  \n      result = mint(msg.sender, _index);\n      require(result == true, 'Error minting token');\n  }\n}\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7638
      ]
    },
    "id": 7639,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7499,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7500,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7501,
        "nodeType": "ImportDirective",
        "scope": 7639,
        "sourceUnit": 10189,
        "src": "67:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7502,
        "nodeType": "ImportDirective",
        "scope": 7639,
        "sourceUnit": 1230,
        "src": "98:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7503,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "263:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1229",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7504,
            "nodeType": "InheritanceSpecifier",
            "src": "263:22:3"
          }
        ],
        "contractDependencies": [
          26,
          145,
          198,
          244,
          759,
          1057,
          1175,
          1229,
          7497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7638,
        "linearizedBaseContracts": [
          7638,
          1229,
          1175,
          7497,
          1057,
          759,
          244,
          198,
          145,
          26
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7511,
            "members": [
              {
                "constant": false,
                "id": 7506,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "384:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 7505,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "384:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7508,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "402:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7507,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7510,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7511,
                "src": "424:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7509,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7638,
            "src": "362:78:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7513,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7638,
            "src": "443:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$10188",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7512,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10188,
              "src": "443:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$10188",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7517,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7638,
            "src": "621:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
              "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7516,
              "keyType": {
                "id": 7514,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "629:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "621:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7515,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7511,
                "src": "638:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7511_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7523,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7519,
                  "indexed": false,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "742:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7521,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "756:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:32:3"
            },
            "src": "722:52:3"
          },
          {
            "body": {
              "id": 7534,
              "nodeType": "Block",
              "src": "822:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7528,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7513,
                      "src": "828:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10188",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7530,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7525,
                          "src": "860:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7529,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10188,
                        "src": "845:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$10188_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "845:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$10188",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "828:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$10188",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7533,
                  "nodeType": "ExpressionStatement",
                  "src": "828:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7525,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7535,
                  "src": "790:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:25:3"
            },
            "returnParameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:3"
            },
            "scope": 7638,
            "src": "778:103:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7572,
              "nodeType": "Block",
              "src": "1026:211:3",
              "statements": [
                {
                  "assignments": [
                    7543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7543,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7572,
                      "src": "1032:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7542,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7511,
                        "src": "1032:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7511_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7547,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7544,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7517,
                      "src": "1054:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                        "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7546,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7545,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7537,
                      "src": "1064:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1054:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7511_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1032:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1085:11:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7549,
                              "name": "sol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7543,
                              "src": "1086:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solution_$7511_memory_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution memory"
                              }
                            },
                            "id": 7550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7510,
                            "src": "1086:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1100:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1085:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10524,
                        10525
                      ],
                      "referencedDeclaration": 10525,
                      "src": "1077:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7556,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "1138:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Solution_$7511_storage_$",
                          "typeString": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7559,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1148:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1138:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7561,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7537,
                          "src": "1167:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7562,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7539,
                          "src": "1175:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1185:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7560,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "1158:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7511_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1158:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7511_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1138:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7511_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7566,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:52:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7568,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1215:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7569,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7539,
                        "src": "1223:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7567,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7523,
                      "src": "1201:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7571,
                  "nodeType": "EmitStatement",
                  "src": "1196:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 7573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7537,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "987:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7539,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "1001:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "986:32:3"
            },
            "returnParameters": {
              "id": 7541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:0:3"
            },
            "scope": 7638,
            "src": "966:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7636,
              "nodeType": "Block",
              "src": "1400:289:3",
              "statements": [
                {
                  "assignments": [
                    7599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7599,
                      "name": "isVerified",
                      "nodeType": "VariableDeclaration",
                      "scope": 7636,
                      "src": "1408:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7598,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1408:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7607,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7579,
                        "src": "1450:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7603,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7585,
                        "src": "1453:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7589,
                        "src": "1456:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7593,
                        "src": "1459:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7600,
                        "name": "squareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7513,
                        "src": "1426:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SquareVerifier_$10188",
                          "typeString": "contract SquareVerifier"
                        }
                      },
                      "id": 7601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyTx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10187,
                      "src": "1426:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view external returns (bool)"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1408:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7609,
                          "name": "isVerified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7599,
                          "src": "1481:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1481:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                        "id": 7612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:46:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        },
                        "value": "Cannot mint a new token- Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                          "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                        }
                      ],
                      "id": 7608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10524,
                        10525
                      ],
                      "referencedDeclaration": 10525,
                      "src": "1473:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7614,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:75:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7616,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7575,
                        "src": "1568:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10521,
                          "src": "1576:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1576:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7615,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7573,
                      "src": "1556:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7620,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7621,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7596,
                      "src": "1597:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7623,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10521,
                            "src": "1611:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1611:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7625,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7575,
                          "src": "1623:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 7622,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "1606:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 7626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1606:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1597:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7628,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7630,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7596,
                          "src": "1646:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1646:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72206d696e74696e6720746f6b656e",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        },
                        "value": "Error minting token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                          "typeString": "literal_string \"Error minting token\""
                        }
                      ],
                      "id": 7629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10524,
                        10525
                      ],
                      "referencedDeclaration": 10525,
                      "src": "1638:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1638:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:46:3"
                }
              ]
            },
            "documentation": null,
            "id": 7637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNtf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7575,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1264:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7574,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7579,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1282:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7576,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1282:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7578,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1287:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1282:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7585,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1304:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7580,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7582,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1309:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1304:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7584,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1312:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1304:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7589,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1329:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7586,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1329:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7588,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1334:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1329:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7593,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1347:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7590,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7592,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1352:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1347:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:113:3"
            },
            "returnParameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7596,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "1387:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:13:3"
            },
            "scope": 7638,
            "src": "1242:447:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7639,
        "src": "232:1459:3"
      }
    ],
    "src": "0:1932:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7638
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7499,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7500,
        "name": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 10189,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7639,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7501,
        "name": "ImportDirective",
        "src": "67:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 1230,
          "absolutePath": "/Users/mymac/Documents/Projects/blockchain/token/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7639,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7502,
        "name": "ImportDirective",
        "src": "98:30:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            145,
            198,
            244,
            759,
            1057,
            1175,
            1229,
            7497
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7638,
            1229,
            1175,
            7497,
            1057,
            759,
            244,
            198,
            145,
            26
          ],
          "name": "SolnSquareVerifier",
          "scope": 7639
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1229,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7503,
                "name": "UserDefinedTypeName",
                "src": "263:22:3"
              }
            ],
            "id": 7504,
            "name": "InheritanceSpecifier",
            "src": "263:22:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7638,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint8",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7505,
                    "name": "ElementaryTypeName",
                    "src": "384:5:3"
                  }
                ],
                "id": 7506,
                "name": "VariableDeclaration",
                "src": "384:12:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7507,
                    "name": "ElementaryTypeName",
                    "src": "402:7:3"
                  }
                ],
                "id": 7508,
                "name": "VariableDeclaration",
                "src": "402:16:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exists",
                  "scope": 7511,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7509,
                    "name": "ElementaryTypeName",
                    "src": "424:4:3"
                  }
                ],
                "id": 7510,
                "name": "VariableDeclaration",
                "src": "424:11:3"
              }
            ],
            "id": 7511,
            "name": "StructDefinition",
            "src": "362:78:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "squareVerifier",
              "scope": 7638,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract SquareVerifier",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 10188,
                  "type": "contract SquareVerifier"
                },
                "id": 7512,
                "name": "UserDefinedTypeName",
                "src": "443:14:3"
              }
            ],
            "id": 7513,
            "name": "VariableDeclaration",
            "src": "443:36:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7638,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 7514,
                    "name": "ElementaryTypeName",
                    "src": "629:5:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7511,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7515,
                    "name": "UserDefinedTypeName",
                    "src": "638:8:3"
                  }
                ],
                "id": 7516,
                "name": "Mapping",
                "src": "621:26:3"
              }
            ],
            "id": 7517,
            "name": "VariableDeclaration",
            "src": "621:36:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_index",
                      "scope": 7523,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7518,
                        "name": "ElementaryTypeName",
                        "src": "742:5:3"
                      }
                    ],
                    "id": 7519,
                    "name": "VariableDeclaration",
                    "src": "742:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7523,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7520,
                        "name": "ElementaryTypeName",
                        "src": "756:7:3"
                      }
                    ],
                    "id": 7521,
                    "name": "VariableDeclaration",
                    "src": "756:16:3"
                  }
                ],
                "id": 7522,
                "name": "ParameterList",
                "src": "741:32:3"
              }
            ],
            "id": 7523,
            "name": "EventDefinition",
            "src": "722:52:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7535,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7524,
                        "name": "ElementaryTypeName",
                        "src": "790:7:3"
                      }
                    ],
                    "id": 7525,
                    "name": "VariableDeclaration",
                    "src": "790:23:3"
                  }
                ],
                "id": 7526,
                "name": "ParameterList",
                "src": "789:25:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7527,
                "name": "ParameterList",
                "src": "822:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract SquareVerifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7513,
                              "type": "contract SquareVerifier",
                              "value": "squareVerifier"
                            },
                            "id": 7528,
                            "name": "Identifier",
                            "src": "828:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract SquareVerifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10188,
                                  "type": "type(contract SquareVerifier)",
                                  "value": "SquareVerifier"
                                },
                                "id": 7529,
                                "name": "Identifier",
                                "src": "845:14:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7525,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7530,
                                "name": "Identifier",
                                "src": "860:15:3"
                              }
                            ],
                            "id": 7531,
                            "name": "FunctionCall",
                            "src": "845:31:3"
                          }
                        ],
                        "id": 7532,
                        "name": "Assignment",
                        "src": "828:48:3"
                      }
                    ],
                    "id": 7533,
                    "name": "ExpressionStatement",
                    "src": "828:48:3"
                  }
                ],
                "id": 7534,
                "name": "Block",
                "src": "822:59:3"
              }
            ],
            "id": 7535,
            "name": "FunctionDefinition",
            "src": "778:103:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7536,
                        "name": "ElementaryTypeName",
                        "src": "987:5:3"
                      }
                    ],
                    "id": 7537,
                    "name": "VariableDeclaration",
                    "src": "987:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7538,
                        "name": "ElementaryTypeName",
                        "src": "1001:7:3"
                      }
                    ],
                    "id": 7539,
                    "name": "VariableDeclaration",
                    "src": "1001:16:3"
                  }
                ],
                "id": 7540,
                "name": "ParameterList",
                "src": "986:32:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7541,
                "name": "ParameterList",
                "src": "1026:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7543
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7572,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7511,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7542,
                            "name": "UserDefinedTypeName",
                            "src": "1032:8:3"
                          }
                        ],
                        "id": 7543,
                        "name": "VariableDeclaration",
                        "src": "1032:19:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7517,
                              "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                              "value": "solutions"
                            },
                            "id": 7544,
                            "name": "Identifier",
                            "src": "1054:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7537,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7545,
                            "name": "Identifier",
                            "src": "1064:6:3"
                          }
                        ],
                        "id": 7546,
                        "name": "IndexAccess",
                        "src": "1054:17:3"
                      }
                    ],
                    "id": 7547,
                    "name": "VariableDeclarationStatement",
                    "src": "1032:39:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                                  "typeString": "literal_string \"Solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10524,
                                10525
                              ],
                              "referencedDeclaration": 10525,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7548,
                            "name": "Identifier",
                            "src": "1077:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "exists",
                                      "referencedDeclaration": 7510,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7543,
                                          "type": "struct SolnSquareVerifier.Solution memory",
                                          "value": "sol"
                                        },
                                        "id": 7549,
                                        "name": "Identifier",
                                        "src": "1086:3:3"
                                      }
                                    ],
                                    "id": 7550,
                                    "name": "MemberAccess",
                                    "src": "1086:10:3"
                                  }
                                ],
                                "id": 7551,
                                "name": "UnaryOperation",
                                "src": "1085:11:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7552,
                                "name": "Literal",
                                "src": "1100:4:3"
                              }
                            ],
                            "id": 7553,
                            "name": "BinaryOperation",
                            "src": "1085:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists\"",
                              "value": "Solution already exists"
                            },
                            "id": 7554,
                            "name": "Literal",
                            "src": "1106:25:3"
                          }
                        ],
                        "id": 7555,
                        "name": "FunctionCall",
                        "src": "1077:55:3"
                      }
                    ],
                    "id": 7556,
                    "name": "ExpressionStatement",
                    "src": "1077:55:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7517,
                                  "type": "mapping(uint8 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7557,
                                "name": "Identifier",
                                "src": "1138:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7537,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7558,
                                "name": "Identifier",
                                "src": "1148:6:3"
                              }
                            ],
                            "id": 7559,
                            "name": "IndexAccess",
                            "src": "1138:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7511,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7560,
                                "name": "Identifier",
                                "src": "1158:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7537,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7561,
                                "name": "Identifier",
                                "src": "1167:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7539,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 7562,
                                "name": "Identifier",
                                "src": "1175:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7563,
                                "name": "Literal",
                                "src": "1185:4:3"
                              }
                            ],
                            "id": 7564,
                            "name": "FunctionCall",
                            "src": "1158:32:3"
                          }
                        ],
                        "id": 7565,
                        "name": "Assignment",
                        "src": "1138:52:3"
                      }
                    ],
                    "id": 7566,
                    "name": "ExpressionStatement",
                    "src": "1138:52:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7523,
                              "type": "function (uint8,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7567,
                            "name": "Identifier",
                            "src": "1201:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7537,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7568,
                            "name": "Identifier",
                            "src": "1215:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7539,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7569,
                            "name": "Identifier",
                            "src": "1223:8:3"
                          }
                        ],
                        "id": 7570,
                        "name": "FunctionCall",
                        "src": "1201:31:3"
                      }
                    ],
                    "id": 7571,
                    "name": "EmitStatement",
                    "src": "1196:36:3"
                  }
                ],
                "id": 7572,
                "name": "Block",
                "src": "1026:211:3"
              }
            ],
            "id": 7573,
            "name": "FunctionDefinition",
            "src": "966:271:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNtf",
              "scope": 7638,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 7574,
                        "name": "ElementaryTypeName",
                        "src": "1264:5:3"
                      }
                    ],
                    "id": 7575,
                    "name": "VariableDeclaration",
                    "src": "1264:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7576,
                            "name": "ElementaryTypeName",
                            "src": "1282:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7577,
                            "name": "Literal",
                            "src": "1287:1:3"
                          }
                        ],
                        "id": 7578,
                        "name": "ArrayTypeName",
                        "src": "1282:7:3"
                      }
                    ],
                    "id": 7579,
                    "name": "VariableDeclaration",
                    "src": "1282:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7580,
                                "name": "ElementaryTypeName",
                                "src": "1304:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7581,
                                "name": "Literal",
                                "src": "1309:1:3"
                              }
                            ],
                            "id": 7582,
                            "name": "ArrayTypeName",
                            "src": "1304:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7583,
                            "name": "Literal",
                            "src": "1312:1:3"
                          }
                        ],
                        "id": 7584,
                        "name": "ArrayTypeName",
                        "src": "1304:10:3"
                      }
                    ],
                    "id": 7585,
                    "name": "VariableDeclaration",
                    "src": "1304:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7586,
                            "name": "ElementaryTypeName",
                            "src": "1329:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7587,
                            "name": "Literal",
                            "src": "1334:1:3"
                          }
                        ],
                        "id": 7588,
                        "name": "ArrayTypeName",
                        "src": "1329:7:3"
                      }
                    ],
                    "id": 7589,
                    "name": "VariableDeclaration",
                    "src": "1329:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7590,
                            "name": "ElementaryTypeName",
                            "src": "1347:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7591,
                            "name": "Literal",
                            "src": "1352:1:3"
                          }
                        ],
                        "id": 7592,
                        "name": "ArrayTypeName",
                        "src": "1347:7:3"
                      }
                    ],
                    "id": 7593,
                    "name": "VariableDeclaration",
                    "src": "1347:20:3"
                  }
                ],
                "id": 7594,
                "name": "ParameterList",
                "src": "1258:113:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 7637,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7595,
                        "name": "ElementaryTypeName",
                        "src": "1387:4:3"
                      }
                    ],
                    "id": 7596,
                    "name": "VariableDeclaration",
                    "src": "1387:11:3"
                  }
                ],
                "id": 7597,
                "name": "ParameterList",
                "src": "1386:13:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7599
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isVerified",
                          "scope": 7636,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7598,
                            "name": "ElementaryTypeName",
                            "src": "1408:4:3"
                          }
                        ],
                        "id": 7599,
                        "name": "VariableDeclaration",
                        "src": "1408:15:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "verifyTx",
                              "referencedDeclaration": 10187,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7513,
                                  "type": "contract SquareVerifier",
                                  "value": "squareVerifier"
                                },
                                "id": 7600,
                                "name": "Identifier",
                                "src": "1426:14:3"
                              }
                            ],
                            "id": 7601,
                            "name": "MemberAccess",
                            "src": "1426:23:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7579,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7602,
                            "name": "Identifier",
                            "src": "1450:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7585,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7603,
                            "name": "Identifier",
                            "src": "1453:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7589,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7604,
                            "name": "Identifier",
                            "src": "1456:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7593,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7605,
                            "name": "Identifier",
                            "src": "1459:5:3"
                          }
                        ],
                        "id": 7606,
                        "name": "FunctionCall",
                        "src": "1426:39:3"
                      }
                    ],
                    "id": 7607,
                    "name": "VariableDeclarationStatement",
                    "src": "1408:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_adf8b82c408603a7a69da49e3ce764d2bd21c2c975943bfd073aa1fda2e43e30",
                                  "typeString": "literal_string \"Cannot mint a new token- Verification failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10524,
                                10525
                              ],
                              "referencedDeclaration": 10525,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7608,
                            "name": "Identifier",
                            "src": "1473:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7599,
                                  "type": "bool",
                                  "value": "isVerified"
                                },
                                "id": 7609,
                                "name": "Identifier",
                                "src": "1481:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7610,
                                "name": "Literal",
                                "src": "1495:4:3"
                              }
                            ],
                            "id": 7611,
                            "name": "BinaryOperation",
                            "src": "1481:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e6e6f74206d696e742061206e657720746f6b656e2d20566572696669636174696f6e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Cannot mint a new token- Verification failed\"",
                              "value": "Cannot mint a new token- Verification failed"
                            },
                            "id": 7612,
                            "name": "Literal",
                            "src": "1501:46:3"
                          }
                        ],
                        "id": 7613,
                        "name": "FunctionCall",
                        "src": "1473:75:3"
                      }
                    ],
                    "id": 7614,
                    "name": "ExpressionStatement",
                    "src": "1473:75:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7573,
                              "type": "function (uint8,address)",
                              "value": "addSolution"
                            },
                            "id": 7615,
                            "name": "Identifier",
                            "src": "1556:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7575,
                              "type": "uint8",
                              "value": "_index"
                            },
                            "id": 7616,
                            "name": "Identifier",
                            "src": "1568:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10521,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7617,
                                "name": "Identifier",
                                "src": "1576:3:3"
                              }
                            ],
                            "id": 7618,
                            "name": "MemberAccess",
                            "src": "1576:10:3"
                          }
                        ],
                        "id": 7619,
                        "name": "FunctionCall",
                        "src": "1556:31:3"
                      }
                    ],
                    "id": 7620,
                    "name": "ExpressionStatement",
                    "src": "1556:31:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7596,
                              "type": "bool",
                              "value": "result"
                            },
                            "id": 7621,
                            "name": "Identifier",
                            "src": "1597:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1228,
                                  "type": "function (address,uint256) returns (bool)",
                                  "value": "mint"
                                },
                                "id": 7622,
                                "name": "Identifier",
                                "src": "1606:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10521,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7623,
                                    "name": "Identifier",
                                    "src": "1611:3:3"
                                  }
                                ],
                                "id": 7624,
                                "name": "MemberAccess",
                                "src": "1611:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7575,
                                  "type": "uint8",
                                  "value": "_index"
                                },
                                "id": 7625,
                                "name": "Identifier",
                                "src": "1623:6:3"
                              }
                            ],
                            "id": 7626,
                            "name": "FunctionCall",
                            "src": "1606:24:3"
                          }
                        ],
                        "id": 7627,
                        "name": "Assignment",
                        "src": "1597:33:3"
                      }
                    ],
                    "id": 7628,
                    "name": "ExpressionStatement",
                    "src": "1597:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfe19be98a64f53e7bca627968bc624e161fe1ab3df8352fc479d8e71bc473ed",
                                  "typeString": "literal_string \"Error minting token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10524,
                                10525
                              ],
                              "referencedDeclaration": 10525,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7629,
                            "name": "Identifier",
                            "src": "1638:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7596,
                                  "type": "bool",
                                  "value": "result"
                                },
                                "id": 7630,
                                "name": "Identifier",
                                "src": "1646:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7631,
                                "name": "Literal",
                                "src": "1656:4:3"
                              }
                            ],
                            "id": 7632,
                            "name": "BinaryOperation",
                            "src": "1646:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4572726f72206d696e74696e6720746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Error minting token\"",
                              "value": "Error minting token"
                            },
                            "id": 7633,
                            "name": "Literal",
                            "src": "1662:21:3"
                          }
                        ],
                        "id": 7634,
                        "name": "FunctionCall",
                        "src": "1638:46:3"
                      }
                    ],
                    "id": 7635,
                    "name": "ExpressionStatement",
                    "src": "1638:46:3"
                  }
                ],
                "id": 7636,
                "name": "Block",
                "src": "1400:289:3"
              }
            ],
            "id": 7637,
            "name": "FunctionDefinition",
            "src": "1242:447:3"
          }
        ],
        "id": 7638,
        "name": "ContractDefinition",
        "src": "232:1459:3"
      }
    ],
    "id": 7639,
    "name": "SourceUnit",
    "src": "0:1932:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-16T22:55:28.707Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}